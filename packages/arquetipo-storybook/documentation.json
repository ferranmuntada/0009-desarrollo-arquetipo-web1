{
    "pipes": [],
    "interfaces": [
        {
            "name": "ActionsMenuInterface",
            "id": "interface-ActionsMenuInterface-e9bfd6370e7ac0eb577ad1c15b396b8f",
            "file": "projects/app/src/lib/shared/interfaces/data-table/actions.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ActionsMenuInterface {\r\n  id: number;\r\n  name: string;\r\n  icon: string;\r\n  disabled?: boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "AnalyticsInterface",
            "id": "interface-AnalyticsInterface-136023d1fff0890cc7824176092f351e",
            "file": "projects/app/src/lib/pages/analytics/interfaces/analytics.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { SettingProgressInterface } from '../../../shared/interfaces/progress.interface';\r\nimport { ToggleSettingsInterface } from '../../../shared/interfaces/toggle.interface';\r\nimport { SettingBoxInterface } from '../../../shared/interfaces/box.interface';\r\nimport { ButtonInterface } from '../../../shared/interfaces/button.interface';\r\n\r\nexport interface AnalyticsInterface {\r\n  getSettingsProgress(): SettingProgressInterface[];\r\n  getSettingsToggleSettings(): ToggleSettingsInterface;\r\n  getSettingsBox(): SettingBoxInterface;\r\n  getSettingsButton(): ButtonInterface[];\r\n}\r\n",
            "properties": [],
            "indexSignatures": [],
            "kind": 166,
            "methods": [
                {
                    "name": "getSettingsBox",
                    "args": [],
                    "optional": false,
                    "returnType": "SettingBoxInterface",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getSettingsButton",
                    "args": [],
                    "optional": false,
                    "returnType": "ButtonInterface[]",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getSettingsProgress",
                    "args": [],
                    "optional": false,
                    "returnType": "SettingProgressInterface[]",
                    "typeParameters": [],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getSettingsToggleSettings",
                    "args": [],
                    "optional": false,
                    "returnType": "ToggleSettingsInterface",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ]
        },
        {
            "name": "ButtonInterface",
            "id": "interface-ButtonInterface-5eb90c968aeafab157a747b249318c60",
            "file": "projects/app/src/lib/shared/interfaces/button.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ButtonInterface {\r\n  text: string;\r\n  classButton: string;\r\n  isSquare: boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "classButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "isSquare",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "ChkAction",
            "id": "interface-ChkAction-79c06311012fbdbf234110bd6c8963c7",
            "file": "projects/app/src/lib/components/check-box/check-box.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild,\r\n  ElementRef,\r\n  AfterViewInit,\r\n} from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\ninterface ChkAction {\r\n  status: boolean;\r\n  id: string | number;\r\n}\r\ninterface Settings {\r\n  color: string;\r\n  title: string;\r\n  checked: boolean;\r\n  id: string | number;\r\n  callBack?: Subject<boolean>;\r\n}\r\n@Component({\r\n  selector: 'mln-check-box',\r\n  templateUrl: './check-box.component.html',\r\n  styleUrls: ['./check-box.component.scss'],\r\n})\r\nexport class CheckBoxComponent implements OnInit, AfterViewInit {\r\n  // @ViewChild('checkmark') public checkmark!: ElementRef;\r\n  @Output() changeChkAction: EventEmitter<ChkAction> = new EventEmitter<\r\n    ChkAction\r\n  >();\r\n  @Input() public set settings(settings: Settings) {\r\n    /* setTimeout(() => {\r\n      this.checkmark.nativeElement.style.border = '2px solid ' + settings.color;\r\n      this.checkmark.nativeElement.style.backgroundColor = settings.color;\r\n    }, 120); */\r\n    this.settings$ = settings;\r\n  }\r\n  public get settings(): Settings {\r\n    return this.settings$;\r\n  }\r\n\r\n  private settings$: any;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  ngAfterViewInit(): void {}\r\n\r\n  public changeChk(status: boolean, callback?: any): void {\r\n    callback.next(status);\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | number",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "DataColumns",
            "id": "interface-DataColumns-f5c4fab9d43b81fffb503008b9ee34de",
            "file": "projects/app/src/lib/shared/interfaces/data-columns.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "type Types = 'text' | 'money' | 'date' | 'select' | 'toggle' | string;\r\n\r\nexport interface DataColumns {\r\n    name: string;\r\n    key: string;\r\n    class?: string;\r\n    hidden?: boolean;\r\n    types: {\r\n        type: Types;\r\n        settings?: any;\r\n        format?: string;\r\n    };\r\n}\r\n",
            "properties": [
                {
                    "name": "class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "hidden",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "types",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "DataTableInterface",
            "id": "interface-DataTableInterface-b9ffd5c8808f1c726bacffdfac440b12",
            "file": "projects/app/src/lib/shared/interfaces/data-table/datatable.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DataTableInterface {\r\n    id: number;\r\n    description: string;\r\n    type: string;\r\n    amount: number;\r\n    date: Date;\r\n    status: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "amount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "MenuItems",
            "id": "interface-MenuItems-74a67638854dceba3539086b862aa01e",
            "file": "projects/app/src/lib/shared/interfaces/menuitems.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface MenuItems {\r\n  text: string;\r\n  class: string;\r\n  navigation: string;\r\n  disabled?: boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "navigation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "ProgressInfoInterface",
            "id": "interface-ProgressInfoInterface-55d15536d47289334a0fe90df8705c5b",
            "file": "projects/app/src/lib/shared/interfaces/progress.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ProgressInfoInterface {\r\n  amount: string;\r\n  text: string;\r\n}\r\n\r\nexport interface SettingProgressInterface {\r\n  deadline: string;\r\n  time: string;\r\n  progressInfo: Array<ProgressInfoInterface>;\r\n}\r\n",
            "properties": [
                {
                    "name": "amount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "SettingBoxInterface",
            "id": "interface-SettingBoxInterface-e968e429b4fdaa1d469ceace2b9a6e6f",
            "file": "projects/app/src/lib/shared/interfaces/box.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface SettingBoxInterface {\r\n  amountNumber: string;\r\n  amountDecimal: string;\r\n  amountText: string;\r\n  footerText: string;\r\n  listItems: string[];\r\n}\r\n",
            "properties": [
                {
                    "name": "amountDecimal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "amountNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "amountText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "footerText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "listItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "SettingProgressInterface",
            "id": "interface-SettingProgressInterface-55d15536d47289334a0fe90df8705c5b",
            "file": "projects/app/src/lib/shared/interfaces/progress.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ProgressInfoInterface {\r\n  amount: string;\r\n  text: string;\r\n}\r\n\r\nexport interface SettingProgressInterface {\r\n  deadline: string;\r\n  time: string;\r\n  progressInfo: Array<ProgressInfoInterface>;\r\n}\r\n",
            "properties": [
                {
                    "name": "deadline",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "progressInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<ProgressInfoInterface>",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "time",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "Settings",
            "id": "interface-Settings-79c06311012fbdbf234110bd6c8963c7",
            "file": "projects/app/src/lib/components/check-box/check-box.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild,\r\n  ElementRef,\r\n  AfterViewInit,\r\n} from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\ninterface ChkAction {\r\n  status: boolean;\r\n  id: string | number;\r\n}\r\ninterface Settings {\r\n  color: string;\r\n  title: string;\r\n  checked: boolean;\r\n  id: string | number;\r\n  callBack?: Subject<boolean>;\r\n}\r\n@Component({\r\n  selector: 'mln-check-box',\r\n  templateUrl: './check-box.component.html',\r\n  styleUrls: ['./check-box.component.scss'],\r\n})\r\nexport class CheckBoxComponent implements OnInit, AfterViewInit {\r\n  // @ViewChild('checkmark') public checkmark!: ElementRef;\r\n  @Output() changeChkAction: EventEmitter<ChkAction> = new EventEmitter<\r\n    ChkAction\r\n  >();\r\n  @Input() public set settings(settings: Settings) {\r\n    /* setTimeout(() => {\r\n      this.checkmark.nativeElement.style.border = '2px solid ' + settings.color;\r\n      this.checkmark.nativeElement.style.backgroundColor = settings.color;\r\n    }, 120); */\r\n    this.settings$ = settings;\r\n  }\r\n  public get settings(): Settings {\r\n    return this.settings$;\r\n  }\r\n\r\n  private settings$: any;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  ngAfterViewInit(): void {}\r\n\r\n  public changeChk(status: boolean, callback?: any): void {\r\n    callback.next(status);\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "callBack",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<boolean>",
                    "optional": true,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "checked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | number",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "SettingsInterface",
            "id": "interface-SettingsInterface-8bdc6fb67c30710bf1db32ec7d0fc576",
            "file": "projects/app/src/lib/shared/interfaces/select/select.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface SettingsInterface {\r\n  title: string;\r\n  firstOption: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "firstOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "ToggleSettingsInterface",
            "id": "interface-ToggleSettingsInterface-a34f0faca9af0366b2d56f201a1dd2c7",
            "file": "projects/app/src/lib/shared/interfaces/toggle.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ToggleSettingsInterface {\r\n  first: string;\r\n  second: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "first",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "second",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "UserInterface",
            "id": "interface-UserInterface-834ed4e22463f0f31a51794b1c1487d2",
            "file": "projects/app/src/lib/shared/interfaces/user.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface UserInterface {\r\n    name: string;\r\n    lastname: string;\r\n    nif?: string;\r\n    type?: string;\r\n    available?: boolean;\r\n    patrimony?: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "available",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "lastname",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "nif",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "patrimony",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "CustomPaginator",
            "id": "injectable-CustomPaginator-6288fb938cdf05c5637827681fe03187",
            "file": "projects/app/src/lib/components/datatable/datatable.module.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { NgModule, CUSTOM_ELEMENTS_SCHEMA, Injectable } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DatatableComponent } from './datatable.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { SelectModule } from '../select';\r\nimport {\r\n  MatPaginatorModule,\r\n  MatPaginatorIntl,\r\n} from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { ButtonModule } from '../button';\r\nimport { SliderToggleModule } from '../slider-toggle';\r\n@Injectable()\r\nexport class CustomPaginator extends MatPaginatorIntl {\r\n  constructor() {\r\n    super();\r\n    this.nextPageLabel = ' Siguiente';\r\n    this.previousPageLabel = ' Atrás';\r\n    this.itemsPerPageLabel = 'Cantidad por página';\r\n  }\r\n}\r\n@NgModule({\r\n  declarations: [DatatableComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    SelectModule,\r\n    ButtonModule,\r\n    SliderToggleModule,\r\n    MatIconModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n    MatTableModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatInputModule,\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  exports: [\r\n    SelectModule,\r\n    ButtonModule,\r\n    SliderToggleModule,\r\n    MatIconModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n    MatTableModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatInputModule,\r\n    DatatableComponent,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: MatPaginatorIntl,\r\n      useClass: CustomPaginator,\r\n    },\r\n  ],\r\n})\r\nexport class DataTableModule {}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 19
            },
            "extends": "MatPaginatorIntl",
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "AnalyticsModel",
            "id": "class-AnalyticsModel-d05d07510d190bb4289c5b6d375b7966",
            "file": "projects/app/src/lib/pages/analytics/models/analytics.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { SettingProgressInterface } from '../../../shared/interfaces/progress.interface';\r\nimport { ToggleSettingsInterface } from '../../../shared/interfaces/toggle.interface';\r\nimport { SettingBoxInterface } from '../../../shared/interfaces/box.interface';\r\nimport { ButtonInterface } from '../../../shared/interfaces/button.interface';\r\nimport { AnalyticsInterface } from '../interfaces/analytics.interface';\r\n\r\nexport class AnalyticsModel implements AnalyticsInterface {\r\n  public getSettingsProgress(): SettingProgressInterface[] {\r\n    return [\r\n      {\r\n        deadline: 'Corto Plazo',\r\n        time: 'menos de 3 años',\r\n        progressInfo: [\r\n          {\r\n            amount: '36.64',\r\n            text: 'Patrimonio',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        deadline: 'Medio Plazo',\r\n        time: 'Entre 3 y 10 años',\r\n        progressInfo: [\r\n          {\r\n            amount: '42.94',\r\n            text: 'Patrimonio',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        deadline: 'Largo Plazo',\r\n        time: 'Más de 10 años',\r\n        progressInfo: [\r\n          {\r\n            amount: '17.24',\r\n            text: 'Patrimonio',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        deadline: 'Jubilación',\r\n        time: '',\r\n        progressInfo: [\r\n          {\r\n            amount: '1.31',\r\n            text: 'Patrimonio',\r\n          },\r\n        ],\r\n      },\r\n    ];\r\n  }\r\n\r\n  public getSettingsToggleSettings(): ToggleSettingsInterface {\r\n    return { first: 'Gráfico', second: 'Detalle' };\r\n  }\r\n\r\n  public getSettingsBox(): SettingBoxInterface {\r\n    return {\r\n      amountNumber: '900.217',\r\n      amountDecimal: ',00 €',\r\n      amountText: 'IMPORTE ANALIZADO',\r\n      listItems: [\r\n        'Servicios Bancarios',\r\n        'Inversiones en forma de Seguro de Vida',\r\n        'Inversiones Bancarias',\r\n      ],\r\n      footerText: 'Editar filtros',\r\n    };\r\n  }\r\n\r\n  public getSettingsButton(): ButtonInterface[] {\r\n    return [\r\n      { text: '1D Temporal', classButton: 'secondary', isSquare: true },\r\n      {\r\n        text: '2D Tipología de título',\r\n        classButton: 'primary',\r\n        isSquare: true,\r\n      },\r\n      { text: '3D Geográfica', classButton: 'primary', isSquare: true },\r\n      {\r\n        text: '4D Potencial de crecimiento',\r\n        classButton: 'primary',\r\n        isSquare: true,\r\n      },\r\n      {\r\n        text: '5D Tipología de producto',\r\n        classButton: 'primary',\r\n        isSquare: true,\r\n      },\r\n    ];\r\n  }\r\n}\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "getSettingsBox",
                    "args": [],
                    "optional": false,
                    "returnType": "SettingBoxInterface",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getSettingsButton",
                    "args": [],
                    "optional": false,
                    "returnType": "ButtonInterface[]",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getSettingsProgress",
                    "args": [],
                    "optional": false,
                    "returnType": "SettingProgressInterface[]",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getSettingsToggleSettings",
                    "args": [],
                    "optional": false,
                    "returnType": "ToggleSettingsInterface",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "AnalyticsInterface"
            ]
        },
        {
            "name": "CONSTANTS",
            "id": "class-CONSTANTS-b9f2a02c24e9fa9399977c7f68a7d852",
            "file": "projects/app/src/lib/shared/utils/constants.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class CONSTANTS {\r\n  public static readonly STATUS_DRAFT_TYPE = 1;\r\n  public static readonly STATUS_PRESENTED_TYPE = 2;\r\n  public static readonly STATUS_DRAFT_LITERAL = 'Borrador';\r\n  public static readonly STATUS_PRESENTED_LITERAL = 'Presentada';\r\n}\r\n",
            "properties": [
                {
                    "name": "STATUS_DRAFT_LITERAL",
                    "defaultValue": "'Borrador'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        124,
                        143
                    ]
                },
                {
                    "name": "STATUS_DRAFT_TYPE",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2,
                    "modifierKind": [
                        124,
                        143
                    ]
                },
                {
                    "name": "STATUS_PRESENTED_LITERAL",
                    "defaultValue": "'Presentada'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        124,
                        143
                    ]
                },
                {
                    "name": "STATUS_PRESENTED_TYPE",
                    "defaultValue": "2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3,
                    "modifierKind": [
                        124,
                        143
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "HeritageModel",
            "id": "class-HeritageModel-df54aa005ac9359dcc06463a864d5640",
            "file": "projects/app/src/lib/pages/heritage/model/heritage.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Subject } from 'rxjs';\r\n\r\nexport class HeritageModel {\r\n  public currency: Intl.NumberFormat = new Intl.NumberFormat('es-ES', {\r\n    style: 'currency',\r\n    currency: 'EUR',\r\n  });\r\n\r\n  constructor() {}\r\n\r\n  public getChartOptions(settings: any): any {\r\n    return {\r\n      dataLabels: {\r\n        enabled: false,\r\n      },\r\n      tooltip: {\r\n        custom: ({ series, seriesIndex, w }) => {\r\n          const percent = (\r\n            (series[seriesIndex] * 100) /\r\n            settings.total\r\n          ).toFixed(2);\r\n          return `\r\n                  <div class=\"tooltipApxCustom\">\r\n                      <div class=\"tooltipheadCustom\">\r\n                          <span class=\"title-first\">${\r\n                            w.globals.labels[seriesIndex]\r\n                          }</span>\r\n                          <span class=\"title-first-amount\" style=\"color: ${\r\n                            w.globals.colors[seriesIndex]\r\n                          }\">${percent} %</span>\r\n                      </div>\r\n                      <span class=\"divider\"></span>\r\n                      <div class=\"tooltipfooterCustom\">\r\n                          <span class=\"title-second\">${\r\n                            settings.popupText\r\n                          }</span>\r\n                          <span class=\"total\">${this.currency.format(\r\n                            series[seriesIndex]\r\n                          )}</span>\r\n                      </div>\r\n                  </div>`;\r\n        },\r\n      },\r\n      colors: settings.colors,\r\n      series: settings.series,\r\n      labels: settings.labels,\r\n      chart: {\r\n        width: '100%',\r\n        height: 330,\r\n        type: 'donut',\r\n        animations: {\r\n          enabled: true,\r\n          easing: 'linear',\r\n          dynamicAnimation: {\r\n            speed: 1000,\r\n          },\r\n        },\r\n      },\r\n      stroke: {\r\n        lineCap: 'round',\r\n        width: 2,\r\n      },\r\n      plotOptions: {\r\n        pie: {\r\n          donut: {\r\n            size: '90%',\r\n          },\r\n          expandOnClick: false,\r\n        },\r\n      },\r\n      legend: { show: false },\r\n    };\r\n  }\r\n\r\n  public getSettingsToggle(): { first: string; second: string } {\r\n    return { first: 'Gráfico', second: 'Detalle' };\r\n  }\r\n\r\n  public getSettingsCheckBox(): {\r\n    title: string;\r\n    checked: boolean;\r\n    id: string | number;\r\n    callBack: Subject<boolean>;\r\n  }[] {\r\n    const testObserver = new Subject<boolean>();\r\n    return [\r\n      {\r\n        title: 'Mediolanum',\r\n        checked: true,\r\n        id: 'medioLanum',\r\n        callBack: testObserver,\r\n      },\r\n      {\r\n        title: 'Otras entidades',\r\n        checked: false,\r\n        id: 'otherEntities',\r\n        callBack: testObserver,\r\n      },\r\n      {\r\n        title: 'Todo el patrimonio',\r\n        checked: false,\r\n        id: 'allHeritage',\r\n        callBack: testObserver,\r\n      },\r\n    ];\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 7
            },
            "properties": [
                {
                    "name": "currency",
                    "defaultValue": "new Intl.NumberFormat('es-ES', {\r\n    style: 'currency',\r\n    currency: 'EUR',\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Intl.NumberFormat",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getChartOptions",
                    "args": [
                        {
                            "name": "settings",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "settings",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getSettingsCheckBox",
                    "args": [],
                    "optional": false,
                    "returnType": "literal type[]",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getSettingsToggle",
                    "args": [],
                    "optional": false,
                    "returnType": "literal type",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AccordionComponent",
            "id": "component-AccordionComponent-3c06010d92d479a7179aec8ff9d408be",
            "file": "projects/app/src/lib/components/accordion/accordion.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mln-accordion",
            "styleUrls": [
                "./accordion.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./accordion.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "multi",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean"
                }
            ],
            "outputsClass": [
                {
                    "name": "closeAction",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "openAction",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "AccordionTabList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<AccordionPanelComponent>",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "undefined"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "AccordionTabListArray",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AccordionPanelComponent[]",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "image",
                    "defaultValue": "'/assets/img/cliente-real.png'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "initAccordionTabs",
                    "args": [
                        {
                            "name": "accodionTab",
                            "type": "AccordionPanelComponent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "accodionTab",
                            "type": "AccordionPanelComponent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": {
                                "pos": 1285,
                                "end": 1290,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "index"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1279,
                                "end": 1284,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>index for the tab.</p>\n"
                        }
                    ]
                },
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n\n",
                    "description": "",
                    "jsdoctags": []
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  AfterContentInit,\r\n  OnDestroy,\r\n  QueryList,\r\n  ContentChildren,\r\n  forwardRef,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n} from '@angular/core';\r\nimport { AccordionPanelComponent } from './accordion-panel/accordion-panel.component';\r\n\r\n@Component({\r\n  selector: 'mln-accordion',\r\n  templateUrl: './accordion.component.html',\r\n  styleUrls: ['./accordion.component.scss'],\r\n})\r\nexport class AccordionComponent implements AfterContentInit, OnDestroy {\r\n  public image = '/assets/img/cliente-real.png';\r\n  public AccordionTabListArray: AccordionPanelComponent[];\r\n\r\n  @Input() public multi: boolean;\r\n  @Output() closeAction: EventEmitter<any> = new EventEmitter();\r\n  @Output() openAction: EventEmitter<any> = new EventEmitter();\r\n  @ContentChildren(forwardRef(() => AccordionPanelComponent))\r\n  public AccordionTabList: QueryList<AccordionPanelComponent>;\r\n\r\n  constructor() {}\r\n\r\n  /**\r\n   * @description Initialize accordion content.\r\n   *\r\n   */\r\n  ngAfterContentInit(): void {\r\n    this.AccordionTabList.forEach((tabInstance, i) =>\r\n      this.initAccordionTabs(tabInstance, i)\r\n    );\r\n    this.AccordionTabListArray = this.AccordionTabList.toArray();\r\n  }\r\n\r\n  /**\r\n   * @description Upadate index of accordion.\r\n   * @param accordionTab any.\r\n   * @param index index for the tab.\r\n   */\r\n  private initAccordionTabs(\r\n    accodionTab: AccordionPanelComponent,\r\n    index: number\r\n  ): void {\r\n    accodionTab.id = index;\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./accordion.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 27
            },
            "implements": [
                "AfterContentInit",
                "OnDestroy"
            ],
            "templateData": "<div class=\"\" role=\"presentation\">\r\n    <ng-content></ng-content>\r\n</div>"
        },
        {
            "name": "AccordionPanelComponent",
            "id": "component-AccordionPanelComponent-beac66536cd3e4a76fb3766aabd49046",
            "file": "projects/app/src/lib/components/accordion/accordion-panel/accordion-panel.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mln-accordion-tab",
            "styleUrls": [
                "./accordion-panel.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./accordion-panel.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "active",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "boolean"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "boolean"
                },
                {
                    "name": "hide",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "boolean"
                },
                {
                    "name": "hideToggle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "boolean"
                },
                {
                    "name": "imageIconUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "string"
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "accordion$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AccordionComponent",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "animate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "iconToggle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "findTabIndex",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n @return index of active tab\n",
                    "description": "<p> @return index of active tab</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1420,
                                "end": 1426,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "originalKeywordKind": 105,
                                "escapedText": "return"
                            },
                            "comment": "<p>index of active tab</p>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onCollapseDone",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": []
                },
                {
                    "name": "toggleCollapse",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n @param event Event\n",
                    "description": "<p> @param event Event</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1735,
                                "end": 1740,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "event"
                            },
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1729,
                                "end": 1734,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Event</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  forwardRef,\r\n  Inject,\r\n  Input,\r\n  OnInit,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { AccordionComponent } from '../accordion.component';\r\nimport {\r\n  trigger,\r\n  state,\r\n  style,\r\n  transition,\r\n  animate,\r\n} from '@angular/animations';\r\n\r\n@Component({\r\n  selector: 'mln-accordion-tab',\r\n  templateUrl: './accordion-panel.component.html',\r\n  styleUrls: ['./accordion-panel.component.scss'],\r\n  animations: [\r\n    trigger('accordionTabContent', [\r\n      state(\r\n        'hidden',\r\n        style({\r\n          height: '0',\r\n        })\r\n      ),\r\n      state(\r\n        'visible',\r\n        style({\r\n          height: '*',\r\n        })\r\n      ),\r\n      transition(\r\n        'visible <=> hidden',\r\n        animate('400ms cubic-bezier(0.86, 0, 0.07, 1)')\r\n      ),\r\n    ]),\r\n  ],\r\n})\r\nexport class AccordionPanelComponent implements OnInit, OnDestroy {\r\n  @Input() public imageIconUrl: string;\r\n  @Input() public hideToggle!: boolean;\r\n  @Input() public title!: string;\r\n\r\n  public iconToggle!: boolean;\r\n\r\n  public animate: boolean;\r\n  @Input() public active: boolean;\r\n  @Input() public disabled: boolean;\r\n  @Input() public hide: boolean;\r\n\r\n  public id: number;\r\n  private accordion$: AccordionComponent;\r\n\r\n  constructor() {\r\n    this.accordion$ = null;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.iconToggle = this.active;\r\n  }\r\n\r\n  /**\r\n   * @description Find the index of actual tab.\r\n   *  @return index of active tab\r\n   */\r\n  public findTabIndex(): number {\r\n    const index = this.accordion$.AccordionTabListArray.findIndex(\r\n      (accordion: AccordionPanelComponent) => accordion === this\r\n    );\r\n    return index;\r\n  }\r\n\r\n  /**\r\n   * @description Enable/disable the collapse component\r\n   *  @param event Event\r\n   */\r\n  public toggleCollapse(event: Event): void {\r\n    if (!this.disabled) {\r\n      this.animate = true;\r\n      const index = this.findTabIndex();\r\n\r\n      if (!this.accordion$.multi && !this.active) {\r\n        this.accordion$.AccordionTabListArray.forEach((accordion) => {\r\n          accordion.active = false;\r\n          accordion.iconToggle = false;\r\n        });\r\n      }\r\n\r\n      if (!this.active) {\r\n        this.accordion$.openAction.emit({ originalEvent: event, index });\r\n      } else {\r\n        this.accordion$.closeAction.emit({ originalEvent: event, index });\r\n      }\r\n      this.active = !this.active;\r\n      this.iconToggle = !this.iconToggle;\r\n    }\r\n    event.preventDefault();\r\n  }\r\n\r\n  /**\r\n   * @description Turn off the animation when the collapse ends.\r\n   */\r\n  public onCollapseDone(): void {\r\n    this.animate = false;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.accordion$?.AccordionTabListArray?.length) {\r\n      this.accordion$.AccordionTabListArray.splice(this.findTabIndex(), 1);\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../../assets/theme/variables.scss\";\r\n@import \"../../../../../assets/theme/tools/tools__pixel-to-rem\";\r\n.mln-accordion-panel {\r\n    &__header {\r\n        background: #f1f5fc;\r\n        position: relative;\r\n        &:hover {\r\n            background: #edf0f5;\r\n        }\r\n    }\r\n    &__action {\r\n        padding: rem(16);\r\n        outline: 0px solid transparent;\r\n        display: block;\r\n        cursor: pointer;\r\n        .toggle-icon {\r\n            &--hidden {\r\n                display: none;\r\n            }\r\n        }\r\n        .block-left {\r\n            margin: 0 2px;\r\n            vertical-align: middle;\r\n        }\r\n        .image-icon {\r\n            display: contents;\r\n            &::before {\r\n                content: var(--image);\r\n                transform: scale(.5);\r\n                display: inline-block;\r\n                vertical-align: middle;\r\n            }\r\n        }\r\n    }\r\n    &__body {\r\n        overflow: hidden;\r\n    }\r\n    &__content {\r\n        margin: 0 auto;\r\n        background: #e2e6ee;\r\n    }\r\n    &--disabled {\r\n        background: #e2e2e22e;\r\n        .mln-accordion-panel__header {\r\n            background: inherit;\r\n        }\r\n        .mln-accordion-panel {\r\n            &__action {\r\n                cursor: default;\r\n                &:hover, &:focus, &:visited {\r\n                    text-decoration: none;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./accordion-panel.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 56
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div class=\"mln-accordion-panel\" [ngClass]=\"{'mln-accordion-panel--disabled': disabled, 'mln-accordion-panel--active': active}\" [hidden]=\"hide\">\r\n    <div class=\"mln-accordion-panel__header\" (click)=\"disabled ? null : iconToggle\">\r\n        <div class=\"mln-accordion-panel__action\" [attr.tabindex]=\"disabled ? -1 : 0\" [attr.id]=\"'header-accordion-tab-' + id\" [attr.aria-controls]=\"'content-accordion-tab-' + id\" role=\"tab\" [attr.aria-expanded]=\"active\" (click)=\"toggleCollapse($event)\" (keydown.space)=\"toggleCollapse($event)\">\r\n            <mat-icon class=\"block-left\" [class.toggle-icon--hidden]=\"hideToggle\">{{iconToggle ? 'keyboard_arrow_down' : 'keyboard_arrow_up' }}</mat-icon>\r\n            <span *ngIf=\"imageIconUrl || title\" class=\"image-icon block-left\" [ngStyle]=\"{'background-image': 'url(' + imageIconUrl + ')'}\"></span>\r\n            <span>{{ title }}</span>\r\n            <ng-content select=\"mln-accordion-header\"></ng-content>\r\n        </div>\r\n    </div>\r\n    <div class=\"mln-accordion-panel__body\" [attr.id]=\"'content-accordion-tab-' + id\" [@accordionTabContent]=\"active ? 'visible' : 'hidden'\" (@accordionTabContent.done)=\"onCollapseDone()\" role=\"region\" [attr.aria-hidden]=\"!active\" [attr.aria-labelledby]=\"'content-accordion-tab-' + id\">\r\n        <div class=\"mln-accordion-panel__content\">\r\n            <ng-content select=\"mln-accordion-content\"></ng-content>\r\n        </div>\r\n    </div>\r\n</div>"
        },
        {
            "name": "AccordionStorybookComponent",
            "id": "component-AccordionStorybookComponent-44948b4e7d7b11ac64d4e477bc34c90c",
            "file": "projects/app/src/lib/components/accordion/accordion-storybook/accordion-storybook.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mln-accordion-storybook",
            "styleUrls": [
                "./accordion-storybook.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./accordion-storybook.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "example",
                    "defaultValue": "'Esperando por cambios'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClose",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onOpen",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mln-accordion-storybook',\r\n  templateUrl: './accordion-storybook.component.html',\r\n  styleUrls: ['./accordion-storybook.component.scss']\r\n})\r\nexport class AccordionStorybookComponent implements OnInit {\r\n  public example = 'Esperando por cambios';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  public onOpen(event: any): void {\r\n    this.example = 'Tab open: ' + event.index;\r\n  }\r\n\r\n  public onClose(event: any): void {\r\n    this.example = 'Tab close: ' + event.index;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../../assets/theme/variables.scss\";\r\n@import \"../../../../../assets/theme/tools/tools__pixel-to-rem\";\r\n.example {\r\n    display: block;\r\n    padding: rem(20);\r\n    color: #4E5C63;\r\n    font-size: 14px;\r\n    font-weight: 700;\r\n    font-family: \"Roboto\"\r\n}",
                    "styleUrl": "./accordion-storybook.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"example\">\r\n    {{ example }}\r\n</div>\r\n<mln-accordion class=\"\" [multi]=\"false\" (openAction)=\"onOpen($event)\" (closeAction)=\"onClose($event)\">\r\n    <mln-accordion-tab [active]=\"true\" title=\"Best Brands L\" imageIconUrl=\"/assets/img/cliente-real.png\">\r\n        <mln-accordion-content>\r\n            1 - \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure\r\n            dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\n        </mln-accordion-content>\r\n    </mln-accordion-tab>\r\n    <mln-accordion-tab>\r\n        <mln-accordion-header>\r\n            Best Brands S\r\n        </mln-accordion-header>\r\n        <mln-accordion-content>\r\n            2 - \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure\r\n            dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\n        </mln-accordion-content>\r\n    </mln-accordion-tab>\r\n    <mln-accordion-tab [disabled]=\"true\">\r\n        <mln-accordion-header>\r\n            Header 3\r\n        </mln-accordion-header>\r\n        <mln-accordion-content>\r\n            3 - \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure\r\n            dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\n        </mln-accordion-content>\r\n    </mln-accordion-tab>\r\n    <mln-accordion-tab [hide]=\"true\">\r\n        <mln-accordion-header>\r\n            Header 4\r\n        </mln-accordion-header>\r\n        <mln-accordion-content>\r\n            4 - \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure\r\n            dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\n        </mln-accordion-content>\r\n    </mln-accordion-tab>\r\n</mln-accordion>"
        },
        {
            "name": "AlertComponent",
            "id": "component-AlertComponent-5a248cadf0c77830458e5476c66c4881",
            "file": "projects/app/src/lib/components/alert/alert.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mln-alert",
            "styleUrls": [
                "./alert.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./alert.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "literal type"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mln-alert',\r\n  templateUrl: './alert.component.html',\r\n  styleUrls: ['./alert.component.scss'],\r\n})\r\nexport class AlertComponent implements OnInit {\r\n  @Input() message: {\r\n    matIcon: string;\r\n    textStart: string;\r\n    textEnd: string;\r\n    link: { text: string; href: string; target: string; };\r\n  };\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../assets/theme/variables.scss\";\r\n.alert-wrapper {\r\n    margin: 10px auto;\r\n    width: 90%;\r\n    background-color: map-get($colors, white) !important;\r\n    border: 1px solid lightgray;\r\n    display: flex;\r\n    min-height: 40px;\r\n    align-items: center;\r\n    .alert-icon {\r\n        margin: 0 30px;\r\n        color: #afbfc6;\r\n        font-size: 32px;\r\n        height: 32px;\r\n        padding-left: 20px;\r\n    }\r\n    .alert-text {\r\n        font-family: 'Roboto';\r\n        padding: 0 40px 0 30px;\r\n        line-height: 1.6;\r\n        text-align: center;\r\n        margin: 15px 0;\r\n    }\r\n    a {\r\n        text-decoration: underline;\r\n        font-family: 'RobotoBold';\r\n        color: map-get($colors, blueLink);\r\n    }\r\n}",
                    "styleUrl": "./alert.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"alert-wrapper\">\r\n    <mat-icon class=\"alert-icon\">{{message.matIcon}}</mat-icon>\r\n    <span class=\"alert-text\">{{message.textStart}} <a [href]=\"message.link?.href\" [target]=\"message.link?.target\">{{message.link.text}}</a>{{message.textEnd}}</span>\r\n</div>"
        },
        {
            "name": "AnalyticsComponent",
            "id": "component-AnalyticsComponent-8bbbc00240179b07ae78c35e03c4ad96",
            "file": "projects/app/src/lib/pages/analytics/analytics.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mln-analytics",
            "styleUrls": [
                "./analytics.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./analytics.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "analyticsDatasource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AnalyticsModel",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "boxItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BoxItemsComponent",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'boxItems', {static: false}"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "customButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButtonComponent",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'customButton', {static: false}"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "headerCustom",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HeaderComponent",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'headerCustom', {static: false}"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "menuItems",
                    "defaultValue": "[\r\n    { text: 'Patrimonio', class: '', navigation: 'heritage', disabled: true },\r\n    { text: 'Análisis 5D', class: 'active', navigation: 'analytics' },\r\n    {\r\n      text: 'Propuestas de inversión',\r\n      class: '',\r\n      navigation: 'proposal',\r\n      disabled: true,\r\n    },\r\n    { text: 'Informes', class: '', navigation: 'reports', disabled: true },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<MenuItems>",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "settings",
                    "defaultValue": "{\r\n    title: `<span>900.217</span><span class='decimal'>,00 €</span>`,\r\n    subTitle: 'IMPORTE ANALIZADO',\r\n    listItems: [\r\n      'Servicios Bancarios',\r\n      'Inversiones en forma de Seguro de Vida',\r\n      'Inversiones Bancarias',\r\n    ],\r\n    footerText: 'Editar filtros',\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "settingsBoxd",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SettingBoxInterface",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "settingsButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButtonInterface[]",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "settingsProgress",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SettingProgressInterface[]",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "statusTextToggleSettings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ToggleSettingsInterface",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "toggleCustom",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SliderToggleComponent",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'toggleCustom', {static: false}"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "user",
                    "defaultValue": "{\r\n    name: 'Carlos Alberto',\r\n    lastname: 'Tauroni Hernandéz',\r\n    patrimony: 35677000.13,\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserInterface",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AnalyticsModel } from './models/analytics.model';\r\nimport { ToggleSettingsInterface } from '../../shared/interfaces/toggle.interface';\r\nimport { SettingProgressInterface } from '../../shared/interfaces/progress.interface';\r\nimport { SettingBoxInterface } from '../../shared/interfaces/box.interface';\r\nimport { ButtonInterface } from '../../shared/interfaces/button.interface';\r\nimport { UserInterface } from '../../shared/interfaces/user.interface';\r\nimport { MenuItems } from '../../shared/interfaces/menuitems.interface';\r\nimport { BoxItemsComponent } from '../../components/box-items';\r\nimport { ButtonComponent } from '../../components/button';\r\nimport { HeaderComponent } from '../../components/header';\r\nimport { SliderToggleComponent } from '../../components/slider-toggle';\r\n\r\n@Component({\r\n  selector: 'mln-analytics',\r\n  templateUrl: './analytics.component.html',\r\n  styleUrls: ['./analytics.component.scss'],\r\n})\r\nexport class AnalyticsComponent implements OnInit {\r\n  @ViewChild('boxItems', { static: false }) public boxItems: BoxItemsComponent;\r\n  @ViewChild('customButton', { static: false })\r\n  public customButton: ButtonComponent;\r\n  @ViewChild('headerCustom', { static: false })\r\n  public headerCustom: HeaderComponent;\r\n  @ViewChild('toggleCustom', { static: false })\r\n  public toggleCustom: SliderToggleComponent;\r\n  public user: UserInterface = {\r\n    name: 'Carlos Alberto',\r\n    lastname: 'Tauroni Hernandéz',\r\n    patrimony: 35677000.13,\r\n  };\r\n  public menuItems: Array<MenuItems> = [\r\n    { text: 'Patrimonio', class: '', navigation: 'heritage', disabled: true },\r\n    { text: 'Análisis 5D', class: 'active', navigation: 'analytics' },\r\n    {\r\n      text: 'Propuestas de inversión',\r\n      class: '',\r\n      navigation: 'proposal',\r\n      disabled: true,\r\n    },\r\n    { text: 'Informes', class: '', navigation: 'reports', disabled: true },\r\n  ];\r\n  public statusTextToggleSettings: ToggleSettingsInterface;\r\n  public settingsProgress: SettingProgressInterface[];\r\n  public settingsBoxd: SettingBoxInterface;\r\n  public settingsButton: ButtonInterface[];\r\n  public analyticsDatasource: AnalyticsModel;\r\n  public settings = {\r\n    title: `<span>900.217</span><span class='decimal'>,00 €</span>`,\r\n    subTitle: 'IMPORTE ANALIZADO',\r\n    listItems: [\r\n      'Servicios Bancarios',\r\n      'Inversiones en forma de Seguro de Vida',\r\n      'Inversiones Bancarias',\r\n    ],\r\n    footerText: 'Editar filtros',\r\n  };\r\n\r\n  constructor() {\r\n    this.analyticsDatasource = new AnalyticsModel();\r\n    this.settingsProgress = this.analyticsDatasource.getSettingsProgress();\r\n    this.statusTextToggleSettings = this.analyticsDatasource.getSettingsToggleSettings();\r\n    this.settingsBoxd = this.analyticsDatasource.getSettingsBox();\r\n    this.settingsButton = this.analyticsDatasource.getSettingsButton();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "ul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n}\r\n\r\nul li a {\r\n    text-decoration: none;\r\n}\r\n\r\n.analytics5d {\r\n   \r\n    background-color: #F1F5FC;\r\n \r\n    &__head {\r\n        margin: 0 auto;\r\n        text-align: center;\r\n        padding-top: 20px;\r\n        ul li {\r\n            display: inline-block;\r\n            padding: 0.5rem;\r\n        }\r\n    }\r\n    &__body {\r\n        display: flex;\r\n        width: 100%;\r\n\r\n        @media only screen and (max-width: 540px) {\r\n            flex-wrap: wrap;\r\n            flex-direction: column-reverse;\r\n            \r\n        }\r\n        &--left {\r\n            width: 70%;\r\n            padding: 0 0 0 20px;\r\n            @media only screen and (max-width: 720px) {\r\n                width: 60%;\r\n            }\r\n            @media only screen and (max-width: 540px) {\r\n                width: 100%;\r\n                padding: 0 20px;\r\n\r\n            }\r\n            box-sizing: border-box;\r\n            .progressbar{\r\n                margin-bottom: 10px;\r\n            }\r\n        }\r\n        &--right {\r\n            width: 30%;\r\n            @media only screen and (max-width: 720px) {\r\n                width: 40%;\r\n              \r\n            }\r\n            @media only screen and (max-width: 540px) {\r\n                width: 100%;\r\n                display: flex;\r\n                flex-direction: column;\r\n                justify-content: center;\r\n                align-items: center;\r\n            }\r\n            padding: 0 20px;\r\n            box-sizing: border-box;\r\n\r\n            .top {\r\n                margin-bottom: 30px;\r\n\r\n                .title{\r\n                    color: #70838B;\r\n                    font-family: 'RobotoBold';\r\n                    font-size: 14px;\r\n                    padding-top: 3px;\r\n                    padding-left: 2px;\r\n\r\n                    @media only screen and (max-width: 540px) {\r\n                    text-align: center;\r\n                    }\r\n                }\r\n\r\n                .check{\r\n                    padding-left: 2px;\r\n                    font-size: 14px;\r\n                }\r\n            }\r\n            .center {\r\n                margin-bottom: 30px;\r\n            }\r\n            .bottom {\r\n                .title {\r\n                    font-family: \"RobotoBold\";\r\n                    font-size: 15px;\r\n                    color: #4e5c63;\r\n                }\r\n\r\n                .text {\r\n                    font-family: \"Roboto\";\r\n                    font-size: 12px;\r\n                    a {\r\n                        color: #4aa7d9;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
                    "styleUrl": "./analytics.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 57
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"\">\r\n    <mln-header #headerCustom [user]=\"user\" [menuItems]=\"menuItems\"></mln-header>\r\n</div>\r\n<div class=\"analytics5d\">\r\n    <!-- Head Buttons -->\r\n    <div class=\"analytics5d__head\">\r\n        <ul>\r\n            <li *ngFor=\"let buttonSetting of settingsButton\">\r\n                <mln-button #customButton [text]=\"buttonSetting.text\" [classButton]=\"buttonSetting.classButton\" [isSquare]=\"buttonSetting.isSquare\"></mln-button>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <!-- BODY -->\r\n    <div class=\"analytics5d__body\">\r\n        <!-- Body left -->\r\n        <div class=\"analytics5d__body--left\">\r\n            <ul>\r\n                <li *ngFor=\"let item of settingsProgress\" class=\"progressbar\">\r\n                    <mln-progress-bar icon=\"image\" [deadline]=\"item.deadline\" [time]=\"item.time\" [progressInfo]=\"item.progressInfo\"></mln-progress-bar>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        <!-- Body right -->\r\n        <div class=\"analytics5d__body--right\">\r\n            <div class=\"top\">\r\n                <p class=\"title\">Visualización</p>\r\n                <div class=\"check\">\r\n                    <mln-slider-toggle #toggleCustom [statusText]=\"statusTextToggleSettings\"></mln-slider-toggle>\r\n                </div>\r\n            </div>\r\n            <div class=\"center\">\r\n                <mln-box-items #boxItems [settings]=\"settings\"></mln-box-items>\r\n            </div>\r\n            <div class=\"bottom\">\r\n                <h3 class=\"title\">¿Qué son las 5D?</h3>\r\n                <p class=\"text\">\r\n                    La diversificación es clave para proporcionar al cliente la mayor seguridad y estabiliad en el proceso de ahorro e inversión.\r\n                    <br/> <br/> <a href=\"#\">Mostrar más</a>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"
        },
        {
            "name": "BoxItemsComponent",
            "id": "component-BoxItemsComponent-f81f7dff42da79b2d6fbf116abb5327d",
            "file": "projects/app/src/lib/components/box-items/box-items.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mln-box-items",
            "styleUrls": [
                "./box-items.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./box-items.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "settings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "literal type"
                }
            ],
            "outputsClass": [
                {
                    "name": "actionEdit",
                    "defaultValue": "new EventEmitter<{ event: Event }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "EventEmitter<literal type>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "editFilterAction",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, AfterViewInit, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mln-box-items',\r\n  templateUrl: './box-items.component.html',\r\n  styleUrls: ['./box-items.component.scss'],\r\n})\r\nexport class BoxItemsComponent implements OnInit {\r\n  @Output() actionEdit: EventEmitter<{ event: Event }> = new EventEmitter<{ event: Event }>();\r\n  @Input() public settings: {\r\n    title: string;\r\n    subTitle: string;\r\n    amountDecimal: string;\r\n    footerText: string;\r\n    listItems: string[];\r\n  };\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  public editFilterAction(event: Event): void {\r\n    this.actionEdit.emit({ event });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../assets/theme/variables.scss\";\r\n@import \"../../../../assets/theme/tools/tools__pixel-to-rem\";\r\n.mln-box-items {\r\n    border-radius: 3px;\r\n    background-color: white;\r\n    border: 1px solid #b3c2c9;\r\n    max-width: 300px;\r\n    min-width: 170px;\r\n    .header-wrapper {\r\n        margin: 0 auto;\r\n        padding: 20px 0 16px 0;\r\n        text-align: center;\r\n        width: 85%;\r\n        border-bottom: 1px solid #b3c2c9;\r\n        .header-amount {\r\n            margin-bottom: 4px;\r\n            color: map-get($colors, blueText);\r\n            font-family: \"RobotoBold\";\r\n            font-size: 28px;\r\n        }\r\n        .header-text {\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            font-family: \"Roboto\";\r\n            .icon-info {\r\n                background-position: center;\r\n                background-repeat: no-repeat;\r\n                background-size: contain;\r\n                width: 20px;\r\n                height: 18px;\r\n                margin-left: 10px;\r\n                background-image: url(\"/assets/img/info.png\");\r\n            }\r\n        }\r\n    }\r\n    .items-wrapper {\r\n        width: 100%;\r\n        margin: 0 auto;\r\n        padding: 5px 0 10px 0;\r\n        ul {\r\n            list-style: none;\r\n            li {\r\n                margin: 8px 0;\r\n                display: flex;\r\n            }\r\n            .tick:before {\r\n                content: \" \";\r\n                padding-right: 5px;\r\n                position: relative;\r\n                display: inline-block;\r\n                width: 19px;\r\n                height: 26px;\r\n                top: -4px;\r\n                background-image: url(\"/assets/img/success.png\");\r\n                background-repeat: no-repeat;\r\n                background-size: contain;\r\n            }\r\n            .item-text {\r\n                padding-right: 25px;\r\n                font-family: 'Roboto';\r\n                font-size: 14px;\r\n            }\r\n        }\r\n    }\r\n    .footer-wrapper {\r\n        border-top: 1px solid #b3c2c9;\r\n        margin: 0 auto;\r\n        text-align: center;\r\n        min-height: 50px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        width: 100%;\r\n        cursor: pointer;\r\n        .icon {\r\n            background-position: center;\r\n            background-repeat: no-repeat;\r\n            background-size: contain;\r\n            margin-right: 8px;\r\n            padding: 10px;\r\n            &.pencil {\r\n                background-image: url(\"/assets/img/pencil.svg\");\r\n            }\r\n        }\r\n        .footer-text {\r\n            font-family: 'RobotoBold';\r\n            font-weight: bold;\r\n            color: map-get($colors, gray);\r\n        }\r\n        &:hover {\r\n            background-color: #b3c2c924;\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./box-items.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 16
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"mln-box-items\">\r\n    <div class=\"header-wrapper\">\r\n        <div class=\"header-amount\" [innerHTML]=\"settings?.title\"></div>\r\n        <div class=\"header-text\">\r\n            <span>{{ settings?.subTitle }}</span>\r\n            <i class=\"icon-info\"></i>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"items-wrapper\">\r\n        <ul>\r\n            <li *ngFor=\"let item of settings.listItems\">\r\n                <span class=\"tick\"></span><span class=\"item-text\">{{ item }}</span>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n\r\n    <div class=\"footer-wrapper\" (click)=\"editFilterAction($event)\">\r\n        <i class=\"icon pencil\"></i>\r\n        <span class=\"footer-text\">{{ settings?.footerText }}</span>\r\n    </div>\r\n</div>"
        },
        {
            "name": "ButtonBigComponent",
            "id": "component-ButtonBigComponent-938e0c1a8c39ec0fe9503905d1257a6d",
            "file": "projects/app/src/lib/components/button-big/button-big.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mln-button-big",
            "styleUrls": [
                "./button-big.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button-big.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "active",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean"
                },
                {
                    "name": "callback",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "Subject<any>"
                },
                {
                    "name": "icon",
                    "defaultValue": "'work_outline'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'mln-button-big',\r\n  templateUrl: './button-big.component.html',\r\n  styleUrls: ['./button-big.component.scss'],\r\n})\r\nexport class ButtonBigComponent implements OnInit {\r\n  @Input() active = true;\r\n  // @Input() classIcon = '/assets/img/actividad-profesional.png';\r\n  @Input() text: string;\r\n  @Input() icon = 'work_outline';\r\n  @Input() callback: Subject<any>;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  public onClick(event: Event): void {\r\n    if (!this.active) {\r\n      return ;\r\n    }\r\n    this.callback.next({\r\n      event,\r\n      text: this.text,\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../assets/theme/variables.scss\";\r\n.mln-icon-button {\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    min-width: 260px;\r\n    border-radius: 5px;\r\n    background-color: map-get($colors, white);\r\n    border: 1px solid map-get($colors, disabled);\r\n    padding: 1rem;\r\n    margin: 0 auto;\r\n    &:focus, &:active {\r\n        outline: none;\r\n    }\r\n    &.active {\r\n        color: map-get($colors, white);\r\n        background-color: map-get($colors, buttonBlue);\r\n    }\r\n    .left {\r\n        display: inline-block;\r\n        width: 35%;\r\n        .mat-icon {\r\n            font-size: 40px;\r\n            color: map-get($colors, white);\r\n        }\r\n    }\r\n    &.disabled {\r\n        background-color: map-get($colors, white);\r\n        .left {\r\n            .mat-icon {\r\n                color: map-get($colors, disabled);\r\n            }\r\n        }\r\n        .right {\r\n            color: map-get($colors, disabled);\r\n        }\r\n    }\r\n    >.right {\r\n        width: 65%;\r\n        color: map-get($colors, white);\r\n        .text {\r\n            font-family: 'RobotoBold';\r\n            padding: 0 2rem;\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./button-big.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<button class=\"mln-icon-button primary\" [ngClass]=\"active == true ? 'active' : 'disabled'\" (click)=\"onClick($event)\" [class.active]=\"active\" [attr.disabled]=\"!active ? true : null\">\r\n    <!-- <i class=\"icon\" [ngStyle]=\"{'background-image': 'url(' + classIcon + ')'}\"> </i> -->\r\n    <div class=\"left\">\r\n        <mat-icon class=\"icon\">{{ icon }}</mat-icon>\r\n    </div>\r\n    <div class=\"right\">\r\n        <div class=\"text\">{{ text }}</div>\r\n    </div>\r\n</button>"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-b09a1dd9ac3414a2623f64bd1bc90e70",
            "file": "projects/app/src/lib/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mln-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "callback",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "Subject<literal type>"
                },
                {
                    "name": "classButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "isDisabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean"
                },
                {
                    "name": "isSquare",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean"
                },
                {
                    "name": "outline",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string"
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string"
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "clickButton",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n@Component({\r\n  selector: 'mln-button',\r\n  templateUrl: './button.component.html',\r\n  styleUrls: ['./button.component.scss'],\r\n})\r\nexport class ButtonComponent implements OnInit {\r\n  @Input() text: string;\r\n  @Input() classButton: string;\r\n  @Input() icon: string;\r\n  @Input() isSquare = false;\r\n  @Input() isDisabled = false;\r\n  @Input() type!: string;\r\n  @Input() callback!: Subject<{\r\n    element: EventTarget;\r\n    text: string;\r\n    class: string;\r\n  }>;\r\n  @Input() outline: string;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  public clickButton(event: Event): void {\r\n    if (this.callback) {\r\n      this.callback.next({\r\n        element: event && event.target,\r\n        text: this.text,\r\n        class: this.classButton,\r\n      });\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../assets/theme/variables.scss\";\r\n.mln-button {\r\n    padding: 0 30px;\r\n    font-weight: bold;\r\n    border-radius: 20px;\r\n    margin: 0 auto;\r\n    border-width: 2px;\r\n    height: 40px;\r\n    font-family: 'Roboto';\r\n    &.square {\r\n        border-radius: 3px;\r\n        font-weight: normal;\r\n    }\r\n    &.primary {\r\n        color: map-get($colors, buttonBlue);\r\n        border-color: map-get($colors, buttonBlue);\r\n        background-color: map-get($colors, white);\r\n    }\r\n    &.secondary {\r\n        color: map-get($colors, white);\r\n        background-color: map-get($colors, buttonBlue);\r\n    }\r\n    &.disabled {\r\n        color: map-get($colors, disabled);\r\n        border-color: map-get($colors, disabled);\r\n        background-color: map-get($colors, white);\r\n    }\r\n    &--icon {\r\n        border: none;\r\n        color: #2a9fd8;\r\n    }\r\n}",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 20
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<button mat-stroked-button [class.mln-button--icon]=\"icon && !text\" class=\"mln-button {{ classButton }}\" [ngClass]=\"{ square: isSquare == true, disabled: isDisabled == true }\" [disabled]=\"isDisabled\" [type]=\"type\" (click)=\"clickButton($event)\">\r\n  {{ text }}\r\n  <mat-icon *ngIf=\"icon\" [ngClass]=\"outline ? 'material-icons-outlined' : ''\">{{ icon }}</mat-icon>\r\n</button>"
        },
        {
            "name": "ButtonDoubleComponent",
            "id": "component-ButtonDoubleComponent-9320dd064c903c9a21925d19c75d5897",
            "file": "projects/app/src/lib/components/button-double/button-double.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mln-button-double",
            "styleUrls": [
                "./button-double.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button-double.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "active",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "boolean"
                },
                {
                    "name": "classIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "leftText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "rightText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "actionBigButton",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mln-button-double',\r\n  templateUrl: './button-double.component.html',\r\n  styleUrls: ['./button-double.component.scss'],\r\n})\r\nexport class ButtonDoubleComponent implements OnInit {\r\n  @Input() active: boolean;\r\n  @Input() classIcon: string;\r\n  @Input() rightText: string;\r\n  @Input() leftText: string;\r\n  @Output() actionBigButton: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  public onClick(event: Event): void {\r\n    this.actionBigButton.emit({ event });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../assets/theme/variables.scss\";\r\n.mln-icon-button {\r\n    &:focus, &:active {\r\n        outline: none;\r\n    }\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    min-width: 260px;\r\n    height: 70px;\r\n    margin: 0 auto;\r\n    border-radius: 5px;\r\n    color: map-get($colors, buttonBlue);\r\n    background-color: map-get($colors, white);\r\n    border: 0px;\r\n    -webkit-box-shadow: 0px 0px 7px 0px rgba(0, 0, 0, 0.25);\r\n    -moz-box-shadow: 0px 0px 7px 0px rgba(0, 0, 0, 0.25);\r\n    box-shadow: 0px 0px 7px 0px rgba(0, 0, 0, 0.25);\r\n    >.initial {\r\n        width: 30%;\r\n        height: 85%;\r\n        vertical-align: middle;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        border-right: 2px solid map-get($colors, disabled);\r\n        font-weight: bold;\r\n        font-size: 20px;\r\n    }\r\n    &.disabled {}\r\n    >.text {\r\n        width: 70%;\r\n        font-size: 14px;\r\n        padding: 0 4px;\r\n        font-family: 'RobotoBold';\r\n    }\r\n    &.active {\r\n        color: white;\r\n        background-color: map-get($colors, buttonBlue);\r\n        -webkit-box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0);\r\n        -moz-box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0);\r\n        box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0);\r\n        >.initial {\r\n            border-right: 2px solid map-get($colors, white);\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./button-double.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<button class=\"mln-icon-button primary\" (click)=\"onClick($event)\" [class.active]=\"active\" [attr.disabled]=\"!active ? true : null\">\r\n    <div class=\"initial\">{{ leftText }}</div>\r\n    <div class=\"text\">\r\n        <div>{{ rightText }}</div>\r\n    </div>\r\n</button>"
        },
        {
            "name": "ChartBarComponent",
            "id": "component-ChartBarComponent-96169f6e3a5813973e21c04802ca2ebc",
            "file": "projects/app/src/lib/components/chart-bar/chart-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mln-chart-bar",
            "styleUrls": [
                "./chart-bar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./chart-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "chartOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "Partial<ChartOptions>"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartComponent",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chart2', {static: false}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport {\r\n  ApexAxisChartSeries,\r\n  ApexChart,\r\n  ApexDataLabels,\r\n  ApexPlotOptions,\r\n  ApexYAxis,\r\n  ApexLegend,\r\n  ApexStroke,\r\n  ApexXAxis,\r\n  ApexFill,\r\n  ApexTooltip,\r\n  ChartComponent,\r\n} from 'ng-apexcharts';\r\n\r\ntype ChartOptions = {\r\n  series: ApexAxisChartSeries;\r\n  chart: ApexChart;\r\n  dataLabels: ApexDataLabels;\r\n  plotOptions: ApexPlotOptions;\r\n  yaxis: ApexYAxis;\r\n  xaxis: ApexXAxis;\r\n  fill: ApexFill;\r\n  tooltip: ApexTooltip;\r\n  stroke: ApexStroke;\r\n  legend: ApexLegend;\r\n};\r\n\r\n@Component({\r\n  selector: 'mln-chart-bar',\r\n  templateUrl: './chart-bar.component.html',\r\n  styleUrls: ['./chart-bar.component.scss'],\r\n})\r\nexport class ChartBarComponent implements OnInit {\r\n  @ViewChild('chart2', { static: false }) chart: ChartComponent;\r\n  @Input() public chartOptions: Partial<ChartOptions>;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./chart-bar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 36
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section *ngIf=\"chartOptions && chartOptions?.series?.length\">\r\n    <apx-chart #chart2 [series]=\"chartOptions.series\" [chart]=\"chartOptions.chart\" [dataLabels]=\"chartOptions.dataLabels\" [plotOptions]=\"chartOptions.plotOptions\" [yaxis]=\"chartOptions.yaxis\" [legend]=\"chartOptions.legend\" [fill]=\"chartOptions.fill\" [stroke]=\"chartOptions.stroke\"\r\n        [tooltip]=\"chartOptions.tooltip\" [xaxis]=\"chartOptions.xaxis\"></apx-chart>\r\n</section>"
        },
        {
            "name": "ChartCircleComponent",
            "id": "component-ChartCircleComponent-16bff71c92bb776e6a56abe7f326d98e",
            "file": "projects/app/src/lib/components/chart-circle/chart-circle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mln-chart-circle",
            "styleUrls": [
                "./chart-circle.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./chart-circle.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "settingsButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "any"
                },
                {
                    "name": "settingsChart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "any"
                },
                {
                    "name": "subText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string"
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartComponent",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chart', {static: false}"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "chartOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<any>",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "customButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButtonComponent",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "ButtonComponent, {static: false}"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "customChk",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CheckBoxComponent",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "CheckBoxComponent, {static: false}"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "heritageModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HeritageModel",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "settingsCheckBox",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "total",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { ChartComponent } from 'ng-apexcharts';\r\nimport { Subject } from 'rxjs';\r\nimport { HeritageModel } from '../../pages/heritage/model/heritage.model';\r\nimport { ButtonComponent } from '../button';\r\nimport { CheckBoxComponent } from '../check-box';\r\n\r\n@Component({\r\n  selector: 'mln-chart-circle',\r\n  templateUrl: './chart-circle.component.html',\r\n  styleUrls: ['./chart-circle.component.scss'],\r\n})\r\nexport class ChartCircleComponent implements OnInit {\r\n  @ViewChild('chart', { static: false }) public chart: ChartComponent;\r\n  @ViewChild(ButtonComponent, { static: false })\r\n  public customButton: ButtonComponent;\r\n  @ViewChild(CheckBoxComponent, { static: false })\r\n  public customChk: CheckBoxComponent;\r\n  @Input() public title: string;\r\n  @Input() public subText: string;\r\n  @Input() public set settingsChart(settingsChart: any) {\r\n    this.heritageModel = new HeritageModel();\r\n    this.chartOptions = this.heritageModel.getChartOptions(settingsChart);\r\n    this.total = settingsChart.total;\r\n    const colors: string[] = settingsChart.colors;\r\n    const labels: string[] = settingsChart.labels;\r\n    this.settingsCheckBox = labels.map((label: string, i: number) => {\r\n      return {\r\n        color: colors[i],\r\n        title: label,\r\n        checked: true,\r\n        id: null,\r\n        callBack: settingsChart.callBack,\r\n      };\r\n    });\r\n  }\r\n  @Input() public settingsButton: any;\r\n\r\n  public total: number;\r\n  public chartOptions: Partial<any>;\r\n  public heritageModel: HeritageModel;\r\n  public settingsCheckBox: {\r\n    color: string;\r\n    title: string;\r\n    checked: boolean;\r\n    id: string | number;\r\n    callBack: Subject<any>;\r\n  }[] = [];\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".title-wrapper {\r\n    margin: 50px auto;\r\n    text-align: center;\r\n    width: 100%;\r\n    .title {\r\n        color: #212b65;\r\n        font-size: 18px;\r\n        font-family: \"GillSansBold\";\r\n    }\r\n    .amount {\r\n        font-size: 36px;\r\n        color: #202967;\r\n        font-family: \"GillSansBold\";\r\n    }\r\n}\r\n\r\n.chart-wrapper {\r\n    display: flex;\r\n    .left-space {\r\n        width: 25%;\r\n    }\r\n    .chart {\r\n        width: 50%;\r\n    }\r\n    .legend {\r\n        width: 25%;\r\n        box-sizing: border-box;\r\n        padding-right: 20px;\r\n        .legend-ul {\r\n            list-style: none;\r\n            display: flex;\r\n            flex-direction: column;\r\n            li {\r\n                display: flex;\r\n                align-items: center;\r\n                margin: 5px 0;\r\n                font-size: 14px;\r\n                font-family: \"GillSansBold\";\r\n                color: #4e5c63;\r\n                >* {\r\n                    padding-right: 5px;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    .filter-msg {\r\n        color: #4e5c63;\r\n        font-size: 14px;\r\n        line-height: 1.15;\r\n        font-family: \"GillSans\";\r\n        padding: 10px 0;\r\n    }\r\n    .button-wrapper {\r\n        text-align: center;\r\n        width: 100%;\r\n        margin: 15px auto;\r\n    }\r\n    @media only screen and (max-width: 720px) {\r\n        flex-wrap: wrap;\r\n        .left-space {\r\n            display: none;\r\n        }\r\n        .chart {\r\n            width: 100%;\r\n        }\r\n        .legend {\r\n            width: 100%;\r\n            margin: 0 auto;\r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: center;\r\n            text-align: center;\r\n            align-items: center;\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./chart-circle.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 48
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "settingsChart": {
                    "name": "settingsChart",
                    "setSignature": {
                        "name": "settingsChart",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "settingsChart",
                                "type": "any",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 21,
                        "jsdoctags": [
                            {
                                "name": "settingsChart",
                                "type": "any",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<section>\r\n    <div>\r\n        <div class=\"title-wrapper\">\r\n            <h3 class=\"title\">{{ title }}</h3>\r\n            <span class=\"amount\">{{ this.heritageModel.currency.format(total) }}</span>\r\n        </div>\r\n    </div>\r\n    <div class=\"chart-wrapper\">\r\n        <div class=\"left-space\"></div>\r\n        <div class=\"chart\">\r\n            <apx-chart #chart [legend]=\"chartOptions.legend\" [dataLabels]=\"chartOptions.dataLabels\" [plotOptions]=\"chartOptions.plotOptions\" [stroke]=\"chartOptions.stroke\" [tooltip]=\"chartOptions.tooltip\" [colors]=\"chartOptions.colors\" [series]=\"chartOptions.series\"\r\n                [labels]=\"chartOptions.labels\" [chart]=\"chartOptions.chart\">\r\n            </apx-chart>\r\n        </div>\r\n        <div class=\"legend\">\r\n            <ul class=\"legend-ul\">\r\n                <li *ngFor=\"let item of settingsCheckBox\">\r\n                    <mln-check-box #customChk [settings]=\"item\"></mln-check-box>\r\n                </li>\r\n            </ul>\r\n            <div>\r\n                <div class=\"button-wrapper\">\r\n                    <mln-button #customButton [text]=\"settingsButton.text\" [classButton]=\"settingsButton.classButton\" [isDisabled]=\"settingsButton.isDisabled\"></mln-button>\r\n                </div>\r\n                <div class=\"filter-msg\">\r\n                    {{ subText }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>"
        },
        {
            "name": "CheckBoxComponent",
            "id": "component-CheckBoxComponent-79c06311012fbdbf234110bd6c8963c7",
            "file": "projects/app/src/lib/components/check-box/check-box.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mln-check-box",
            "styleUrls": [
                "./check-box.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./check-box.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "settings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": ""
                }
            ],
            "outputsClass": [
                {
                    "name": "changeChkAction",
                    "defaultValue": "new EventEmitter<\r\n    ChkAction\r\n  >()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "EventEmitter<ChkAction>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "settings$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changeChk",
                    "args": [
                        {
                            "name": "status",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "callback",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "status",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "callback",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild,\r\n  ElementRef,\r\n  AfterViewInit,\r\n} from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\ninterface ChkAction {\r\n  status: boolean;\r\n  id: string | number;\r\n}\r\ninterface Settings {\r\n  color: string;\r\n  title: string;\r\n  checked: boolean;\r\n  id: string | number;\r\n  callBack?: Subject<boolean>;\r\n}\r\n@Component({\r\n  selector: 'mln-check-box',\r\n  templateUrl: './check-box.component.html',\r\n  styleUrls: ['./check-box.component.scss'],\r\n})\r\nexport class CheckBoxComponent implements OnInit, AfterViewInit {\r\n  // @ViewChild('checkmark') public checkmark!: ElementRef;\r\n  @Output() changeChkAction: EventEmitter<ChkAction> = new EventEmitter<\r\n    ChkAction\r\n  >();\r\n  @Input() public set settings(settings: Settings) {\r\n    /* setTimeout(() => {\r\n      this.checkmark.nativeElement.style.border = '2px solid ' + settings.color;\r\n      this.checkmark.nativeElement.style.backgroundColor = settings.color;\r\n    }, 120); */\r\n    this.settings$ = settings;\r\n  }\r\n  public get settings(): Settings {\r\n    return this.settings$;\r\n  }\r\n\r\n  private settings$: any;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  ngAfterViewInit(): void {}\r\n\r\n  public changeChk(status: boolean, callback?: any): void {\r\n    callback.next(status);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../assets/theme/variables.scss\";\r\n.container {\r\n    display: block;\r\n    position: relative;\r\n    padding-left: 30px;\r\n    margin-bottom: 12px;\r\n    cursor: pointer;\r\n    font-size: 16px;\r\n    -webkit-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n    font-family: 'Roboto';\r\n    color: map-get($colors, disabledCheck);\r\n}\r\n\r\n\r\n/* Hide the browser's default checkbox */\r\n\r\n.container input {\r\n    position: absolute;\r\n    opacity: 0;\r\n    cursor: pointer;\r\n    height: 0;\r\n    width: 0;\r\n}\r\n\r\n\r\n/* Create a custom checkbox */\r\n\r\n.checkmark {\r\n    position: absolute;\r\n    top: -2px;\r\n    left: 0;\r\n    height: 18px;\r\n    width: 18px;\r\n    background-color: map-get($colors, white);\r\n    border-radius: 50%;\r\n    border: 2px solid map-get($colors, blueIcon); // cambiar\r\n}\r\n\r\n\r\n/* On mouse-over, add a grey background color */\r\n\r\n.container:hover input~.checkmark {\r\n    background-color: #ccc;\r\n}\r\n\r\n\r\n/* When the checkbox is checked, add a blue background */\r\n\r\n.container input:checked~.checkmark {\r\n    background-color: map-get($colors, blueIcon); // cambiar\r\n}\r\n\r\n.container input:checked~.label {\r\n    font-family: 'RobotoBold';\r\n    color: map-get($colors, gray);\r\n}\r\n\r\n\r\n/* Create the checkmark/indicator (hidden when not checked) */\r\n\r\n.checkmark:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    display: none;\r\n}\r\n\r\n\r\n/* Show the checkmark when checked */\r\n\r\n.container input:checked~.checkmark:after {\r\n    display: block;\r\n}\r\n\r\n\r\n/* Style the checkmark/indicator */\r\n\r\n.container .checkmark:after {\r\n    left: 6px;\r\n    top: 2px;\r\n    width: 4px;\r\n    height: 10px;\r\n    border: solid map-get($colors, white);\r\n    border-width: 0 2px 2px 0;\r\n    -webkit-transform: rotate(45deg);\r\n    -ms-transform: rotate(45deg);\r\n    transform: rotate(45deg);\r\n}",
                    "styleUrl": "./check-box.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 45
            },
            "implements": [
                "OnInit",
                "AfterViewInit"
            ],
            "accessors": {
                "settings": {
                    "name": "settings",
                    "setSignature": {
                        "name": "settings",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "settings",
                                "type": "Settings",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 34,
                        "jsdoctags": [
                            {
                                "name": "settings",
                                "type": "Settings",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "settings",
                        "type": "",
                        "returnType": "Settings",
                        "line": 41
                    }
                }
            },
            "templateData": "<label class=\"container\">\r\n  <input type=\"checkbox\" [checked]=\"settings?.checked\" (change)=\"changeChk($event.target.checked, settings?.callBack)\">\r\n  <span class=\"checkmark\" [ngStyle]=\"{'border': ('2px solid ' + settings.color), 'background-color': settings.color}\"></span>\r\n  <!-- <mat-icon class=\"checkmark\" [ngStyle]=\"{'color': '#2fb8de'}\" aria-hidden=\"false\" aria-label=\"icon\" matSufix>\r\n    check_circle\r\n  </mat-icon> -->\r\n  <span class=\"label\">{{ settings?.title }}</span>\r\n</label>"
        },
        {
            "name": "CustomerInfoComponent",
            "id": "component-CustomerInfoComponent-48c5b3360a6886456b470c7032a65e0e",
            "file": "projects/app/src/lib/components/customer-info/customer-info.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mln-customer-info",
            "styleUrls": [
                "./customer-info.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./customer-info.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "rightButtonSettings",
                    "defaultValue": "{ text: 'Ver' }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "{ text: string; }"
                },
                {
                    "name": "settingsSelect",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "any"
                },
                {
                    "name": "textRow",
                    "defaultValue": "'Patrimonio'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string"
                },
                {
                    "name": "user",
                    "defaultValue": "{\r\n    name: 'Jose',\r\n    lastname: 'Manuel Perez',\r\n    type: 'equilibrado',\r\n    available: true,\r\n    patrimony: 52416362,\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "UserInterface"
                }
            ],
            "outputsClass": [
                {
                    "name": "userProposal",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "EventEmitter<literal type>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "currency",
                    "defaultValue": "new Intl.NumberFormat('es-ES', {\r\n    style: 'currency',\r\n    currency: 'EUR',\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Intl.NumberFormat",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "customSelect",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectComponent",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "SelectComponent, {static: false}"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "initials",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "proposalSelected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "goToUserProposal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { UserInterface } from '../../shared/interfaces/user.interface';\r\nimport { SelectComponent } from '../select';\r\n\r\n@Component({\r\n  selector: 'mln-customer-info',\r\n  templateUrl: './customer-info.component.html',\r\n  styleUrls: ['./customer-info.component.scss'],\r\n})\r\nexport class CustomerInfoComponent implements OnInit {\r\n  @ViewChild(SelectComponent, { static: false })\r\n  public customSelect: SelectComponent;\r\n  @Input() user: UserInterface = {\r\n    name: 'Jose',\r\n    lastname: 'Manuel Perez',\r\n    type: 'equilibrado',\r\n    available: true,\r\n    patrimony: 52416362,\r\n  };\r\n  @Input() settingsSelect: any;\r\n  @Input() textRow = 'Patrimonio';\r\n  @Input() rightButtonSettings = { text: 'Ver' };\r\n  @Output() userProposal: EventEmitter<{\r\n    user: UserInterface;\r\n    proposal: string;\r\n  }> = new EventEmitter();\r\n\r\n  public currency: Intl.NumberFormat = new Intl.NumberFormat('es-ES', {\r\n    style: 'currency',\r\n    currency: 'EUR',\r\n  });\r\n  public proposalSelected: string;\r\n  public initials: string;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.initials =\r\n      this.user.name[0].toUpperCase() + this.user.lastname[0].toUpperCase();\r\n  }\r\n\r\n  public goToUserProposal(): void {\r\n    if (!this.proposalSelected || !this.user.available) {\r\n      return;\r\n    }\r\n    this.userProposal.emit({\r\n      user: this.user,\r\n      proposal: this.proposalSelected,\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../assets/theme/variables.scss\";\r\n.customer-wrapper {\r\n    width: 100%;\r\n    margin: 10px 0;\r\n    box-sizing: border-box;\r\n    -webkit-box-shadow: 0px 0px 7px 0px rgba(0, 0, 0, 0.25);\r\n    -moz-box-shadow: 0px 0px 7px 0px rgba(0, 0, 0, 0.25);\r\n    box-shadow: 0px 0px 7px 0px rgba(0, 0, 0, 0.25);\r\n\r\n\r\n    .customer-head {\r\n        background-color: map-get($colors, 'white');\r\n        display: flex;\r\n        justify-content: space-between;\r\n        min-height: 45px;\r\n        padding: 5px 20px;\r\n        @media only screen and (max-width: 720px) {\r\n            flex-wrap: wrap;\r\n            justify-content: center;\r\n        }\r\n        .customer-left {\r\n            display: flex;\r\n            align-items: center;\r\n            .customer-initial {\r\n                width: 40px;\r\n                height: 40px;\r\n                border-radius: 50%;\r\n                background-color: #f1f5fc;\r\n                display: flex;\r\n                align-items: center;\r\n                justify-content: center;\r\n                color: #5cafdd;\r\n                text-transform: uppercase;\r\n                font-family: \"Roboto\";\r\n                font-size: 16px;\r\n            }\r\n            .customer-name {\r\n                color: map-get($colors, darkBlue);\r\n                font-family: \"GillSansBold\";\r\n                font-size: 16px;\r\n                padding-left: 20px;\r\n            }\r\n            .customer-nif {\r\n                color: map-get($colors, darkBlue);\r\n                font-family: \"GillSansBold\";\r\n                font-size: 16px;\r\n                padding-left: 20px;\r\n            }\r\n        }\r\n        .customer-right {\r\n            display: flex;\r\n            justify-content: space-between;\r\n            align-items: center;\r\n            .customer-state {\r\n                border-right: 2px solid lightgray;\r\n                padding-right: 20px;\r\n                margin-right: 20px;\r\n                color: map-get($colors, 'darkBlue');\r\n                font-family: \"RobotoBold\";\r\n            }\r\n            .customer-icon {\r\n                font-family: \"Roboto\";\r\n                padding-right: 10px;\r\n                display: inline-block;\r\n                background-image: url(\"/assets/img/cliente-real.png\");\r\n                background-repeat: no-repeat;\r\n                background-size: contain;\r\n                width: 30px;\r\n                height: 28px;\r\n            }\r\n        }\r\n    }\r\n    .customer-footer {\r\n        @media only screen and (max-width: 720px) {\r\n            flex-wrap: wrap;\r\n            flex-direction: row-reverse;\r\n        }\r\n        \r\n        background-color: #f1f5fc;\r\n        padding: 5px 20px;\r\n        display: flex;\r\n        min-height: 45px;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        .customer-right {\r\n            .customer-go {\r\n                display: flex;\r\n                align-items: center;\r\n                cursor: pointer;\r\n                font-family: 'Roboto';\r\n                .disabled {\r\n                    color: map-get($colors, 'disabled');\r\n                }\r\n            }\r\n        }\r\n        .customer-left {\r\n            display: flex;\r\n            justify-content: space-between;\r\n            align-items: center;\r\n            @media only screen and (max-width: 720px) {\r\n                flex-wrap: wrap;\r\n                justify-content: center;\r\n            }\r\n            .customer-amount {\r\n                color: #4e5c63;\r\n                font-family: \"RobotoBold\";\r\n                font-size: 14px;\r\n                padding-right: 20px;\r\n                display: contents;\r\n                .opaque {\r\n                    color: rgba(0, 0, 0, 0.38);\r\n                }\r\n                span {\r\n                    padding-right: 10px;\r\n                }\r\n                > :first-child {\r\n                    padding-right: 10px;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./customer-info.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 40
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"customer-wrapper\">\r\n    <div class=\"customer-head\">\r\n        <div class=\"customer-left\">\r\n            <div class=\"customer-initial\">{{initials}}</div>\r\n            <div class=\"customer-name\">{{ user?.name }} {{ user?.lastname }}</div>\r\n            <div class=\"customer-nif\"> {{user?.nif }} </div>\r\n        </div>\r\n        <div class=\"customer-right\">\r\n            <div class=\"customer-state\">{{ user?.type }}</div>\r\n            <div [ngClass]=\"user.available ? 'customer-icon' : 'customer-icon'\"></div>\r\n        </div>\r\n    </div>\r\n    <div class=\"customer-footer\">\r\n        <div class=\"customer-left\">\r\n            <div class=\"customer-amount\" fxLayout=\"row\">\r\n                <mat-icon matPrefix color=\"primary\">check_circle</mat-icon>\r\n                <div *ngIf=\"user?.patrimony\">\r\n                    <span>{{ textRow }}</span>\r\n                    <span class=\"opaque\">{{ currency.format(user?.patrimony) }}</span>\r\n                </div>\r\n            </div>\r\n            <div class=\"\" *ngIf=\"settingsSelect\">\r\n                <mln-select #customSelect [settings]=\"settingsSelect\" [listItem]=\"settingsSelect?.listItemSelect\" (actionSelected)=\"proposalSelected = $event.name\"></mln-select>\r\n            </div>\r\n        </div>\r\n        <div class=\"customer-right\">\r\n            <div class=\"customer-go\" (click)=\"goToUserProposal()\">\r\n                <span [class.disabled]=\"!user.available\">{{ rightButtonSettings?.text }}</span>\r\n                <mat-icon matSufix [class.disabled]=\"!user.available\">navigate_next</mat-icon>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"
        },
        {
            "name": "DatatableComponent",
            "id": "component-DatatableComponent-22773adb508c75e09b839db1882efab2",
            "file": "projects/app/src/lib/components/datatable/datatable.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mln-datatable",
            "styleUrls": [
                "./datatable.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./datatable.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "datacolumns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "[]"
                },
                {
                    "name": "datasources",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "[]"
                },
                {
                    "name": "paginatorSettings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 67,
                    "type": "literal type"
                }
            ],
            "outputsClass": [
                {
                    "name": "actionChangeOptions",
                    "defaultValue": "new EventEmitter<{ datasource: any; value: ActionsMenuInterface }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "EventEmitter<literal type>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "currency",
                    "defaultValue": "new Intl.NumberFormat('es-ES', {\r\n    style: 'currency',\r\n    currency: 'EUR',\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Intl.NumberFormat",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "customButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButtonComponent",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "ButtonComponent, {static: false}"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "customSelect",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectComponent",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "SelectComponent, {static: false}"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "customToggle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SliderToggleComponent",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "SliderToggleComponent, {static: false}"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "datacolumns$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataColumns[]",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "dataSources",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatTableDataSource<any>",
                    "optional": false,
                    "description": "",
                    "line": 79,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "datasourcesColumns",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "expandedElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any | null",
                    "optional": false,
                    "description": "",
                    "line": 80,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "iconToggle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isAccordion",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 78,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator, {static: false}"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onActionChange",
                    "args": [
                        {
                            "name": "datasource",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "ActionsMenuInterface",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "datasource",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "ActionsMenuInterface",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild,\r\n  AfterViewInit,\r\n} from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActionsMenuInterface } from '../../shared/interfaces/data-table/actions.interface';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { DataColumns } from '../../shared/interfaces/data-columns.interface';\r\nimport {\r\n  animate,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger,\r\n} from '@angular/animations';\r\nimport { SelectComponent } from '../select';\r\nimport { ButtonComponent } from '../button';\r\nimport { SliderToggleComponent } from '../slider-toggle';\r\n@Component({\r\n  selector: 'mln-datatable',\r\n  templateUrl: './datatable.component.html',\r\n  styleUrls: ['./datatable.component.scss'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\r\n      state('expanded', style({ height: '*' })),\r\n      /* transition(\r\n        'expanded <=> collapsed',\r\n        animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')\r\n      ), */\r\n    ]),\r\n  ],\r\n})\r\nexport class DatatableComponent implements OnInit, AfterViewInit {\r\n  @ViewChild(MatPaginator, { static: false }) public paginator: MatPaginator;\r\n  @ViewChild(SelectComponent, { static: false })\r\n  public customSelect: SelectComponent;\r\n  @ViewChild(ButtonComponent, { static: false })\r\n  public customButton: ButtonComponent;\r\n  @ViewChild(SliderToggleComponent, { static: false })\r\n  public customToggle: SliderToggleComponent;\r\n\r\n  @Output() actionChangeOptions: EventEmitter<{\r\n    datasource: any;\r\n    value: ActionsMenuInterface;\r\n  }> = new EventEmitter<{ datasource: any; value: ActionsMenuInterface }>();\r\n\r\n  @Input() public set datacolumns(datacolumns: DataColumns[]) {\r\n    this.datacolumns$ = datacolumns;\r\n    this.datasourcesColumns =\r\n      datacolumns && datacolumns.map((column) => column.key);\r\n  }\r\n  public get datacolumns(): DataColumns[] {\r\n    return this.datacolumns$;\r\n  }\r\n\r\n  @Input() public set datasources(datasources: any[]) {\r\n    this.isAccordion =\r\n      datasources && datasources.some((datasource) => datasource.accordion);\r\n    this.dataSources = new MatTableDataSource(datasources);\r\n  }\r\n  @Input() paginatorSettings!: {\r\n    items: number;\r\n    perPage: number[];\r\n  };\r\n\r\n  public datasourcesColumns = [];\r\n  private datacolumns$: DataColumns[];\r\n  public currency: Intl.NumberFormat = new Intl.NumberFormat('es-ES', {\r\n    style: 'currency',\r\n    currency: 'EUR',\r\n  });\r\n  public isAccordion: boolean;\r\n  public dataSources: MatTableDataSource<any>;\r\n  public expandedElement: any | null;\r\n  public iconToggle: boolean;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  public ngAfterViewInit(): void {\r\n    if (this.paginator) {\r\n      this.dataSources.paginator = this.paginator;\r\n    }\r\n  }\r\n\r\n  public onActionChange(datasource: any, value: ActionsMenuInterface): void {\r\n    this.actionChangeOptions.emit({ datasource, value });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../assets/theme/variables.scss\";\r\n@import \"../../../../assets/theme/tools/tools__pixel-to-rem\";\r\n.overflow-table {\r\n    overflow-y: auto;\r\n}\r\n\r\n.hidden-paginator {\r\n    display: none;\r\n}\r\n\r\n.bg {\r\n    background-color: #F8FAFD;\r\n    height: 100vh;\r\n}\r\n\r\n.header-proposal {\r\n    display: flex;\r\n    align-items: flex-end;\r\n    justify-content: space-between;\r\n    margin: 30px;\r\n    border-bottom: 1px solid;\r\n    padding-bottom: 20px;\r\n    color: #afbfc6;\r\n    .title {\r\n        color: #202967;\r\n        font-family: \"GillSansBold\";\r\n        font-size: 20px;\r\n    }\r\n    .text {\r\n        font-size: 14px;\r\n        color: #4e5c63;\r\n    }\r\n    @media only screen and (max-width: 720px) {\r\n        flex-wrap: wrap;\r\n        justify-content: center;\r\n        .title {\r\n            margin: 10px 0;\r\n        }\r\n    }\r\n}\r\n\r\n.table-wrapper {\r\n    box-sizing: border-box;\r\n    .status {\r\n        color: map-get($colors, 'blueGreen');\r\n        text-align: center;\r\n    }\r\n    .proposal-table__options {\r\n        text-align: center;\r\n    }\r\n    .example-element-detail {\r\n        overflow: hidden;\r\n         ::ng-deep mln-datatable {\r\n            mat-table thead {\r\n                display: table-header-group;\r\n            }\r\n        }\r\n    }\r\n    .img-accordion {\r\n        cursor: pointer;\r\n        padding: rem(5);\r\n        &--up {\r\n            transform: rotate(180deg);\r\n        }\r\n    }\r\n}\r\n\r\n.table-paginator {\r\n    font-family: 'Roboto';\r\n    .mat-paginator-page-size {\r\n        color: red;\r\n    }\r\n}\r\n\r\n.detail-row {\r\n    height: 0;\r\n    min-height: 0;\r\n}\r\n\r\n.element-row:not(.expanded-row):hover {\r\n    background: whitesmoke;\r\n}\r\n\r\n.element-row:not(.expanded-row):active {\r\n    background: #efefef;\r\n}\r\n\r\n.element-row {\r\n    background: rgb(241, 245, 252);\r\n}\r\n\r\n.element-row td {\r\n    border-bottom-width: 0;\r\n}\r\n\r\n.element-detail {\r\n    overflow: hidden;\r\n    display: flex;\r\n    width: 100%;\r\n}\r\n\r\n.element-diagram {\r\n    min-width: 80px;\r\n    border: 2px solid black;\r\n    padding: 8px;\r\n    font-weight: lighter;\r\n    margin: 8px 0;\r\n    height: 104px;\r\n}\r\n\r\n.element-symbol {\r\n    font-weight: bold;\r\n    font-size: 40px;\r\n    line-height: normal;\r\n}\r\n\r\n.element-description {\r\n    padding: 16px;\r\n}\r\n\r\n.element-description-attribution {\r\n    opacity: 0.5;\r\n}\r\n\r\n.mat-column-expandedDetail {\r\n    border-bottom-style: none;\r\n}\r\n\r\n.block-left {\r\n    margin: 0 2px;\r\n    vertical-align: middle;\r\n}\r\n\r\n.Table {\r\n    display: table;\r\n    border: 1px solid rgba($color: #000000, $alpha: 0.1);\r\n}\r\n\r\n.Title {\r\n    display: table-caption;\r\n    text-align: center;\r\n    font-weight: bold;\r\n    font-size: larger;\r\n}\r\n\r\n.Heading {\r\n    display: table-row;\r\n    font-weight: bold;\r\n    text-align: center;\r\n    background-color: white;\r\n    .Cell {\r\n        color: #4E5C63;\r\n        font-family: \"Roboto\";\r\n        font-size: 12px;\r\n    }\r\n}\r\n\r\n.Row {\r\n    display: table-row;\r\n}\r\n\r\n.Cell {\r\n    display: table-cell;\r\n    border: solid;\r\n    border-width: thin;\r\n    padding-left: 15px;\r\n    padding-right: 15px;\r\n    vertical-align: middle;\r\n    border-color: rgba($color: white, $alpha: 0.6);\r\n    padding-top: 15px;\r\n    padding-bottom: 15px;\r\n    color: #4E5C63;\r\n    font-family: \"Roboto\";\r\n    font-size: 12px;\r\n}\r\n\r\n.table-child {\r\n    width: 100%;\r\n    margin-top: 20px;\r\n}\r\n\r\n@media screen and (max-width: 580px) {\r\n    .table-child, .element-row.expandable-element .mat-cell::before, .buttonExpanded {\r\n        display: none;\r\n    }\r\n}",
                    "styleUrl": "./datatable.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 81
            },
            "implements": [
                "OnInit",
                "AfterViewInit"
            ],
            "accessors": {
                "datacolumns": {
                    "name": "datacolumns",
                    "setSignature": {
                        "name": "datacolumns",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "datacolumns",
                                "type": "DataColumns[]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 53,
                        "jsdoctags": [
                            {
                                "name": "datacolumns",
                                "type": "DataColumns[]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "datacolumns",
                        "type": "[]",
                        "returnType": "DataColumns[]",
                        "line": 58
                    }
                },
                "datasources": {
                    "name": "datasources",
                    "setSignature": {
                        "name": "datasources",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "datasources",
                                "type": "any[]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 62,
                        "jsdoctags": [
                            {
                                "name": "datasources",
                                "type": "any[]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<!-- table proposals -->\r\n<div *ngIf=\"dataSources?.data?.length\" class=\"overflow-table\">\r\n    <mat-table [dataSource]=\"dataSources\" class=\"c-proposal-table table-wrapper\" multiTemplateDataRows>\r\n        <ng-container *ngFor=\"let column of datacolumns; let i = index\" [matColumnDef]=\"column.key\">\r\n            <mat-header-cell class=\"\" *matHeaderCellDef>{{ column.name }}</mat-header-cell>\r\n            <mat-cell class=\"flex-wrap pr-2\" *matCellDef=\"let datasource\" [ngSwitch]=\"column.types.type\">\r\n                <ng-container>\r\n                    <img *ngIf=\"i === 0 && isAccordion\" class=\"img-accordion\" [class.img-accordion--up]=\"expandedElement === datasource\" src=\"/assets/img/chevron-bottom.svg\" alt=\"accordion\" (click)=\"expandedElement = expandedElement === datasource ? null : datasource\" />\r\n                </ng-container>\r\n                <span *ngSwitchCase=\"'text'\" [class]=\"column.class\">\r\n                    {{ datasource[column.key] }}\r\n                </span>\r\n                <span *ngSwitchCase=\"'money'\" [class]=\"column.class\">\r\n                    {{ currency.format(datasource[column.key]) }}\r\n                </span>\r\n                <span *ngSwitchCase=\"'date'\" [class]=\"column.class\">\r\n                    {{ datasource[column.key] | date:column.types.settings.format }}\r\n                </span>\r\n                <mln-select #customSelect *ngSwitchCase=\"'select'\" [settings]=\"column.types.settings.select\" [listItem]=\"column.types.settings.listItem\" (actionSelected)=\"onActionChange(datasource, $event)\"></mln-select>\r\n                <a *ngSwitchCase=\"'link'\" [class]=\"column.class\" [href]=\"datasource.url\" target=\"__blank\">\r\n                    {{ datasource[column.key] }}\r\n                </a>\r\n                <mln-button #customButton *ngSwitchCase=\"'button'\" [callback]=\"column.types.settings.callback\" [classButton]=\"column.types.settings.classButton\" [icon]='column.types.settings.icon' [isSquare]=\"column.types.settings.isSquare\" [isDisabled]=\"column.types.settings.isDisabled\"></mln-button>\r\n                <mln-slider-toggle #customToggle *ngSwitchCase=\"'toggle'\" [label]=\"column.types.settings.label\" [statusText]=\"column.types.settings.statusText\" (changeToggleAction)=\"column.types.settings.callback\"></mln-slider-toggle>\r\n                <span *ngSwitchDefault [class]=\"column?.class\">\r\n                    {{ datasource[column.key] }}\r\n                </span>\r\n            </mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\r\n        <ng-container matColumnDef=\"expandedDetail\" *ngIf=\"isAccordion\">\r\n            <mat-cell class=\"flex-wrap pr-2\" *matCellDef=\"let element\" [attr.colspan]=\"datacolumns.length\">\r\n                <ng-container *ngIf=\"element.accordion\">\r\n                    <div class=\"element-detail\" [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\r\n                        <mln-datatable class=\"table-child\" [datasources]=\"element.accordion.datasources\" [datacolumns]=\"element.accordion.datacolumns\"></mln-datatable>\r\n                    </div>\r\n                </ng-container>\r\n            </mat-cell>\r\n        </ng-container>\r\n\r\n\r\n        <mat-header-row *matHeaderRowDef=\"datasourcesColumns\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let datasource; columns: datasourcesColumns\" class=\"element-row {{ isAccordion ? 'expandable-element' : '' }}\" [class.expanded-row]=\"expandedElement === datasource\"></mat-row>\r\n        <ng-container *ngIf=\"isAccordion\">\r\n            <mat-row *matRowDef=\"let datasource; columns: ['expandedDetail']\" class=\"detail-row\" [ngStyle]=\"{'min-height': expandedElement === datasource ? '48px' : '0px', 'display': expandedElement === datasource ? 'block' : 'flex', 'height': expandedElement === datasource ? 'auto' : '0'}\"></mat-row>\r\n        </ng-container>\r\n    </mat-table>\r\n    <mat-paginator #MatPaginator [pageSize]=\"paginatorSettings?.items\" [pageSizeOptions]=\"paginatorSettings?.perPage\" [class.hidden-paginator]=\"!paginatorSettings?.items\"></mat-paginator>\r\n</div>"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-f9b6dba21de397f93501687fb3ad21fb",
            "file": "projects/app/src/lib/components/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mln-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "menuItems",
                    "defaultValue": "[\r\n    { text: 'Link 1', class: 'active', navigation: '#' },\r\n    { text: 'Link 2', class: '', navigation: '#' },\r\n    { text: 'Link 3', class: '', navigation: '#' },\r\n    { text: 'Link 4', class: '', navigation: '#', disabled: true },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "Array<MenuItems>"
                },
                {
                    "name": "user",
                    "defaultValue": "{\r\n    name: 'Name',\r\n    lastname: 'Surname1 Surname2',\r\n    patrimony: 0.0,\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "UserInterface"
                }
            ],
            "outputsClass": [
                {
                    "name": "backButtonAction",
                    "defaultValue": "new EventEmitter<\r\n    boolean\r\n  >()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "EventEmitter<boolean>"
                },
                {
                    "name": "informationUserAction",
                    "defaultValue": "new EventEmitter<\r\n    boolean\r\n  >()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter<boolean>"
                },
                {
                    "name": "navigationAction",
                    "defaultValue": "new EventEmitter<\r\n    MenuItems\r\n  >()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "EventEmitter<MenuItems>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "amountDec",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "amountInt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "initials",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "navigationSelected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "goBackAction",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "informationUser",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "navigationActive",
                    "args": [
                        {
                            "name": "item",
                            "type": "MenuItems",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "MenuItems",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "navigationMenu",
                    "args": [
                        {
                            "name": "item",
                            "type": "MenuItems",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "MenuItems",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\r\nimport { UserInterface } from '../../shared/interfaces/user.interface';\r\nimport { MenuItems } from '../../shared/interfaces/menuitems.interface';\r\n@Component({\r\n  selector: 'mln-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss'],\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  @Input() user: UserInterface = {\r\n    name: 'Name',\r\n    lastname: 'Surname1 Surname2',\r\n    patrimony: 0.0,\r\n  };\r\n  @Input() menuItems: Array<MenuItems> = [\r\n    { text: 'Link 1', class: 'active', navigation: '#' },\r\n    { text: 'Link 2', class: '', navigation: '#' },\r\n    { text: 'Link 3', class: '', navigation: '#' },\r\n    { text: 'Link 4', class: '', navigation: '#', disabled: true },\r\n  ];\r\n  @Output() backButtonAction: EventEmitter<boolean> = new EventEmitter<\r\n    boolean\r\n  >();\r\n  @Output() informationUserAction: EventEmitter<boolean> = new EventEmitter<\r\n    boolean\r\n  >();\r\n  @Output() navigationAction: EventEmitter<MenuItems> = new EventEmitter<\r\n    MenuItems\r\n  >();\r\n\r\n  public amountInt: number;\r\n  public amountDec: number;\r\n  public initials: string;\r\n  public navigationSelected: string;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.amountInt = Math.trunc(this.user.patrimony);\r\n    this.amountDec = Math.trunc((this.user.patrimony % 1) * 100);\r\n    this.initials =\r\n      this.user.name[0].toUpperCase() + this.user.lastname[0].toUpperCase();\r\n  }\r\n\r\n  public goBackAction(): void {\r\n    this.backButtonAction.emit(true);\r\n  }\r\n\r\n  public informationUser(): void {\r\n    this.informationUserAction.emit(true);\r\n  }\r\n\r\n  public navigationMenu(item: MenuItems): void {\r\n    this.navigationSelected = item.text;\r\n    this.navigationAction.emit(item);\r\n  }\r\n\r\n  public navigationActive(item: MenuItems): boolean {\r\n    const isNavigationSelected = !this.navigationSelected && item.class;\r\n    const isCurrentNavigationActive = this.navigationSelected === item.text;\r\n    if (!item.disabled && (isNavigationSelected || isCurrentNavigationActive)) {\r\n      this.menuItems = this.menuItems.map((d) => {\r\n        d.class = '';\r\n        if (item.text === d.text) {\r\n          d.class = 'active';\r\n        }\r\n        return d;\r\n      });\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../assets/theme/variables.scss\";\r\n$menu-height: 80px;\r\n.header-wrapper {\r\n    min-height: $menu-height;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    margin-bottom: 3px;\r\n    -webkit-box-shadow: 0px 10px 18px -5px rgba(204, 204, 204, 1);\r\n    -moz-box-shadow: 0px 10px 18px -5px rgba(204, 204, 204, 1);\r\n    box-shadow: 0px 10px 18px -5px rgba(204, 204, 204, 1);\r\n    top: 0;\r\n    left: 0;\r\n    background: map-get($colors, white);\r\n    z-index: 99;\r\n    padding: 8px 0;\r\n    .header-info {\r\n        display: flex;\r\n        .header-search {\r\n            cursor: pointer;\r\n            color: map-get($colors, black);\r\n            font-family: \"GillSans\";\r\n            font-weight: 400;\r\n            padding-left: 20px;\r\n            display: flex;\r\n            align-items: center;\r\n            .header-icon-back {\r\n                background-image: url(\"/assets/img/arrow-back.png\");\r\n                background-size: contain;\r\n                background-repeat: no-repeat;\r\n                width: 12px;\r\n                height: 12px;\r\n                display: inline-block;\r\n                padding-right: 5px;\r\n            }\r\n        }\r\n        .header-user {\r\n            display: flex;\r\n            margin: 0 20px;\r\n            margin-left: 10px;\r\n            @media only screen and (max-width: 540px) {\r\n                margin: 20px 0 10px;\r\n                justify-content: center;\r\n                text-align: center;\r\n                width: 100%;\r\n            }\r\n            .header-initial {\r\n                width: 50px;\r\n                min-width: 50px;\r\n                height: 50px;\r\n                border-radius: 50%;\r\n                background-color: #f1f5fc;\r\n                display: flex;\r\n                align-items: center;\r\n                justify-content: center;\r\n                color: map-get($colors, blueIcon);\r\n                text-transform: uppercase;\r\n                font-family: 'Roboto900';\r\n                font-size: 20px;\r\n            }\r\n            .header-user-info {\r\n                margin-left: 10px;\r\n                @media only screen and (max-width: 540px) {\r\n                    flex-wrap: wrap;\r\n                }\r\n                .header-user-name {\r\n                    color: map-get($colors, darkBlue);\r\n                    font-family: \"GillSansBold\";\r\n                    font-size: 20px;\r\n                }\r\n                .header-user-icon {\r\n                    cursor: pointer;\r\n                    padding-top: 5px;\r\n                    display: flex;\r\n                    align-items: center;\r\n                    >span:first-child {\r\n                        font-family: \"GillSans\";\r\n                        padding-right: 10px;\r\n                        border-right: 2px solid lightgray;\r\n                        display: inline-block;\r\n                        background-image: url(\"/assets/img/cliente-real.png\");\r\n                        background-repeat: no-repeat;\r\n                        background-size: contain;\r\n                        width: 30px;\r\n                        height: 28px;\r\n                    }\r\n                    >span:last-child {\r\n                        display: flex;\r\n                        align-items: center;\r\n                        font-family: 'Roboto';\r\n                        &:before {\r\n                            content: \" \";\r\n                            padding-right: 5px;\r\n                            position: relative;\r\n                            display: inline-block;\r\n                            width: 19px;\r\n                            height: 26px;\r\n                            top: 0px;\r\n                            background-image: url(\"/assets/img/success.png\");\r\n                            background-repeat: no-repeat;\r\n                            background-size: contain;\r\n                        }\r\n                        padding-left: 10px;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        .header-amount {\r\n            margin-left: 20px;\r\n            .header-amount-number {\r\n                color: map-get($colors, blueIcon);\r\n                font-family: \"RobotoBold\";\r\n                font-size: 24px;\r\n                padding-bottom: 3px;\r\n                white-space: nowrap;\r\n                .decimal {\r\n                    font-size: 18px;\r\n                }\r\n            }\r\n            .header-amount-text {\r\n                display: flex;\r\n                justify-content: left;\r\n                align-items: center;\r\n                font-family: \"Roboto\";\r\n                padding-bottom: 3px;\r\n            }\r\n            @media only screen and (max-width: 540px) {\r\n                text-align: center;\r\n                width: 100%;\r\n                .header-amount-number, .header-amount-text {\r\n                    text-align: center;\r\n                    justify-content: center;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    .header-menu {\r\n        list-style: none;\r\n        padding: 0;\r\n        display: flex;\r\n        min-height: $menu-height;\r\n        align-items: center;\r\n        margin: 0;\r\n        .header-item {\r\n            margin-right: 20px;\r\n            cursor: pointer;\r\n            display: flex;\r\n            min-height: $menu-height;\r\n            align-items: center;\r\n            box-sizing: border-box;\r\n            border-bottom: 4px solid transparent;\r\n            font-family: \"GillSans500\";\r\n            outline: none;\r\n            text-align: center;\r\n            &.active {\r\n                border-bottom: 4px solid map-get($colors, darkBlue);\r\n                outline: none;\r\n            }\r\n            &.disabled {\r\n                color: #9999;\r\n                pointer-events: none;\r\n            }\r\n            &:focus {\r\n                outline: none;\r\n            }\r\n        }\r\n    }\r\n    @media only screen and (max-width: 980px) {\r\n        flex-wrap: wrap;\r\n        justify-content: space-between;\r\n        .header-info {\r\n            width: 100%;\r\n            display: flex;\r\n            justify-content: space-between;\r\n            align-items: center;\r\n            padding-top: 10px;\r\n            padding-right: 10px;\r\n            @media only screen and (max-width: 540px) {\r\n                flex-wrap: wrap;\r\n            }\r\n        }\r\n        .header-menu {\r\n            justify-content: center;\r\n            display: flex;\r\n            width: 100%;\r\n            margin: 0;\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 34
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<header class=\"header-wrapper\">\r\n    <div class=\"header-info\">\r\n        <div class=\"header-search\" (click)=\"goBackAction()\">\r\n            <i class=\"header-icon-back\"></i>\r\n            <span>Buscador</span>\r\n        </div>\r\n        <div class=\"header-user\">\r\n            <div class=\"header-initial\">{{initials}}</div>\r\n            <div class=\"header-user-info\">\r\n                <div class=\"header-user-name\">{{user.name}} {{user.lastname}}</div>\r\n                <div class=\"header-user-icon\" (click)=\"informationUser()\">\r\n                    <span></span>\r\n                    <span>MiFid</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"header-amount\">\r\n            <div class=\"header-amount-number\">\r\n                <span>{{amountInt}}</span><span class=\"decimal\">,{{amountDec}} €</span>\r\n            </div>\r\n            <div class=\"header-amount-text\">PATRIMONIO</div>\r\n        </div>\r\n    </div>\r\n    <ul class=\"header-menu\">\r\n        <li class=\"header-item\" *ngFor=\"let item of menuItems;\" [class.active]=\"navigationActive(item)\" [ngClass]=\"{ disabled: item.disabled }\" (click)=\"navigationMenu(item)\">\r\n            {{ item.text }}\r\n        </li>\r\n    </ul>\r\n</header>"
        },
        {
            "name": "HeritageComponent",
            "id": "component-HeritageComponent-3c0d877d62d8c8609eb04deb48f434a4",
            "file": "projects/app/src/lib/pages/heritage/heritage.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mln-heritage",
            "styleUrls": [
                "./heritage.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./heritage.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "checkbox",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CheckBoxComponent",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'checkbox', {static: false}"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "customChart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartCircleComponent",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'customChart', {static: false}"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "custonToggle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SliderToggleComponent",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'toggle', {static: false}"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "heritageModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HeritageModel",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "settingsButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "settingsChart",
                    "defaultValue": "{\r\n    colors: ['#85e3d1', '#3bcaaf', '#1ea78d', '#19816d', '#8471d6', '#2fb8de'],\r\n    series: [2378, 2165, 2333, 1852, 2456, 2154],\r\n    labels: [\r\n      'Inversiones en forma de Seguro de Vida',\r\n      'Fondos de Inversión',\r\n      'Inversiones bancarias',\r\n      'Inversiones de Área de valores',\r\n      'Jubilación',\r\n      'Servicios Bancarios',\r\n    ],\r\n    popupText: 'Dinero invertido',\r\n    total: 1345567.16,\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "settingsCheckBox",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "settingsCheckBoxRight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "statusTextToggleSettings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "testObserver",
                    "defaultValue": "new Subject<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "totalHeritage",
                    "defaultValue": "1345567.16",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { HeritageModel } from './model/heritage.model';\r\nimport { Subject } from 'rxjs';\r\nimport { SliderToggleComponent } from '../../components/slider-toggle';\r\nimport { CheckBoxComponent } from '../../components/check-box';\r\nimport { ChartCircleComponent } from '../../components/chart-circle';\r\n\r\n@Component({\r\n  selector: 'mln-heritage',\r\n  templateUrl: './heritage.component.html',\r\n  styleUrls: ['./heritage.component.scss'],\r\n})\r\nexport class HeritageComponent implements OnInit {\r\n  @ViewChild('customChart', { static: false })\r\n  public customChart: ChartCircleComponent;\r\n  @ViewChild('toggle', { static: false })\r\n  public custonToggle: SliderToggleComponent;\r\n  @ViewChild('checkbox', { static: false })\r\n  public checkbox: CheckBoxComponent;\r\n\r\n  public totalHeritage = 1345567.16;\r\n  public statusTextToggleSettings: { first: string; second: string };\r\n  public heritageModel: HeritageModel;\r\n  public settingsChart = {\r\n    colors: ['#85e3d1', '#3bcaaf', '#1ea78d', '#19816d', '#8471d6', '#2fb8de'],\r\n    series: [2378, 2165, 2333, 1852, 2456, 2154],\r\n    labels: [\r\n      'Inversiones en forma de Seguro de Vida',\r\n      'Fondos de Inversión',\r\n      'Inversiones bancarias',\r\n      'Inversiones de Área de valores',\r\n      'Jubilación',\r\n      'Servicios Bancarios',\r\n    ],\r\n    popupText: 'Dinero invertido',\r\n    total: 1345567.16,\r\n  };\r\n  public settingsButton: any;\r\n  public settingsCheckBox: any;\r\n  public testObserver = new Subject<boolean>();\r\n  public settingsCheckBoxRight: any;\r\n\r\n  constructor() {\r\n    this.heritageModel = new HeritageModel();\r\n    this.settingsCheckBox = {\r\n      color: '',\r\n      title: '',\r\n      checked: true,\r\n      id: null,\r\n      callBack: this.testObserver,\r\n    };\r\n    this.settingsButton = {\r\n      text: 'SIGUIENTE',\r\n      classButton: 'secondary',\r\n      isDisabled: true,\r\n      callback: this.testObserver,\r\n      isSquare: false,\r\n      icon: '',\r\n    };\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.statusTextToggleSettings = this.heritageModel.getSettingsToggle();\r\n    this.settingsCheckBoxRight = this.heritageModel.getSettingsCheckBox();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".apex-wrapper {\r\n    background-color: #f1f5fc;\r\n    display: flex;\r\n    @media only screen and (max-width: 980px) {\r\n        flex-wrap: wrap;\r\n        flex-direction: column-reverse;\r\n    }\r\n    .main-wrapper-2 {\r\n        width: 74%;\r\n        background-color: white;\r\n        margin: 20px;\r\n        border: 1px solid rgba(143, 143, 143, 0.295);\r\n        @media only screen and (max-width: 980px) {\r\n            width: 100%;\r\n            margin: 20px 0;\r\n        }\r\n    }\r\n    .context-wrapper {\r\n        background-color: #f1f5fc;\r\n        width: 24%;\r\n        margin: 20px 0;\r\n        margin-left: 3%;\r\n        @media only screen and (max-width: 980px) {\r\n            width: 100%;\r\n            display: flex;\r\n            justify-content: center;\r\n            margin: 0;\r\n            >* {\r\n                margin-left: 20px;\r\n            }\r\n        }\r\n        .title {\r\n            color: #70838b;\r\n            font-size: 14px;\r\n            padding: 10px 0;\r\n        }\r\n        ul {\r\n            list-style: none;\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./heritage.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 41
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"apex-wrapper\">\r\n    <div class=\"main-wrapper-2\">\r\n        <mln-chart-circle #customChart title=\"Patrimonio Mediolanum\" subText=\"Los filtros se aplicarán al análisis de las 5Ds\" [settingsChart]=\"settingsChart\" [settingsButton]=\"settingsButton\"></mln-chart-circle>\r\n    </div>\r\n    <div class=\"context-wrapper\">\r\n        <div>\r\n            <p class=\"title\">Visualización</p>\r\n            <div>\r\n                <mln-slider-toggle #toggle [statusText]=\"statusTextToggleSettings\"></mln-slider-toggle>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <p class=\"title\">Patrimonio</p>\r\n            <ul>\r\n                <li *ngFor=\"let item of settingsCheckBoxRight\">\r\n                    <mln-check-box #checkbox [settings]=\"item\"></mln-check-box>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-1b47df2734a969d001880519ef9a2b1e",
            "file": "projects/app/src/lib/pages/page-home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mln-home",
            "styleUrls": [
                "./home.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "amount",
                    "defaultValue": "5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "clients",
                    "defaultValue": "[\r\n    {\r\n      name: 'Mónica',\r\n      lastname: 'Minguez Torres',\r\n      email: '',\r\n      phone: '',\r\n      proposal: '',\r\n      type: '',\r\n      available: true,\r\n      patrimony: 5090321,\r\n    },\r\n    {\r\n      name: 'Carlos',\r\n      lastname: 'Tauroni Hernández',\r\n      email: '',\r\n      phone: '',\r\n      proposal: '',\r\n      type: '',\r\n      available: true,\r\n      patrimony: 2490321,\r\n    },\r\n    {\r\n      name: 'Marta',\r\n      lastname: 'Rodriguez Jimenez',\r\n      email: '',\r\n      phone: '',\r\n      proposal: '',\r\n      type: '',\r\n      available: false,\r\n      patrimony: 721000,\r\n    },\r\n    {\r\n      name: 'Eduardo',\r\n      lastname: 'Marín Prieto',\r\n      email: '',\r\n      phone: '',\r\n      proposal: '',\r\n      type: '',\r\n      available: false,\r\n      patrimony: 10800956,\r\n    },\r\n    {\r\n      name: 'Gonzalo',\r\n      lastname: 'Varela Benitez',\r\n      email: '',\r\n      phone: '',\r\n      proposal: '',\r\n      type: '',\r\n      available: true,\r\n      patrimony: 207834,\r\n    },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "clientsShow",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "customCustomerInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CustomerInfoComponent",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "CustomerInfoComponent, {static: false}"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "customSearchInput",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SearchInputComponent",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "SearchInputComponent, {static: false}"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "settings",
                    "defaultValue": "{ textInputDefault: 'Search', icon: 'search' }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "settingsSelect",
                    "defaultValue": "{\r\n    firstOption: 'Ninguna',\r\n    title: 'Propuestas',\r\n    listItemSelect: [\r\n      {\r\n        id: 0,\r\n        name: 'Propuesta 1',\r\n      },\r\n      {\r\n        id: 1,\r\n        name: 'Propuesta 2',\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'Propuesta 3',\r\n      },\r\n      {\r\n        id: 3,\r\n        name: 'Propuesta 4',\r\n      },\r\n      {\r\n        id: 4,\r\n        name: 'Propuesta 5',\r\n      },\r\n    ],\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 75,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "user",
                    "defaultValue": "{ name: 'Jonas', lastname: 'Segura Javier' }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "searchTextChange",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { CustomerInfoComponent } from '../../components/customer-info';\r\nimport { SearchInputComponent } from '../../components/search-input';\r\n\r\n@Component({\r\n  selector: 'mln-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss'],\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  @ViewChild(SearchInputComponent, { static: false })\r\n  public customSearchInput: SearchInputComponent;\r\n  @ViewChild(CustomerInfoComponent, { static: false })\r\n  public customCustomerInfo: CustomerInfoComponent;\r\n  public text: string;\r\n\r\n  public clients = [\r\n    {\r\n      name: 'Mónica',\r\n      lastname: 'Minguez Torres',\r\n      email: '',\r\n      phone: '',\r\n      proposal: '',\r\n      type: '',\r\n      available: true,\r\n      patrimony: 5090321,\r\n    },\r\n    {\r\n      name: 'Carlos',\r\n      lastname: 'Tauroni Hernández',\r\n      email: '',\r\n      phone: '',\r\n      proposal: '',\r\n      type: '',\r\n      available: true,\r\n      patrimony: 2490321,\r\n    },\r\n    {\r\n      name: 'Marta',\r\n      lastname: 'Rodriguez Jimenez',\r\n      email: '',\r\n      phone: '',\r\n      proposal: '',\r\n      type: '',\r\n      available: false,\r\n      patrimony: 721000,\r\n    },\r\n    {\r\n      name: 'Eduardo',\r\n      lastname: 'Marín Prieto',\r\n      email: '',\r\n      phone: '',\r\n      proposal: '',\r\n      type: '',\r\n      available: false,\r\n      patrimony: 10800956,\r\n    },\r\n    {\r\n      name: 'Gonzalo',\r\n      lastname: 'Varela Benitez',\r\n      email: '',\r\n      phone: '',\r\n      proposal: '',\r\n      type: '',\r\n      available: true,\r\n      patrimony: 207834,\r\n    },\r\n  ];\r\n\r\n  public clientsShow = [];\r\n\r\n  public settings = { textInputDefault: 'Search', icon: 'search' };\r\n  public user = { name: 'Jonas', lastname: 'Segura Javier' };\r\n  public amount = 5;\r\n  public settingsSelect = {\r\n    firstOption: 'Ninguna',\r\n    title: 'Propuestas',\r\n    listItemSelect: [\r\n      {\r\n        id: 0,\r\n        name: 'Propuesta 1',\r\n      },\r\n      {\r\n        id: 1,\r\n        name: 'Propuesta 2',\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'Propuesta 3',\r\n      },\r\n      {\r\n        id: 3,\r\n        name: 'Propuesta 4',\r\n      },\r\n      {\r\n        id: 4,\r\n        name: 'Propuesta 5',\r\n      },\r\n    ],\r\n  };\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.clientsShow = this.clients;\r\n  }\r\n\r\n  public searchTextChange(e): void {\r\n    // TODO: Filtering properly data\r\n    // this.clientsShow = this.clients.filter(client => client.name.indexOf(e) != -1);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".home{\r\n\r\n    .home-title{\r\n        color: #70838b;\r\n    }\r\n\r\n    .home-search{\r\n        margin: 30px 0;\r\n    }\r\n}",
                    "styleUrl": "./home.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 100
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"home\">\r\n    <div class=\"home-title\">\r\n        <h3>5D Strategy</h3>\r\n    </div>\r\n    <div class=\"home-search\">\r\n        <mln-search-input #customSearchInput [settings]=\"settings\" [amount]=\"amount\" (changes)=\"searchTextChange($event)\"></mln-search-input>\r\n    </div>\r\n    <div class=\"home-customer-list\">\r\n        <mln-customer-info #customCustomerInfo *ngFor=\"let user of clientsShow\" [settingsSelect]=\"settingsSelect\" [user]=\"user\" textRow=\"Patrimonio\"></mln-customer-info>\r\n    </div>\r\n</div>"
        },
        {
            "name": "NewProposalComponent",
            "id": "component-NewProposalComponent-59a4bc53a70dbb3019608ca443a16ec9",
            "file": "projects/app/src/lib/components/new-proposal/storybook/new-proposal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mln-new-proposal",
            "styleUrls": [
                "./new-proposal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./new-proposal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "linkAmount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "literal type"
                },
                {
                    "name": "linkHiring",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "literal type"
                },
                {
                    "name": "menuItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "Array<literal type>"
                }
            ],
            "outputsClass": [
                {
                    "name": "closeAction",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter<boolean>"
                },
                {
                    "name": "saveAction",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "EventEmitter<boolean>"
                },
                {
                    "name": "selectAction",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "EventEmitter<Event>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "step",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StepComponent",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "StepComponent, {static: false}"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "stepper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StepperComponent",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "StepperComponent, {static: false}"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "closeActionEmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngAfterViewChecked",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "saveActionEmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectActionEmit",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectorRef,\r\n  AfterViewChecked,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { StepComponent } from '../step/step.component';\r\nimport { StepperComponent } from '../stepper.component';\r\n@Component({\r\n  selector: 'mln-new-proposal',\r\n  templateUrl: './new-proposal.component.html',\r\n  styleUrls: ['./new-proposal.component.scss'],\r\n})\r\nexport class NewProposalComponent implements OnInit, AfterViewChecked {\r\n  @ViewChild(StepperComponent, { static: false })\r\n  public stepper: StepperComponent;\r\n  @ViewChild(StepComponent, { static: false })\r\n  public step: StepComponent;\r\n  @Output() closeAction: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  @Output() saveAction: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  @Output() selectAction: EventEmitter<Event> = new EventEmitter<Event>();\r\n  @Input() menuItems: Array<{\r\n    icon: string;\r\n    text: string;\r\n    class: string;\r\n    valid: boolean;\r\n  }>;\r\n  @Input() linkAmount: {\r\n    disabled: boolean;\r\n    show: boolean;\r\n    callback: Subject<boolean>;\r\n  };\r\n  @Input() linkHiring: {\r\n    disabled: boolean;\r\n    show: boolean;\r\n    callback: Subject<boolean>;\r\n  };\r\n\r\n  constructor(private readonly cd: ChangeDetectorRef) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  ngAfterViewChecked(): void {\r\n    this.cd.detectChanges();\r\n  }\r\n\r\n  public closeActionEmit(): void {\r\n    this.closeAction.emit(true);\r\n  }\r\n\r\n  public saveActionEmit(): void {\r\n    this.saveAction.emit(true);\r\n  }\r\n\r\n  public selectActionEmit(event: Event): void {\r\n    this.selectAction.emit(event);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./new-proposal.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 42,
                "jsdoctags": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "AfterViewChecked"
            ],
            "templateData": "<mln-stepper (selectAction)=\"selectActionEmit($event)\" (closeAction)=\"closeActionEmit()\" (saveAction)=\"saveActionEmit()\" [linkAmount]=\"linkAmount\" [linkHiring]=\"linkHiring\">\r\n    <mln-step [title]=\"item.text\" descriptionLabel=\"description\" *ngFor=\"let item of menuItems\">\r\n        <p>Contenido para {{ item.text }}</p>\r\n    </mln-step>\r\n</mln-stepper>"
        },
        {
            "name": "PageProposalComponent",
            "id": "component-PageProposalComponent-61a2706121d02cc93bf77f72b4e480c5",
            "file": "projects/app/src/lib/pages/page-proposal/page-proposal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mln-page-proposal",
            "styleUrls": [
                "./page-proposal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./page-proposal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "customButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButtonComponent",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'customButton', {static: false}"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "customHeader",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HeaderComponent",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'customHeader', {static: false}"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "customTable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DatatableComponent",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'customTable', {static: false}"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "datacolumns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataColumns[]",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "datasources",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableInterface[]",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "menuItems",
                    "defaultValue": "[\r\n    { text: 'Patrimonio', class: '', navigation: 'heritage', disabled: true },\r\n    { text: 'Análisis 5D', class: '', navigation: 'analytics', disabled: true },\r\n    {\r\n      text: 'Propuestas de inversión',\r\n      class: 'active',\r\n      navigation: 'proposal',\r\n    },\r\n    { text: 'Informes', class: '', navigation: 'reports', disabled: true },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<MenuItems>",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "user",
                    "defaultValue": "{\r\n    name: 'Carlos Alberto',\r\n    lastname: 'Tauroni Hernandéz',\r\n    patrimony: 35677000.13,\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserInterface",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getColumnsData",
                    "args": [],
                    "optional": false,
                    "returnType": "DataColumns[]",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { DataTableInterface } from '../../shared/interfaces/data-table/datatable.interface';\r\nimport { UserInterface } from '../../shared/interfaces/user.interface';\r\nimport { MenuItems } from '../../shared/interfaces/menuitems.interface';\r\nimport { datatableMock } from '../../shared/model/data-table/datatable.model';\r\nimport { datatableActionsMock } from '../../shared/model/data-table/actions.model';\r\nimport { DataColumns } from '../../shared/interfaces/data-columns.interface';\r\nimport { ButtonComponent } from '../../components/button';\r\nimport { DatatableComponent } from '../../components/datatable';\r\nimport { HeaderComponent } from '../../components/header';\r\n@Component({\r\n  selector: 'mln-page-proposal',\r\n  templateUrl: './page-proposal.component.html',\r\n  styleUrls: ['./page-proposal.component.scss'],\r\n})\r\nexport class PageProposalComponent implements OnInit {\r\n  @ViewChild('customHeader', { static: false })\r\n  public customHeader: HeaderComponent;\r\n  @ViewChild('customButton', { static: false })\r\n  public customButton: ButtonComponent;\r\n  @ViewChild('customTable', { static: false })\r\n  public customTable: DatatableComponent;\r\n  public user: UserInterface = {\r\n    name: 'Carlos Alberto',\r\n    lastname: 'Tauroni Hernandéz',\r\n    patrimony: 35677000.13,\r\n  };\r\n  public menuItems: Array<MenuItems> = [\r\n    { text: 'Patrimonio', class: '', navigation: 'heritage', disabled: true },\r\n    { text: 'Análisis 5D', class: '', navigation: 'analytics', disabled: true },\r\n    {\r\n      text: 'Propuestas de inversión',\r\n      class: 'active',\r\n      navigation: 'proposal',\r\n    },\r\n    { text: 'Informes', class: '', navigation: 'reports', disabled: true },\r\n  ];\r\n  public datasources: DataTableInterface[];\r\n  public datacolumns: DataColumns[];\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.datasources = datatableMock;\r\n    this.datacolumns = this.getColumnsData();\r\n  }\r\n\r\n  private getColumnsData(): DataColumns[] {\r\n    return [\r\n      {\r\n        key: 'id',\r\n        name: 'ID propuesta',\r\n        types: { type: 'text' },\r\n      },\r\n      {\r\n        key: 'description',\r\n        name: 'Descripción',\r\n        types: { type: 'text' },\r\n      },\r\n      {\r\n        key: 'type',\r\n        name: 'Tipo',\r\n        types: { type: 'text' },\r\n      },\r\n      {\r\n        key: 'amount',\r\n        name: 'Importe',\r\n        types: { type: 'money' },\r\n      },\r\n      {\r\n        key: 'date',\r\n        name: 'Fecha',\r\n        types: { type: 'date', settings: { format: 'dd/MM/yyyy' } },\r\n      },\r\n      {\r\n        key: 'status',\r\n        name: 'Estado',\r\n        class: 'status',\r\n        types: { type: 'text' },\r\n      },\r\n      {\r\n        key: 'options',\r\n        name: 'Opciones',\r\n        types: {\r\n          type: 'select',\r\n          settings: {\r\n            select: {\r\n              class: 'proposal-table__options',\r\n              firstOption: 'Ninguna',\r\n              title: 'Ver opciones',\r\n            },\r\n            listItem: datatableActionsMock,\r\n          },\r\n        },\r\n      },\r\n    ];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../assets/theme/variables.scss\";\r\n.bg {\r\n    background-color: #f8fafd;\r\n    height: 100vh;\r\n}\r\n\r\n.header-proposal {\r\n    display: flex;\r\n    align-items: flex-end;\r\n    justify-content: space-between;\r\n    margin: 30px;\r\n    border-bottom: 1px solid;\r\n    padding-bottom: 20px;\r\n    color: #afbfc6;\r\n    padding-top: 20px;\r\n    .title {\r\n        color: #202967;\r\n        font-family: \"GillSansBold\";\r\n        font-size: 20px;\r\n    }\r\n    .text {\r\n        font-size: 14px;\r\n        color: #4e5c63;\r\n    }\r\n    @media only screen and (max-width: 720px) {\r\n        flex-wrap: wrap;\r\n        justify-content: center;\r\n        .title {\r\n            margin: 10px 0;\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./page-proposal.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 39
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"\">\r\n    <mln-header #customHeader [user]=\"user\" [menuItems]=\"menuItems\"></mln-header>\r\n</div>\r\n<div class=\"bg\">\r\n    <!-- header -->\r\n    <div class=\"header-proposal\">\r\n        <!-- title -->\r\n        <div class=\"title\">\r\n            Propuestas de inversión\r\n            <span class=\"text\"> {{ datasources?.length }} prefix</span>\r\n        </div>\r\n        <!-- button create proposal -->\r\n        <div>\r\n            <mln-button #customButton text=\"CREAR PROPUESTA\" classButton=\"primary\" [isDisabled]=\"false\"></mln-button>\r\n        </div>\r\n    </div>\r\n    <!-- table proposals -->\r\n    <div>\r\n        <mln-datatable #customTable [datasources]=\"datasources\" [datacolumns]=\"datacolumns\"></mln-datatable>\r\n    </div>\r\n</div>"
        },
        {
            "name": "PatrimonyComponent",
            "id": "component-PatrimonyComponent-51eff4389b002be62989c2d60d3be723",
            "file": "projects/app/src/lib/pages/page-patrimony/patrimony.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mln-patrimony",
            "styleUrls": [
                "./patrimony.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./patrimony.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "headerCustom",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HeaderComponent",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'headerCustom', {static: false}"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "heritageCustom",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HeritageComponent",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'heritageCustom', {static: false}"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "menuItems",
                    "defaultValue": "[\r\n    { text: 'Patrimonio', class: 'active', navigation: 'heritage' },\r\n    { text: 'Análisis 5D', class: '', navigation: 'analytics', disabled: true },\r\n    {\r\n      text: 'Propuestas de inversión',\r\n      class: '',\r\n      navigation: 'proposal',\r\n      disabled: true,\r\n    },\r\n    { text: 'Informes', class: '', navigation: 'reports', disabled: true },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<MenuItems>",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "user",
                    "defaultValue": "{\r\n    name: 'Carlos Alberto',\r\n    lastname: 'Tauroni Hernandéz',\r\n    patrimony: 35677000.13,\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserInterface",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { UserInterface } from '../../shared/interfaces/user.interface';\r\nimport { MenuItems } from '../../shared/interfaces/menuitems.interface';\r\nimport { HeaderComponent } from '../../components/header';\r\nimport { HeritageComponent } from '../heritage';\r\n\r\n@Component({\r\n  selector: 'mln-patrimony',\r\n  templateUrl: './patrimony.component.html',\r\n  styleUrls: ['./patrimony.component.scss'],\r\n})\r\nexport class PatrimonyComponent implements OnInit {\r\n  @ViewChild('headerCustom', { static: false })\r\n  public headerCustom: HeaderComponent;\r\n  @ViewChild('heritageCustom', { static: false })\r\n  public heritageCustom: HeritageComponent;\r\n  public user: UserInterface = {\r\n    name: 'Carlos Alberto',\r\n    lastname: 'Tauroni Hernandéz',\r\n    patrimony: 35677000.13,\r\n  };\r\n  public menuItems: Array<MenuItems> = [\r\n    { text: 'Patrimonio', class: 'active', navigation: 'heritage' },\r\n    { text: 'Análisis 5D', class: '', navigation: 'analytics', disabled: true },\r\n    {\r\n      text: 'Propuestas de inversión',\r\n      class: '',\r\n      navigation: 'proposal',\r\n      disabled: true,\r\n    },\r\n    { text: 'Informes', class: '', navigation: 'reports', disabled: true },\r\n  ];\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".patrimony{\r\n\r\n\r\n    .patrimony-title{\r\n        color: #70838b;\r\n    }\r\n\r\n    .patrimony-search{\r\n        margin: 30px 0;\r\n    }\r\n}",
                    "styleUrl": "./patrimony.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 32
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"patrimony\">\r\n\r\n    <div class=\"patrimony-title\">\r\n        <mln-header #headerCustom [user]=\"user\" [menuItems]=\"menuItems\"></mln-header>\r\n    </div>\r\n    <div>\r\n        <mln-heritage #heritageCustom></mln-heritage>\r\n    </div>\r\n</div>"
        },
        {
            "name": "ProfileTableComponent",
            "id": "component-ProfileTableComponent-75121e42bf94ef3c6996d87a18f1a29f",
            "file": "projects/app/src/lib/components/profile-table/profile-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mln-profile-table",
            "styleUrls": [
                "./profile-table.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./profile-table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mln-profile-table',\r\n  templateUrl: './profile-table.component.html',\r\n  styleUrls: ['./profile-table.component.scss'],\r\n})\r\nexport class ProfileTableComponent implements OnInit {\r\n  @Input() public title: string;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../assets/theme/variables.scss\";\r\n@import \"../../../../assets//theme/tools/tools__pixel-to-rem\";\r\n.profile-table {\r\n    box-sizing: border-box;\r\n    padding: rem(25);\r\n    background-color: #ebeff2;\r\n    border: rem(1) solid #c2ced3;\r\n    border-radius: rem(5);\r\n    .separator {\r\n        border-bottom: rem(2) solid #8080803b;\r\n        margin: rem(6) 0;\r\n        padding: rem(5) 0;\r\n    }\r\n    .table-title {\r\n        padding-left: rem(5);\r\n        font-family: \"RobotoBold\";\r\n        color: map-get($colors, darkBlue);\r\n    }\r\n    .content {\r\n        padding: rem(16);\r\n    }\r\n}",
                    "styleUrl": "./profile-table.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"profile-table\">\r\n    <div class=\"table-title\">\r\n        {{ title }}\r\n    </div>\r\n    <div class=\"separator\"></div>\r\n    <div class=\"content\">\r\n        <ng-content></ng-content>\r\n    </div>\r\n</div>"
        },
        {
            "name": "ProgressBarComponent",
            "id": "component-ProgressBarComponent-4a5470d35c1a635324fe914a2d020f76",
            "file": "projects/app/src/lib/components/progress-bar/progress-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mln-progress-bar",
            "styleUrls": [
                "./progress-bar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./progress-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "deadline",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string"
                },
                {
                    "name": "progressInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "Array<literal type>"
                },
                {
                    "name": "time",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mln-progress-bar',\r\n  templateUrl: './progress-bar.component.html',\r\n  styleUrls: ['./progress-bar.component.scss'],\r\n})\r\nexport class ProgressBarComponent implements OnInit {\r\n  @Input() icon: string;\r\n  @Input() deadline: string;\r\n  @Input() time: string;\r\n  @Input() progressInfo: Array<{ amount: string; text: string }>;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../assets/theme/variables.scss\";\r\n.pb-wrapper {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    flex-wrap: wrap;\r\n    border-radius: 5px;\r\n    min-height: 110px;\r\n    border: 1px solid lightgray;\r\n    background: white;\r\n    .pb-type {\r\n        flex-wrap: wrap;\r\n        width: 25%;\r\n        padding-left: 40px;\r\n        box-sizing: border-box;\r\n        display: flex;\r\n        align-items: center;\r\n        @media only screen and (max-width: 980px) {\r\n            width: 30%;\r\n        }\r\n        @media only screen and (max-width: 720px) {\r\n            width: 100%;\r\n            padding-left: 10px;\r\n        }\r\n        .pb-img {\r\n            margin-right: 20px;\r\n            display: inline-block;\r\n            /*background-image: url(\"/assets/img/img.png\");*/\r\n            background-repeat: no-repeat;\r\n            background-size: cover;\r\n            width: 30px;\r\n            height: 30px;\r\n            font-size: 35px;\r\n            top: -3px;\r\n            position: relative;\r\n        }\r\n        .pb-deadline {\r\n            font-family: \"RobotoBold\";\r\n            font-size: 13px;\r\n        }\r\n        .pb-time {\r\n            font-family: \"Roboto\";\r\n            font-size: 13px;\r\n        }\r\n    }\r\n    .pb-bar-info-wrapper {\r\n        width: 75%;\r\n        display: flex;\r\n        align-items: center;\r\n        box-sizing: border-box;\r\n        // padding-bottom: 10px;\r\n        @media only screen and (max-width: 980px) {\r\n            width: 70%;\r\n        }\r\n        @media only screen and (max-width: 720px) {\r\n            width: 100%;\r\n            margin: 0 10px;\r\n        }\r\n        flex-wrap: wrap;\r\n        .pb-bar-info-item {\r\n            display: flex;\r\n            align-items: center;\r\n            box-sizing: border-box;\r\n            width: 100%;\r\n            padding: 2px 0;\r\n            .pb-bar {\r\n                width: 80%;\r\n                box-sizing: border-box;\r\n                padding-right: 5px;\r\n            }\r\n            .pb-info {\r\n                text-align: left;\r\n                padding: 0 5px 0 25px;\r\n                box-sizing: border-box;\r\n                .pb-amount {\r\n                    font-family: \"RobotoBold\";\r\n                }\r\n                .pb-text {\r\n                    font-size: 11px;\r\n                    text-transform: uppercase;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./progress-bar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"pb-wrapper\">\r\n    <div class=\"pb-type\">\r\n        <mat-icon class=\"pb-img material-icons-outlined\">{{icon}}</mat-icon>\r\n        <div>\r\n            <div class=\"pb-deadline\">\r\n                {{ deadline }}\r\n            </div>\r\n            <div class=\"pb-time\">\r\n                {{ time }}\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"pb-bar-info-wrapper\">\r\n        <div class=\"pb-bar-info-item\" *ngFor=\"let progress of progressInfo\">\r\n            <div class=\"pb-bar\">\r\n                <mat-progress-bar mode=\"determinate\" value=\"{{ progress.amount }}\"></mat-progress-bar>\r\n            </div>\r\n            <div class=\"pb-info\">\r\n                <div class=\"pb-amount\">{{ progress.amount }} %</div>\r\n                <div class=\"pb-text\">\r\n                    {{ progress.text }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"
        },
        {
            "name": "ProposalMessageComponent",
            "id": "component-ProposalMessageComponent-f757a7a15b909b9c1481fb652359a4c4",
            "file": "projects/app/src/lib/components/proposal-message/proposal-message.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mln-proposal-message",
            "styleUrls": [
                "./proposal-message.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./proposal-message.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string"
                },
                {
                    "name": "textDonw",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "textUp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mln-proposal-message',\r\n  templateUrl: './proposal-message.component.html',\r\n  styleUrls: ['./proposal-message.component.scss'],\r\n})\r\nexport class ProposalMessageComponent implements OnInit {\r\n  @Input() icon: string;\r\n  @Input() textUp: string;\r\n  @Input() textDonw: string;\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../assets/theme/variables.scss\";\r\n.proposal-msg {\r\n    width: 100%;\r\n    text-align: center;\r\n    margin: 40px 10px;\r\n    .icon {\r\n        width: 45px;\r\n        height: 45px;\r\n        background-position: center;\r\n        background-repeat: no-repeat;\r\n        background-size: auto;\r\n        display: inline-block;\r\n        /*background-image: url('/assets/img/actividad-profesional.png');*/\r\n        font-size: 30px;\r\n        font-size: 40px;\r\n        color: map-get($colors, lightgray);\r\n    }\r\n    .title {\r\n        color: map-get($colors, darkBlue);\r\n        font-size: 20px;\r\n        font-family: \"GillSansBold\";\r\n    }\r\n    .date {\r\n        color: map-get($colors, gray);\r\n        font-size: 15px;\r\n        font-family: \"Roboto\";\r\n    }\r\n}",
                    "styleUrl": "./proposal-message.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"proposal-msg\">\r\n    <mat-icon class=\"icon\">{{icon}}</mat-icon>\r\n    <p class=\"title\">{{textUp}}</p>\r\n    <p class=\"date\">{{textDonw}}</p>\r\n</div>"
        },
        {
            "name": "RadioButtonListComponent",
            "id": "component-RadioButtonListComponent-6c86e5077f02e4bb3376db789f9fbd12",
            "file": "projects/app/src/lib/components/radio-button-list/radio-button-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mln-radio-button-list",
            "styleUrls": [
                "./radio-button-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./radio-button-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "list",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "literal type[]"
                },
                {
                    "name": "textLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "vertical",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean"
                }
            ],
            "outputsClass": [
                {
                    "name": "actionRadioButton",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "changeDetectionRadio",
                    "args": [
                        {
                            "name": "event",
                            "type": "MatRadioChange",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MatRadioChange",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\r\nimport { MatRadioChange } from '@angular/material/radio';\r\n\r\n@Component({\r\n  selector: 'mln-radio-button-list',\r\n  templateUrl: './radio-button-list.component.html',\r\n  styleUrls: ['./radio-button-list.component.scss'],\r\n})\r\nexport class RadioButtonListComponent implements OnInit {\r\n  @Output() actionRadioButton: EventEmitter<any> = new EventEmitter<any>();\r\n  @Input() textLabel: string;\r\n  @Input() list: { text: string; checked: boolean }[];\r\n  @Input() vertical: boolean;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  public changeDetectionRadio(event: MatRadioChange): void {\r\n    const text = event?.source?._elementRef?.nativeElement?.textContent.trim();\r\n    const element = event?.source?._elementRef?.nativeElement;\r\n    const value = event?.value;\r\n    this.actionRadioButton.emit({ text, element, value });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../assets/theme/variables.scss\";\r\n.radio-group {\r\n    &--vertical {\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n    margin: 15px 0;\r\n}\r\n\r\n.radio-button {\r\n    margin: 5px;\r\n}\r\n\r\n.radio-group-label {\r\n    font-weight: 600;\r\n    color: map-get($colors, darkText);\r\n    width: 100%;\r\n    display: block;\r\n}",
                    "styleUrl": "./radio-button-list.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<label id=\"radio-group-label\" class=\"radio-group-label\" *ngIf=\"textLabel\">{{ textLabel }}</label>\r\n<mat-radio-group *ngIf=\"list && list.length\" aria-labelledby=\"radio-group-label\" class=\"radio-group\" [ngClass]=\"vertical ? 'radio-group--vertical' : ''\" (change)=\"changeDetectionRadio($event)\">\r\n    <mat-radio-button class=\"radio-button\" *ngFor=\"let item of list; let i = index\" [value]=\"i\" [checked]=\"item.checked\">\r\n        {{ item.text }}\r\n    </mat-radio-button>\r\n</mat-radio-group>"
        },
        {
            "name": "SearchInputComponent",
            "id": "component-SearchInputComponent-eaad7ba5fc343ecd5d876683fc3a2430",
            "file": "projects/app/src/lib/components/search-input/search-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mln-search-input",
            "styleUrls": [
                "./search-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./search-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "amount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "number"
                },
                {
                    "name": "settings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "literal type"
                }
            ],
            "outputsClass": [
                {
                    "name": "changes",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "EventEmitter<string>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "formGroupSearch",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "subscribeToFormFilters",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'mln-search-input',\r\n  templateUrl: './search-input.component.html',\r\n  styleUrls: ['./search-input.component.scss'],\r\n})\r\nexport class SearchInputComponent implements OnInit {\r\n  @Input() settings: { textInputDefault: string; icon: string };\r\n  @Input() amount: number;\r\n  @Output() changes: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  public formGroupSearch: FormGroup;\r\n\r\n  constructor(private readonly formBuilder: FormBuilder) {}\r\n\r\n  ngOnInit(): void {\r\n    this.formGroupSearch = this.formBuilder.group({ search: [''] });\r\n    this.subscribeToFormFilters();\r\n  }\r\n\r\n  private subscribeToFormFilters(): void {\r\n    this.formGroupSearch.valueChanges.subscribe(({ search }): void =>\r\n      this.changes.emit(search)\r\n    );\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".mr-2 {\r\n    margin-right: 0.5rem;\r\n}\r\n\r\n.form-search {\r\n    margin: 5px;\r\n}\r\n\r\n.example-full-width {\r\n    width: 100%;\r\n}",
                    "styleUrl": "./search-input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<form [formGroup]=\"formGroupSearch\" class=\"form-search\">\r\n    <mat-form-field class=\"example-full-width\">\r\n        <mat-label>{{ settings?.textInputDefault }}</mat-label>\r\n        <mat-icon matPrefix class=\"mr-2\">{{ settings?.icon }}</mat-icon>\r\n        <input matInput formControlName=\"search\" type=\"text\" [placeholder]=\"settings?.textInputDefault\">\r\n        <mat-hint *ngIf=\"amount\">\r\n            {{ amount }} resultados para <i>{{ formGroupSearch?.get('search')?.value }}</i>\r\n        </mat-hint>\r\n    </mat-form-field>\r\n</form>"
        },
        {
            "name": "SelectComponent",
            "id": "component-SelectComponent-57b861ff07cd1a94e3ec7201f1ec41c0",
            "file": "projects/app/src/lib/components/select/select.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mln-select",
            "styleUrls": [
                "./select.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./select.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "listItem",
                    "defaultValue": "datatableActionsMock",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "ActionsMenuInterface[]"
                },
                {
                    "name": "settings",
                    "defaultValue": "{\r\n    firstOption: 'Ninguna',\r\n    title: 'Ver opciones',\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "SettingsInterface"
                }
            ],
            "outputsClass": [
                {
                    "name": "actionSelected",
                    "defaultValue": "new EventEmitter<ActionsMenuInterface>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter<ActionsMenuInterface>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onActionChange",
                    "args": [
                        {
                            "name": "seletecValue",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "seletecValue",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { datatableActionsMock } from '../../shared/model/data-table/actions.model';\r\nimport { SettingsInterface } from '../../shared/interfaces/select/select.interface';\r\nimport { ActionsMenuInterface } from '../../shared/interfaces/data-table/actions.interface';\r\n\r\n@Component({\r\n  selector: 'mln-select',\r\n  templateUrl: './select.component.html',\r\n  styleUrls: ['./select.component.scss'],\r\n})\r\nexport class SelectComponent implements OnInit {\r\n  @Input() settings: SettingsInterface = {\r\n    firstOption: 'Ninguna',\r\n    title: 'Ver opciones',\r\n  };\r\n  @Input() listItem: ActionsMenuInterface[] = datatableActionsMock;\r\n  @Output() actionSelected: EventEmitter<ActionsMenuInterface> = new EventEmitter<ActionsMenuInterface>();\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  public onActionChange(seletecValue: number): void {\r\n    this.actionSelected.emit(this.listItem[seletecValue]);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./select.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 17
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-form-field class=\"custome-select\" appearance=\"outline\">\r\n    <mat-label *ngIf=\"settings?.title\">{{ settings?.title }}</mat-label>\r\n    <mat-select (selectionChange)=\"onActionChange($event.value)\" #options>\r\n        <mat-option *ngIf=\"settings?.firstOption\">{{ settings?.firstOption }}</mat-option>\r\n        <mat-select-trigger>\r\n            {{listItem[options.value]?.name}}\r\n        </mat-select-trigger>\r\n        <mat-option *ngFor=\"let action of listItem; let i = index\" [value]=\"i\" [disabled]=\"action.disabled\" [attr.data-index]=\"i\">\r\n            <mat-icon *ngIf=\"action.icon\">{{action?.icon}}</mat-icon> {{ action.name }}\r\n        </mat-option>\r\n    </mat-select>\r\n</mat-form-field>"
        },
        {
            "name": "SliderToggleComponent",
            "id": "component-SliderToggleComponent-3411050201e3242477943b3c60399fee",
            "file": "projects/app/src/lib/components/slider-toggle/slider-toggle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mln-slider-toggle",
            "styleUrls": [
                "./slider-toggle.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./slider-toggle.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "statusText",
                    "defaultValue": "{ first: '', second: '' }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "literal type"
                }
            ],
            "outputsClass": [
                {
                    "name": "changeToggleAction",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "EventEmitter<boolean>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "changeToggle",
                    "args": [
                        {
                            "name": "status",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "status",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mln-slider-toggle',\r\n  templateUrl: './slider-toggle.component.html',\r\n  styleUrls: ['./slider-toggle.component.scss'],\r\n})\r\nexport class SliderToggleComponent implements OnInit {\r\n  @Output() changeToggleAction: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  @Input() statusText: { first: string; second: string; } = { first: '', second: '' };\r\n  @Input() label: string;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  public changeToggle(status: boolean): void {\r\n    this.changeToggleAction.emit(status);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../assets/theme/variables.scss\";\r\n.sliderToggle {\r\n    display: flex;\r\n    align-items: center;\r\n    .mat-slide-toggle {\r\n        margin: 0 8px;\r\n    }\r\n}",
                    "styleUrl": "./slider-toggle.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"sliderToggle\">\r\n    <mat-label [style.fontWeight]=\"!toggle.checked ? '700' : '' \" *ngIf=\"statusText\">{{ statusText?.first }}</mat-label>\r\n    <mat-slide-toggle #toggle class=\"mat-slide-toggle\" (change)=\"changeToggle($event.checked)\">{{ label }}\r\n    </mat-slide-toggle>\r\n    <mat-label [style.fontWeight]=\"toggle.checked ? '700' : '' \" *ngIf=\"statusText\"> {{ statusText?.second }}</mat-label>\r\n</div>"
        },
        {
            "name": "StepComponent",
            "id": "component-StepComponent-108da1ba7fec6415d869d7c336153a6d",
            "file": "projects/app/src/lib/components/new-proposal/step/step.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mln-step",
            "styleUrls": [
                "./step.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./step.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "count",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string"
                },
                {
                    "name": "descriptionLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean"
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string"
                },
                {
                    "name": "selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean"
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "contentTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "index",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loaded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selected$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "templates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<TemplateRef<any>>",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "'content'"
                        }
                    ]
                },
                {
                    "name": "viewContainer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ViewContainerRef",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  AfterContentInit,\r\n  Component,\r\n  ContentChildren,\r\n  Input,\r\n  QueryList,\r\n  TemplateRef,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mln-step',\r\n  templateUrl: './step.component.html',\r\n  styleUrls: ['./step.component.scss'],\r\n})\r\nexport class StepComponent implements AfterContentInit {\r\n  @Input() title: string;\r\n  @Input() icon: string;\r\n  @Input() descriptionLabel: string;\r\n  @Input() count: string;\r\n  @Input() disabled: boolean;\r\n  @Input() get selected(): boolean {\r\n    return this.selected$;\r\n  }\r\n  set selected(selected: boolean) {\r\n    this.selected$ = selected;\r\n    if (this.selected$) {\r\n      this.loaded = true;\r\n    }\r\n  }\r\n\r\n  @ContentChildren('content') templates: QueryList<TemplateRef<any>>;\r\n\r\n  public index: number;\r\n  public loaded: boolean;\r\n  public contentTemplate: TemplateRef<any>;\r\n  private selected$: boolean;\r\n\r\n  constructor(public viewContainer: ViewContainerRef) {\r\n    this.index = 0;\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.templates.forEach((template, i) => {\r\n      this.contentTemplate = template;\r\n      this.index = i;\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".mln-tabs-panel {\r\n    display: none;\r\n    &--selected {\r\n        display: block;\r\n    }\r\n}",
                    "styleUrl": "./step.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "viewContainer",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 37,
                "jsdoctags": [
                    {
                        "name": "viewContainer",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterContentInit"
            ],
            "accessors": {
                "selected": {
                    "name": "selected",
                    "setSignature": {
                        "name": "selected",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "selected",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 25,
                        "jsdoctags": [
                            {
                                "name": "selected",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "selected",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 22
                    }
                }
            },
            "templateData": "<div [attr.id]=\"index\" class=\"mln-tabs-panel\" role=\"tabpanel\" [class.mln-tabs-panel--selected]=\"selected\" [attr.aria-hidden]=\"!selected\" [attr.aria-labelledby]=\"'header-' + index\">\r\n    <ng-content></ng-content>\r\n    <ng-container *ngIf=\"contentTemplate && loaded\">\r\n        <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\r\n    </ng-container>\r\n</div>"
        },
        {
            "name": "StepperComponent",
            "id": "component-StepperComponent-d2cf2ecd937a1668814689d0bbf6ad46",
            "file": "projects/app/src/lib/components/new-proposal/stepper.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mln-stepper",
            "styleUrls": [
                "./stepper.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./stepper.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "linkAmount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "literal type"
                },
                {
                    "name": "linkHiring",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "literal type"
                },
                {
                    "name": "tabName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "closeAction",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "EventEmitter<boolean>"
                },
                {
                    "name": "saveAction",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "EventEmitter<boolean>"
                },
                {
                    "name": "selectAction",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "panels",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<StepComponent>",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "StepComponent"
                        }
                    ]
                },
                {
                    "name": "panelsArray",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StepComponent[]",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "selectedIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "back",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeAmount",
                    "args": [
                        {
                            "name": "amountAction",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "amountAction",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeHiring",
                    "args": [
                        {
                            "name": "hiringAction",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "hiringAction",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changePanelSelected",
                    "args": [
                        {
                            "name": "panel",
                            "type": "StepComponent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1704,
                                "end": 1709,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "panel"
                            },
                            "type": "StepComponent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1698,
                                "end": 1703,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>StepComponent</p>\n"
                        }
                    ]
                },
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "initTabs",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "next",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "save",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectTab",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "panel",
                            "type": "StepComponent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2126,
                                "end": 2131,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "event"
                            },
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2120,
                                "end": 2125,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Event</p>\n"
                        },
                        {
                            "name": {
                                "pos": 2151,
                                "end": 2156,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "panel"
                            },
                            "type": "StepComponent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2145,
                                "end": 2150,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>StepComponent</p>\n"
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  AfterContentInit,\r\n  Component,\r\n  ContentChildren,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  QueryList,\r\n} from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { StepComponent } from './step/step.component';\r\n\r\n@Component({\r\n  selector: 'mln-stepper',\r\n  templateUrl: './stepper.component.html',\r\n  styleUrls: ['./stepper.component.scss']\r\n})\r\nexport class StepperComponent implements AfterContentInit {\r\n  @Input() tabName: string;\r\n  @Input() linkAmount: {\r\n    disabled: boolean;\r\n    show: boolean;\r\n    callback: Subject<boolean>;\r\n  };\r\n  @Input() linkHiring: {\r\n    disabled: boolean;\r\n    show: boolean;\r\n    callback: Subject<boolean>;\r\n  };\r\n  @Output() selectAction: EventEmitter<any> = new EventEmitter();\r\n  @Output() closeAction: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  @Output() saveAction: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  @ContentChildren(StepComponent) panels: QueryList<StepComponent>;\r\n\r\n  public selectedIndex: number;\r\n  private panelsArray: StepComponent[] = [];\r\n\r\n  constructor() {}\r\n\r\n  ngAfterContentInit(): void {\r\n    this.initTabs();\r\n\r\n    this.panels.changes.subscribe(() => this.initTabs());\r\n  }\r\n\r\n  private initTabs(): void {\r\n    this.panels.forEach((tab: StepComponent, i: number) => tab.index = i);\r\n    this.panelsArray = this.panels.toArray();\r\n    const selectedTab: StepComponent = this.panelsArray.find((panel) => panel.selected);\r\n    if (!selectedTab && this.panelsArray.length) {\r\n      this.panelsArray[0].selected = true;\r\n      this.selectedIndex = this.panelsArray[0].index;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description set the given panel to the selected and emit onchange event\r\n   * @param panel StepComponent\r\n   */\r\n  private changePanelSelected(panel: StepComponent): void {\r\n    this.panelsArray = this.panels.toArray();\r\n    this.panelsArray = this.panelsArray.map((panelArray: StepComponent) => {\r\n      panelArray.selected = panelArray.index === panel.index;\r\n      return panelArray;\r\n    });\r\n  }\r\n  /**\r\n   * @description triggered when the user select another tab and emit onSelect event\r\n   * @param event Event\r\n   * @param panel StepComponent\r\n   */\r\n  public selectTab(event: Event, panel: StepComponent, index: number): void {\r\n    if (event) { event.preventDefault(); }\r\n    this.selectedIndex = index;\r\n    if (event && !panel?.disabled) {\r\n      this.changePanelSelected(panel);\r\n      this.selectAction.emit({ originalEvent: event, panel, tab: this.tabName || 'tab' });\r\n    }\r\n  }\r\n\r\n  public next(event: Event): void {\r\n    if ((this.selectedIndex + 1) < this.panels.length) {\r\n      this.selectedIndex ++;\r\n      const panel = this.panels.find(d => d.index === this.selectedIndex);\r\n      this.selectTab(event, panel, this.selectedIndex);\r\n    }\r\n  }\r\n\r\n  public back(event: Event): void {\r\n    if (this.selectedIndex) {\r\n      this.selectedIndex --;\r\n      const panel = this.panels.find(d => d.index === this.selectedIndex);\r\n      this.selectTab(event, panel, this.selectedIndex);\r\n    }\r\n  }\r\n\r\n  public close(): void {\r\n    this.closeAction.emit(true);\r\n  }\r\n\r\n  public save(): void {\r\n    this.saveAction.emit(true);\r\n  }\r\n\r\n  public changeHiring(hiringAction?: {\r\n    disabled: boolean;\r\n    show: boolean;\r\n    callback: Subject<boolean>;\r\n  }): void {\r\n    if (!hiringAction.disabled && hiringAction.show) {\r\n      hiringAction.callback.next(true);\r\n    }\r\n  }\r\n\r\n  public changeAmount(amountAction?: {\r\n    disabled: boolean;\r\n    show: boolean;\r\n    callback: Subject<boolean>;\r\n  }): void {\r\n    if (!amountAction.disabled && amountAction.show) {\r\n      amountAction.callback.next(true);\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../assets/theme/variables.scss\";\r\n.header-proposal {\r\n    width: 100%;\r\n    -webkit-box-shadow: 0px 10px 18px -5px rgba(204, 204, 204, 1);\r\n    -moz-box-shadow: 0px 10px 18px -5px rgba(204, 204, 204, 1);\r\n    box-shadow: 0px 10px 18px -5px rgba(204, 204, 204, 1);\r\n    position: relative;\r\n    background: map-get($colors, white);\r\n    z-index: 99;\r\n    .np-title {\r\n        font-size: 30px;\r\n        color: map-get($colors, darkBlue);\r\n        text-align: center;\r\n        font-family: \"GillSans500\";\r\n        height: 60px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        @media only screen and (max-width: 1040px) {\r\n            height: 80px;\r\n            align-items: flex-end;\r\n            margin-bottom: 10px;\r\n        }\r\n    }\r\n    .np-links {\r\n        position: absolute;\r\n        right: 10px;\r\n        top: 22px;\r\n        display: flex;\r\n        align-items: center;\r\n        .np-link {\r\n            padding-right: 6px;\r\n            font-family: \"GillSansCondensedBold\";\r\n            color: map-get($colors, blueIcon);\r\n            display: flex;\r\n            align-items: center;\r\n            font-size: 16px;\r\n            cursor: pointer;\r\n            &.disabled {\r\n                cursor: initial;\r\n                opacity: 0.3;\r\n            }\r\n            .icon {\r\n                background-position: center;\r\n                background-repeat: no-repeat;\r\n                background-size: contain;\r\n                margin-right: 5px;\r\n                padding: 10px;\r\n                color: map-get($colors, blueIcon);\r\n                &.costes {\r\n                    background-image: url(\"/assets/img/costes.png\");\r\n                }\r\n                &.contratacion {\r\n                    background-image: url(\"/assets/img/contratacion.png\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n    .np-bar-wrapper {\r\n        width: 90%;\r\n        margin: 0 auto;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        box-sizing: border-box;\r\n        flex-wrap: wrap;\r\n        .np-bar {\r\n            flex: 1 1 0;\r\n            padding: 5px;\r\n            height: 50px;\r\n            @media only screen and (max-width: 980px) {\r\n                flex: initial;\r\n                width: 30%;\r\n            }\r\n            @media only screen and (max-width: 540px) {\r\n                flex: initial;\r\n                width: 45%;\r\n            }\r\n            cursor: pointer;\r\n            .np-block {\r\n                height: 12px;\r\n            }\r\n            .np-text {\r\n                text-align: center;\r\n                margin: 0 auto;\r\n                display: flex;\r\n                justify-content: center;\r\n                padding-left: 2px;\r\n                align-items: center;\r\n                font-family: 'RobotoBold';\r\n                color: gray;\r\n                .icon {\r\n                    width: 15px;\r\n                    height: 15px;\r\n                    margin-right: 5px;\r\n                    background-repeat: no-repeat;\r\n                    background-size: cover;\r\n                    &.tick-ok {\r\n                        background-image: url(\"/assets/img/tick-ok.png\");\r\n                    }\r\n                    &.tick-ko {\r\n                        background-image: url(\"/assets/img/tick-ko.png\");\r\n                    }\r\n                    &.tick-warning {\r\n                        background-image: url(\"/assets/img/tick-warning.png\");\r\n                    }\r\n                    &.none {\r\n                        display: none;\r\n                    }\r\n                }\r\n            }\r\n            &.done {\r\n                .np-block {\r\n                    background-color: map-get($colors, blueIcon);\r\n                }\r\n                .np-text {\r\n                    color: map-get($colors, gray);\r\n                }\r\n            }\r\n            &.active {\r\n                .np-block {\r\n                    background-color: map-get($colors, blueIcon);\r\n                }\r\n                .np-text {\r\n                    color: map-get($colors, blueLink);\r\n                }\r\n            }\r\n            &.pending {\r\n                .np-block {\r\n                    background-color: #bedef0;\r\n                }\r\n                .np-text {\r\n                    color: map-get($colors, disabled);\r\n                }\r\n            }\r\n            &:first-child {\r\n                .np-block {\r\n                    border-top-left-radius: 5px;\r\n                    border-bottom-left-radius: 5px;\r\n                }\r\n            }\r\n            &:last-child {\r\n                .np-block {\r\n                    border-top-right-radius: 5px;\r\n                    border-bottom-right-radius: 5px;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n.footer-proposal {\r\n    position: fixed;\r\n    bottom: 0;\r\n    left: 0;\r\n    z-index: 99;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    height: 50px;\r\n    padding: 0 20px;\r\n    box-sizing: border-box;\r\n    border-top: 1px solid gray;\r\n    background: map-get($colors, white);\r\n    .footer-action {\r\n        color: black;\r\n        font-family: \"GillSans500\";\r\n        padding: 0 30px;\r\n        cursor: pointer;\r\n        border: none;\r\n        background: none;\r\n        &:focus {\r\n            outline: none;\r\n            box-shadow: none;\r\n        }\r\n    }\r\n    .back {\r\n        font: inherit;\r\n        font-family: \"GillSans500\";\r\n    }\r\n    .footer-link {\r\n        color: #2f9ad3;\r\n        font-family: 'GillSans500';\r\n        text-decoration: underline;\r\n        cursor: pointer;\r\n    }\r\n    .mln-button {\r\n        padding: 0 30px;\r\n        font-weight: bold;\r\n        border-radius: 20px;\r\n        margin: 0 auto;\r\n        border-width: 2px;\r\n        height: 40px;\r\n        font-family: 'Roboto';\r\n        &.primary {\r\n            color: map-get($colors, buttonBlue);\r\n            border-color: map-get($colors, buttonBlue);\r\n            background-color: map-get($colors, white);\r\n        }\r\n        &.disabled {\r\n            color: map-get($colors, disabled);\r\n            border-color: map-get($colors, disabled);\r\n            background-color: map-get($colors, white);\r\n        }\r\n    }\r\n}\r\n\r\n.container {\r\n    width: 80%;\r\n    margin: 0 auto;\r\n    padding: 2rem;\r\n}",
                    "styleUrl": "./stepper.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 38
            },
            "implements": [
                "AfterContentInit"
            ],
            "templateData": "<section>\r\n    <header class=\"header-proposal\">\r\n        <div class=\"np-title\">\r\n            Nueva Propuesta\r\n        </div>\r\n        <div class=\"np-links\">\r\n            <div class=\"np-link\" [class.disabled]=\"linkHiring.disabled\" *ngIf=\"linkHiring.show\" (click)=\"changeHiring(linkHiring)\">\r\n                <i class=\"icon contratacion\"></i>\r\n                <span>Contratación</span>\r\n            </div>\r\n            <div class=\"np-link\" [class.disabled]=\"linkAmount.disabled\" *ngIf=\"linkAmount.show\" (click)=\"changeAmount(linkAmount)\">\r\n                <i class=\"icon costes\"></i>\r\n                <span>Costes</span>\r\n            </div>\r\n        </div>\r\n\r\n        <div>\r\n            <ul class=\"np-bar-wrapper\">\r\n                <li class=\"np-bar\" [attr.title]=\"panel.descriptionLabel\" [attr.id]=\"'header-' + panel.index\" [attr.aria-selected]=\"panel.selected\" [attr.aria-controls]=\"panel.index\" [ngClass]=\"(selectedIndex >= i && !panel.disabled) ? 'done' : 'pending'\" *ngFor=\"let panel of panels; let i = index\"\r\n                    role=\"presentation\" (click)=\"selectTab($event, panel, i)\">\r\n                    <div class=\"np-block\"></div>\r\n                    <div class=\"np-text\" role=\"tab\">\r\n                        <i class=\"icon\" [class.tick-ok]=\"selectedIndex > i\"></i>\r\n                        <span>{{panel.title}}</span>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </header>\r\n\r\n    <footer class=\"footer-proposal\">\r\n        <div>\r\n            <span class=\"footer-action\" (click)=\"close()\">\r\n                X CERRAR\r\n            </span>\r\n        </div>\r\n        <div>\r\n            <span class=\"footer-link\" (click)=\"save()\">Guardar Borrador</span>\r\n        </div>\r\n        <div>\r\n            <button class=\"footer-action back\" (click)=\"back($event)\">\r\n                &#60; VOLVER\r\n            </button>\r\n            <button mat-stroked-button class=\"mln-button primary\" (click)=\"next($event)\">\r\n                Continuar\r\n            </button>\r\n        </div>\r\n    </footer>\r\n</section>\r\n\r\n<div class=\"container\">\r\n    <ng-content></ng-content>\r\n</div>"
        },
        {
            "name": "StorybookComponent",
            "id": "component-StorybookComponent-6852b90f44f8a85d9fd4d6814876eeb5",
            "file": "projects/app/src/lib/components/profile-table/storybook/storybook.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-storybook",
            "styleUrls": [
                "./storybook.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./storybook.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  // tslint:disable-next-line: component-selector\r\n  selector: 'app-storybook',\r\n  templateUrl: './storybook.component.html',\r\n  styleUrls: ['./storybook.component.scss']\r\n})\r\nexport class StorybookComponent implements OnInit {\r\n  @Input() public title: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../../assets/theme/variables.scss\";\r\n@import \"../../../../../assets/theme/tools/tools__pixel-to-rem\";\r\n.separator {\r\n    border-bottom: rem(2) solid #8080803b;\r\n    margin: rem(6) 0;\r\n    padding: rem(5) 0;\r\n}\r\n\r\n.row-table {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    flex-wrap: wrap;\r\n    .row-table-text {\r\n        font-family: \"RobotoBold\";\r\n        color: map-get($colors, darkBlue);\r\n        font-size: rem(16);\r\n    }\r\n    .table-wrapper {\r\n        overflow-x: auto;\r\n    }\r\n    table {\r\n        background-color: map-get($colors, white);\r\n        border-collapse: collapse;\r\n        min-width: rem(300);\r\n        margin: rem(20) 0;\r\n        th {\r\n            font-family: \"RobotoBold\";\r\n            color: map-get($colors, gray);\r\n            font-weight: bold;\r\n            font-style: normal;\r\n        }\r\n        th, td {\r\n            text-align: center;\r\n            height: rem(30);\r\n            align-items: center;\r\n            vertical-align: middle;\r\n            font-family: \"Roboto\";\r\n        }\r\n    }\r\n    table, th, td {\r\n        border: rem(1) solid #b9c7cd;\r\n        mat-icon {\r\n            color: #2e98d0;\r\n        }\r\n    }\r\n}\r\n\r\n.row-info {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: rem(24) 0;\r\n    .col-info {\r\n        display: flex;\r\n        align-content: space-between;\r\n        flex-direction: column;\r\n        justify-content: space-between;\r\n        >div:nth-child(2) {\r\n            font-family: \"RobotoBold\";\r\n            color: map-get($colors, darkBlue);\r\n            font-size: rem(16);\r\n            margin: rem(16) 0;\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./storybook.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mln-profile-table [title]=\"title\">\r\n    <div class=\"row-table\">\r\n        <div class=\"row-table-text\">\r\n            Equilibrado\r\n        </div>\r\n        <div class=\"table-wrapper\">\r\n            <table>\r\n                <th colspan=\"5\">\r\n                    Familias (1)\r\n                </th>\r\n                <tr>\r\n                    <td>1</td>\r\n                    <td>2</td>\r\n                    <td>3</td>\r\n                    <td>4</td>\r\n                    <td>5</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <mat-icon>check</mat-icon>\r\n                    </td>\r\n                    <td>\r\n                        <mat-icon>check</mat-icon>\r\n                    </td>\r\n                    <td>\r\n                        <mat-icon>check</mat-icon>\r\n                    </td>\r\n                    <td>\r\n                        <mat-icon>check</mat-icon>\r\n                    </td>\r\n                    <td>\r\n                        <mat-icon>check</mat-icon>\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n    </div>\r\n    <div class=\"separator\"></div>\r\n    <div class=\"row-info\">\r\n        <div class=\"col-info\">\r\n            <div>Horizonte temporal</div>\r\n            <div>Todos</div>\r\n        </div>\r\n        <div class=\"col-info\">\r\n            <div>Horizonte temporal</div>\r\n            <div>Todos</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"separator\"></div>\r\n    <div class=\"row-info\">\r\n        <div class=\"col-info\">\r\n            <div>Horizonte temporal</div>\r\n            <div>Todos</div>\r\n        </div>\r\n        <div class=\"col-info\">\r\n            <div>Horizonte temporal</div>\r\n            <div>Todos</div>\r\n        </div>\r\n    </div>\r\n</mln-profile-table>"
        },
        {
            "name": "SubHeaderComponent",
            "id": "component-SubHeaderComponent-03001f3afdb50dd3d18848d394d33222",
            "file": "projects/app/src/lib/components/sub-header/sub-header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mln-sub-header",
            "styleUrls": [
                "./sub-header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sub-header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "settingsSubHeader",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "any"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "d",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mln-sub-header',\r\n  templateUrl: './sub-header.component.html',\r\n  styleUrls: ['./sub-header.component.scss']\r\n})\r\nexport class SubHeaderComponent implements OnInit {\r\n  public d = new Date();\r\n  @Input() settingsSubHeader: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../assets/theme/variables.scss';\r\n.header {\r\n    border-bottom: 1px solid;\r\n    color: map-get($colors, disabled);\r\n    font-family: \"GillSansBold\";\r\n    font-size: 24px;\r\n    &-title {\r\n        padding: 0 0 1rem 1rem;\r\n        display: block;\r\n        &--left {\r\n            color: #202967;\r\n            width: 50%;\r\n            display: inline-block;\r\n        }\r\n        &--right {\r\n            width: 50%;\r\n            display: inline-block;\r\n            font-size: 14px;\r\n            vertical-align: middle;\r\n            span {\r\n                float: right\r\n            }\r\n        }\r\n        &--sufix {\r\n            font-size: 14px;\r\n            color: map-get($colors, gray);\r\n        }\r\n    }\r\n    &-right {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n    }\r\n    @media only screen and (max-width: 720px) {\r\n        flex-wrap: wrap;\r\n        justify-content: center;\r\n        &-title {\r\n            margin: 10px 0;\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./sub-header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"header\" *ngIf=\"settingsSubHeader\">\r\n    <!-- button -->\r\n    <div class=\"header-right\" *ngIf=\"settingsSubHeader.buttonSettings\">\r\n        <mln-button [text]=\"settingsSubHeader.buttonSettings?.text\" [classButton]=\"settingsSubHeader.buttonSettings?.class\" [isSquare]=\"settingsSubHeader.buttonSettings?.isSquare\" [isDisabled]=\"settingsSubHeader.buttonSettings?.isDisabled\" [callback]=\"settingsSubHeader.buttonSettings?.callback\"\r\n            [type]=\"settingsSubHeader.buttonSettings?.type\"></mln-button>\r\n    </div>\r\n    <!-- title -->\r\n    <div class=\"header-title\">\r\n        <div class=\"header-title--left\">\r\n            {{ settingsSubHeader.title }}\r\n            <span class=\"header-title--sufix\" *ngIf=\"settingsSubHeader.sufix\"> {{ settingsSubHeader.sufix.amount }} {{ settingsSubHeader.sufix.text }}</span>\r\n        </div>\r\n        <div class=\"header-title--right\">\r\n            <span class=\"\">{{ settingsSubHeader.rightTitle }}</span>\r\n        </div>\r\n    </div>\r\n</div>"
        }
    ],
    "modules": [
        {
            "name": "AccordionModule",
            "id": "module-AccordionModule-ea7e25973ab780485d34adddf2fa3813",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/app/src/lib/components/accordion/accordion.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AccordionComponent } from './accordion.component';\r\nimport { AccordionPanelComponent } from './accordion-panel/accordion-panel.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@NgModule({\r\n  declarations: [AccordionComponent, AccordionPanelComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n  ],\r\n  exports: [\r\n    AccordionComponent,\r\n    AccordionPanelComponent,\r\n    MatIconModule,\r\n  ]\r\n})\r\nexport class AccordionModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AccordionComponent"
                        },
                        {
                            "name": "AccordionPanelComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AccordionComponent"
                        },
                        {
                            "name": "AccordionPanelComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AccordionStorybookModule",
            "id": "module-AccordionStorybookModule-2bc939759cc21c980cf0bf622605ab5f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/app/src/lib/components/accordion/accordion-storybook/accordion-storybook.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AccordionStorybookComponent } from './accordion-storybook.component';\r\nimport { AccordionModule } from '../accordion.module';\r\n\r\n@NgModule({\r\n  declarations: [AccordionStorybookComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AccordionModule,\r\n  ],\r\n  exports: [\r\n    AccordionStorybookComponent,\r\n    AccordionModule,\r\n  ],\r\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ]\r\n})\r\nexport class AccordionStorybookModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AccordionStorybookComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AccordionModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AccordionModule"
                        },
                        {
                            "name": "AccordionStorybookComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AlertModule",
            "id": "module-AlertModule-c48ff3fd022282601c4ba312f0d336fb",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/app/src/lib/components/alert/alert.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AlertComponent } from './alert.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@NgModule({\r\n  declarations: [AlertComponent],\r\n  imports: [CommonModule, FormsModule, MatIconModule],\r\n  exports: [AlertComponent, FormsModule, MatIconModule],\r\n})\r\nexport class AlertModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AlertComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AlertComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AnalyticsModule",
            "id": "module-AnalyticsModule-c082a9a8745616c40ae8da036a27dda5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/app/src/lib/pages/analytics/analytics.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AnalyticsComponent } from './analytics.component';\r\nimport { ButtonModule } from '../../components/button';\r\nimport { ProgressBarModule } from '../../components/progress-bar/progress-bar.module';\r\nimport { SliderToggleModule } from '../../components/slider-toggle/slider-toggle.module';\r\nimport { BoxItemsModule } from '../../components/box-items/box-items.module';\r\nimport { HeaderModule } from '../../components/header';\r\n@NgModule({\r\n  declarations: [AnalyticsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ButtonModule,\r\n    ProgressBarModule,\r\n    SliderToggleModule,\r\n    BoxItemsModule,\r\n    HeaderModule,\r\n  ],\r\n  exports: [\r\n    ButtonModule,\r\n    ProgressBarModule,\r\n    SliderToggleModule,\r\n    BoxItemsModule,\r\n  ],\r\n})\r\nexport class AnalyticsModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AnalyticsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "BoxItemsModule"
                        },
                        {
                            "name": "ButtonModule"
                        },
                        {
                            "name": "HeaderModule"
                        },
                        {
                            "name": "ProgressBarModule"
                        },
                        {
                            "name": "SliderToggleModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "BoxItemsModule"
                        },
                        {
                            "name": "ButtonModule"
                        },
                        {
                            "name": "ProgressBarModule"
                        },
                        {
                            "name": "SliderToggleModule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-7a4a7c03f429df6828d5eee1470fc2b7",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/app/src/lib/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AlertModule } from './components/alert';\r\nimport { BoxItemsModule } from './components/box-items';\r\nimport { ButtonModule } from './components/button';\r\nimport { BigButtonModule } from './components/button-big';\r\nimport { DoubleButtonModule } from './components/button-double';\r\nimport { CheckBoxModule } from './components/check-box';\r\nimport { CustomerInfoModule } from './components/customer-info';\r\nimport { DataTableModule } from './components/datatable';\r\nimport { HeaderModule } from './components/header';\r\nimport { NewProposalModule } from './components/new-proposal/storybook';\r\nimport { ProfileTableModule } from './components/profile-table';\r\nimport { ProgressBarModule } from './components/progress-bar';\r\nimport { ProposalMessageModule } from './components/proposal-message';\r\nimport { RadioButtonListModule } from './components/radio-button-list';\r\nimport { SearchInputModule } from './components/search-input';\r\nimport { SelectModule } from './components/select';\r\nimport { SliderToggleModule } from './components/slider-toggle';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { SubHeaderModule } from './components/sub-header/sub-header.module';\r\nimport { ChartCircleModule } from './components/chart-circle';\r\nimport { AccordionModule } from './components/accordion';\r\nimport { ChartBarModule } from './components/chart-bar/chart-bar.module';\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [BrowserModule],\r\n  exports: [\r\n    SharedModule,\r\n    CommonModule,\r\n    AlertModule,\r\n    BoxItemsModule,\r\n    ButtonModule,\r\n    BigButtonModule,\r\n    DoubleButtonModule,\r\n    CheckBoxModule,\r\n    CustomerInfoModule,\r\n    DataTableModule,\r\n    HeaderModule,\r\n    NewProposalModule,\r\n    ProfileTableModule,\r\n    ProgressBarModule,\r\n    ProposalMessageModule,\r\n    RadioButtonListModule,\r\n    SearchInputModule,\r\n    SelectModule,\r\n    SliderToggleModule,\r\n    SubHeaderModule,\r\n    ChartCircleModule,\r\n    AccordionModule,\r\n    ChartBarModule,\r\n  ],\r\n})\r\nexport class AppModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AccordionModule"
                        },
                        {
                            "name": "AlertModule"
                        },
                        {
                            "name": "BigButtonModule"
                        },
                        {
                            "name": "BoxItemsModule"
                        },
                        {
                            "name": "ButtonModule"
                        },
                        {
                            "name": "ChartBarModule"
                        },
                        {
                            "name": "ChartCircleModule"
                        },
                        {
                            "name": "CheckBoxModule"
                        },
                        {
                            "name": "CustomerInfoModule"
                        },
                        {
                            "name": "DataTableModule"
                        },
                        {
                            "name": "DoubleButtonModule"
                        },
                        {
                            "name": "HeaderModule"
                        },
                        {
                            "name": "NewProposalModule"
                        },
                        {
                            "name": "ProfileTableModule"
                        },
                        {
                            "name": "ProgressBarModule"
                        },
                        {
                            "name": "ProposalMessageModule"
                        },
                        {
                            "name": "RadioButtonListModule"
                        },
                        {
                            "name": "SearchInputModule"
                        },
                        {
                            "name": "SelectModule"
                        },
                        {
                            "name": "SharedModule"
                        },
                        {
                            "name": "SliderToggleModule"
                        },
                        {
                            "name": "SubHeaderModule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "BigButtonModule",
            "id": "module-BigButtonModule-efacd4a2ae3ccd74fb0f1158a6417672",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/app/src/lib/components/button-big/button-big.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ButtonBigComponent } from './button-big.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@NgModule({\r\n  declarations: [ButtonBigComponent],\r\n  imports: [CommonModule, MatIconModule],\r\n  exports: [ButtonBigComponent, MatIconModule],\r\n})\r\nexport class BigButtonModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonBigComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonBigComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "BoxItemsModule",
            "id": "module-BoxItemsModule-748d00758f3caf284496a4567dcbc5c8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/app/src/lib/components/box-items/box-items.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BoxItemsComponent } from './box-items.component';\r\n\r\n@NgModule({\r\n  declarations: [BoxItemsComponent],\r\n  imports: [CommonModule],\r\n  exports: [BoxItemsComponent],\r\n})\r\nexport class BoxItemsModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BoxItemsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "BoxItemsComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ButtonModule",
            "id": "module-ButtonModule-73f441ce5103805d6b389d3e807e8caf",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/app/src/lib/components/button/button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ButtonComponent } from './button.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@NgModule({\r\n  declarations: [ButtonComponent],\r\n  imports: [CommonModule, MatButtonModule, MatIconModule],\r\n  exports: [ButtonComponent, MatButtonModule, MatIconModule],\r\n})\r\nexport class ButtonModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ChartBarModule",
            "id": "module-ChartBarModule-314cee6d4ff792eb02a656c8c0491c0e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/app/src/lib/components/chart-bar/chart-bar.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgApexchartsModule } from 'ng-apexcharts';\r\nimport { ChartBarComponent } from './chart-bar.component';\r\n\r\n@NgModule({\r\n  declarations: [ChartBarComponent],\r\n  imports: [CommonModule, NgApexchartsModule],\r\n  exports: [ChartBarComponent],\r\n})\r\nexport class ChartBarModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ChartBarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ChartBarComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ChartCircleModule",
            "id": "module-ChartCircleModule-72e1206095c96820cf0d09249cf90492",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/app/src/lib/components/chart-circle/chart-circle.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ChartCircleComponent } from './chart-circle.component';\r\nimport { NgApexchartsModule } from 'ng-apexcharts';\r\nimport { ButtonModule } from '../button';\r\nimport { CheckBoxModule } from '../check-box';\r\n@NgModule({\r\n  declarations: [ChartCircleComponent],\r\n  imports: [CommonModule, ButtonModule, NgApexchartsModule, CheckBoxModule],\r\n  exports: [\r\n    ChartCircleComponent,\r\n    ButtonModule,\r\n    NgApexchartsModule,\r\n    CheckBoxModule,\r\n  ],\r\n})\r\nexport class ChartCircleModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ChartCircleComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ButtonModule"
                        },
                        {
                            "name": "CheckBoxModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonModule"
                        },
                        {
                            "name": "ChartCircleComponent"
                        },
                        {
                            "name": "CheckBoxModule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CheckBoxModule",
            "id": "module-CheckBoxModule-1d0bc51dfa403c5100bc01e0bd060f2f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/app/src/lib/components/check-box/check-box.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CheckBoxComponent } from './check-box.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@NgModule({\r\n  declarations: [CheckBoxComponent],\r\n  imports: [CommonModule, MatIconModule],\r\n  exports: [CheckBoxComponent, MatIconModule],\r\n})\r\nexport class CheckBoxModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CheckBoxComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CheckBoxComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CustomerInfoModule",
            "id": "module-CustomerInfoModule-cb09458518737610ea1b161c0629a887",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/app/src/lib/components/customer-info/customer-info.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule, LOCALE_ID } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CustomerInfoComponent } from './customer-info.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SelectModule } from '../select';\r\n\r\n@NgModule({\r\n  declarations: [CustomerInfoComponent],\r\n  imports: [CommonModule, FormsModule, MatIconModule, SelectModule],\r\n  exports: [CustomerInfoComponent, FormsModule, MatIconModule, SelectModule],\r\n  providers: [\r\n    {\r\n      provide: LOCALE_ID,\r\n      useValue: 'es-ES',\r\n    },\r\n  ],\r\n})\r\nexport class CustomerInfoModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CustomerInfoComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SelectModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CustomerInfoComponent"
                        },
                        {
                            "name": "SelectModule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DataTableModule",
            "id": "module-DataTableModule-6288fb938cdf05c5637827681fe03187",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/app/src/lib/components/datatable/datatable.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule, CUSTOM_ELEMENTS_SCHEMA, Injectable } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DatatableComponent } from './datatable.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { SelectModule } from '../select';\r\nimport {\r\n  MatPaginatorModule,\r\n  MatPaginatorIntl,\r\n} from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { ButtonModule } from '../button';\r\nimport { SliderToggleModule } from '../slider-toggle';\r\n@Injectable()\r\nexport class CustomPaginator extends MatPaginatorIntl {\r\n  constructor() {\r\n    super();\r\n    this.nextPageLabel = ' Siguiente';\r\n    this.previousPageLabel = ' Atrás';\r\n    this.itemsPerPageLabel = 'Cantidad por página';\r\n  }\r\n}\r\n@NgModule({\r\n  declarations: [DatatableComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    SelectModule,\r\n    ButtonModule,\r\n    SliderToggleModule,\r\n    MatIconModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n    MatTableModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatInputModule,\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  exports: [\r\n    SelectModule,\r\n    ButtonModule,\r\n    SliderToggleModule,\r\n    MatIconModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n    MatTableModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatInputModule,\r\n    DatatableComponent,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: MatPaginatorIntl,\r\n      useClass: CustomPaginator,\r\n    },\r\n  ],\r\n})\r\nexport class DataTableModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DatatableComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ButtonModule"
                        },
                        {
                            "name": "SelectModule"
                        },
                        {
                            "name": "SharedModule"
                        },
                        {
                            "name": "SliderToggleModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonModule"
                        },
                        {
                            "name": "DatatableComponent"
                        },
                        {
                            "name": "SelectModule"
                        },
                        {
                            "name": "SliderToggleModule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DoubleButtonModule",
            "id": "module-DoubleButtonModule-ffe92847fb59cc83fbbb03e7f366c526",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/app/src/lib/components/button-double/button-double.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ButtonDoubleComponent } from './button-double.component';\r\n\r\n@NgModule({\r\n  declarations: [ButtonDoubleComponent],\r\n  imports: [CommonModule],\r\n  exports: [ButtonDoubleComponent],\r\n})\r\nexport class DoubleButtonModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonDoubleComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonDoubleComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HeaderModule",
            "id": "module-HeaderModule-86b14307a31a325179197b35393ad2ef",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/app/src/lib/components/header/header.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HeaderComponent } from './header.component';\r\n\r\n@NgModule({\r\n  declarations: [HeaderComponent],\r\n  imports: [CommonModule],\r\n  exports: [HeaderComponent],\r\n})\r\nexport class HeaderModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "HeaderComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "HeaderComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HeritageModule",
            "id": "module-HeritageModule-ac66bdf2aece80651767f27fad0afe02",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/app/src/lib/pages/heritage/heritage.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HeritageComponent } from './heritage.component';\r\nimport { SliderToggleModule } from '../../components/slider-toggle';\r\nimport { ChartCircleModule } from '../../components/chart-circle';\r\n\r\n@NgModule({\r\n  declarations: [HeritageComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SliderToggleModule,\r\n    ChartCircleModule,\r\n  ],\r\n  exports: [HeritageComponent, SliderToggleModule, ChartCircleModule],\r\n  schemas: [],\r\n})\r\nexport class HeritageModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "HeritageComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ChartCircleModule"
                        },
                        {
                            "name": "SliderToggleModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ChartCircleModule"
                        },
                        {
                            "name": "HeritageComponent"
                        },
                        {
                            "name": "SliderToggleModule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HomeModule",
            "id": "module-HomeModule-8d508495354d9c45b2da3b58085a5dfd",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/app/src/lib/pages/page-home/home.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { HomeComponent } from './home.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SearchInputModule } from '../../components/search-input';\r\nimport { CustomerInfoModule } from '../../components/customer-info';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n@NgModule({\r\n  declarations: [HomeComponent],\r\n  imports: [\r\n    CommonModule,\r\n    BrowserAnimationsModule,\r\n    SearchInputModule,\r\n    CustomerInfoModule,\r\n  ],\r\n  exports: [\r\n    BrowserAnimationsModule,\r\n    HomeComponent,\r\n    SearchInputModule,\r\n    CustomerInfoModule,\r\n  ],\r\n})\r\nexport class HomeModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "HomeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CustomerInfoModule"
                        },
                        {
                            "name": "SearchInputModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CustomerInfoModule"
                        },
                        {
                            "name": "HomeComponent"
                        },
                        {
                            "name": "SearchInputModule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "NewProposalModule",
            "id": "module-NewProposalModule-499c37e7776ca9b9f2da6a31f53d9eaa",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/app/src/lib/components/new-proposal/storybook/new-proposal.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NewProposalComponent } from './new-proposal.component';\r\nimport { StepperModule } from '../stepper.module';\r\n\r\n@NgModule({\r\n  declarations: [NewProposalComponent],\r\n  imports: [CommonModule, StepperModule],\r\n  exports: [NewProposalComponent, StepperModule],\r\n})\r\nexport class NewProposalModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "NewProposalComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "StepperModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "NewProposalComponent"
                        },
                        {
                            "name": "StepperModule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PageProposalModule",
            "id": "module-PageProposalModule-6afff51f440cbba5d1923d49813b4036",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/app/src/lib/pages/page-proposal/page-proposal.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PageProposalComponent } from './page-proposal.component';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { DataTableModule } from '../../components/datatable/datatable.module';\r\nimport { ButtonModule } from '../../components/button';\r\nimport { HeaderModule } from '../../components/header';\r\n\r\n@NgModule({\r\n  declarations: [PageProposalComponent],\r\n  imports: [\r\n    CommonModule,\r\n    BrowserAnimationsModule,\r\n    DataTableModule,\r\n    HeaderModule,\r\n    ButtonModule,\r\n    MatTableModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatIconModule,\r\n  ],\r\n  exports: [\r\n    CommonModule,\r\n    BrowserAnimationsModule,\r\n    DataTableModule,\r\n    ButtonModule,\r\n    MatTableModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatIconModule,\r\n    PageProposalComponent,\r\n  ],\r\n})\r\nexport class PageProposalModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "PageProposalComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ButtonModule"
                        },
                        {
                            "name": "DataTableModule"
                        },
                        {
                            "name": "HeaderModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonModule"
                        },
                        {
                            "name": "DataTableModule"
                        },
                        {
                            "name": "PageProposalComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PatrimonyModule",
            "id": "module-PatrimonyModule-5c44768f8beb284cce49e55c6e0d42f9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/app/src/lib/pages/page-patrimony/patrimony.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PatrimonyComponent } from './patrimony.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { NgApexchartsModule } from 'ng-apexcharts';\r\nimport { HeritageModule } from '../heritage/heritage.module';\r\nimport { HeaderModule } from '../../components/header';\r\nimport { SliderToggleModule } from '../../components/slider-toggle';\r\nimport { ButtonModule } from '../../components/button';\r\nimport { CheckBoxModule } from '../../components/check-box';\r\n\r\n@NgModule({\r\n  declarations: [PatrimonyComponent],\r\n  imports: [\r\n    CommonModule,\r\n    HeaderModule,\r\n    SliderToggleModule,\r\n    ButtonModule,\r\n    CheckBoxModule,\r\n    MatIconModule,\r\n    NgApexchartsModule,\r\n    HeritageModule,\r\n  ],\r\n  exports: [\r\n    PatrimonyComponent,\r\n    HeaderModule,\r\n    SliderToggleModule,\r\n    ButtonModule,\r\n    CheckBoxModule,\r\n    MatIconModule,\r\n    NgApexchartsModule,\r\n    HeritageModule,\r\n  ],\r\n})\r\nexport class PatrimonyModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "PatrimonyComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ButtonModule"
                        },
                        {
                            "name": "CheckBoxModule"
                        },
                        {
                            "name": "HeaderModule"
                        },
                        {
                            "name": "HeritageModule"
                        },
                        {
                            "name": "SliderToggleModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonModule"
                        },
                        {
                            "name": "CheckBoxModule"
                        },
                        {
                            "name": "HeaderModule"
                        },
                        {
                            "name": "HeritageModule"
                        },
                        {
                            "name": "PatrimonyComponent"
                        },
                        {
                            "name": "SliderToggleModule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProfileTableModule",
            "id": "module-ProfileTableModule-7e978ed85d8828c6d2fffc8fc97abceb",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/app/src/lib/components/profile-table/profile-table.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProfileTableComponent } from './profile-table.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n@NgModule({\r\n  declarations: [ProfileTableComponent],\r\n  imports: [CommonModule, MatIconModule],\r\n  exports: [ProfileTableComponent, MatIconModule],\r\n})\r\nexport class ProfileTableModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ProfileTableComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ProfileTableComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProgressBarModule",
            "id": "module-ProgressBarModule-5fdf191c4e6ff514856aae9b87821d9e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/app/src/lib/components/progress-bar/progress-bar.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProgressBarComponent } from './progress-bar.component';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@NgModule({\r\n  declarations: [ProgressBarComponent],\r\n  imports: [CommonModule, MatProgressBarModule, MatIconModule],\r\n  exports: [ProgressBarComponent, MatProgressBarModule, MatIconModule],\r\n})\r\nexport class ProgressBarModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ProgressBarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ProgressBarComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProposalMessageModule",
            "id": "module-ProposalMessageModule-5a91add6dd26a889c66009b5481cc7b5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/app/src/lib/components/proposal-message/proposal-message.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ProposalMessageComponent } from './proposal-message.component';\r\n\r\n@NgModule({\r\n  declarations: [ProposalMessageComponent],\r\n  imports: [CommonModule, MatIconModule],\r\n  exports: [ProposalMessageComponent, MatIconModule],\r\n})\r\nexport class ProposalMessageModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ProposalMessageComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ProposalMessageComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "RadioButtonListModule",
            "id": "module-RadioButtonListModule-fb20a2b4f82c341b7c4d9663db615d46",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/app/src/lib/components/radio-button-list/radio-button-list.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RadioButtonListComponent } from './radio-button-list.component';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\n\r\n@NgModule({\r\n  declarations: [RadioButtonListComponent],\r\n  imports: [CommonModule, MatRadioModule],\r\n  exports: [RadioButtonListComponent, MatRadioModule],\r\n})\r\nexport class RadioButtonListModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "RadioButtonListComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "RadioButtonListComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SearchInputModule",
            "id": "module-SearchInputModule-dc2b44086ec317b302db2550202386cb",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/app/src/lib/components/search-input/search-input.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SearchInputComponent } from './search-input.component';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@NgModule({\r\n  declarations: [SearchInputComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n  ],\r\n  exports: [\r\n    SearchInputComponent,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n  ],\r\n})\r\nexport class SearchInputModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SearchInputComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SearchInputComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SelectModule",
            "id": "module-SelectModule-accf76bb0ed49b7032cbfa4d6b438ec7",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/app/src/lib/components/select/select.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SelectComponent } from './select.component';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n@NgModule({\r\n  declarations: [SelectComponent],\r\n  imports: [CommonModule, MatFormFieldModule, MatSelectModule, MatIconModule],\r\n  exports: [\r\n    SelectComponent,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatIconModule,\r\n  ],\r\n})\r\nexport class SelectModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SelectComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SelectComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "id": "module-SharedModule-0bb0ef31ee9c3c2c64867b951a439fde",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/app/src/lib/shared/shared.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [CommonModule],\r\n  exports: [CommonModule],\r\n  schemas: [],\r\n})\r\nexport class SharedModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SliderToggleModule",
            "id": "module-SliderToggleModule-f3c771725ac2a68acf2a32028f3f5ddd",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/app/src/lib/components/slider-toggle/slider-toggle.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SliderToggleComponent } from './slider-toggle.component';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@NgModule({\r\n  declarations: [SliderToggleComponent],\r\n  imports: [CommonModule, MatSlideToggleModule, MatFormFieldModule],\r\n  exports: [SliderToggleComponent, MatSlideToggleModule, MatFormFieldModule],\r\n})\r\nexport class SliderToggleModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SliderToggleComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SliderToggleComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "StepperModule",
            "id": "module-StepperModule-747fd001296222be5a964634809850f8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/app/src/lib/components/new-proposal/stepper.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { StepComponent } from './step/step.component';\r\nimport { StepperComponent } from './stepper.component';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        MatButtonModule,\r\n    ],\r\n    exports: [\r\n        StepComponent,\r\n        StepperComponent,\r\n        MatButtonModule,\r\n    ],\r\n    declarations: [\r\n        StepComponent,\r\n        StepperComponent\r\n    ]\r\n})\r\nexport class StepperModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "StepComponent"
                        },
                        {
                            "name": "StepperComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "StepComponent"
                        },
                        {
                            "name": "StepperComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "StorybookModule",
            "id": "module-StorybookModule-08f892f0b441c616e4bfdb34dded90d5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/app/src/lib/components/profile-table/storybook/storybook.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { StorybookComponent } from './storybook.component';\r\nimport { ProfileTableModule } from '../profile-table.module';\r\n\r\n@NgModule({\r\n  declarations: [ StorybookComponent ],\r\n  imports: [\r\n    CommonModule,\r\n    ProfileTableModule,\r\n  ],\r\n  exports: [\r\n    StorybookComponent,\r\n    ProfileTableModule,\r\n  ]\r\n})\r\nexport class StorybookModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "StorybookComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ProfileTableModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ProfileTableModule"
                        },
                        {
                            "name": "StorybookComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SubHeaderModule",
            "id": "module-SubHeaderModule-5fdf0e42c707cb7051880b65ddd031ab",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/app/src/lib/components/sub-header/sub-header.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SubHeaderComponent } from './sub-header.component';\r\nimport { ButtonModule } from '../button';\r\n\r\n@NgModule({\r\n  declarations: [SubHeaderComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ButtonModule,\r\n  ],\r\n  exports: [SubHeaderComponent]\r\n})\r\nexport class SubHeaderModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SubHeaderComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ButtonModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SubHeaderComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/app/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "datacolumnsAccordion",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/componentes/data-table/data-table.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    key: 'origin',\r\n    name: 'Origen',\r\n    types: { type: 'text' },\r\n  },\r\n  {\r\n    key: 'destiny',\r\n    name: 'Destino',\r\n    types: { type: 'text' },\r\n  },\r\n  {\r\n    key: 'available',\r\n    name: 'Disponible',\r\n    types: { type: 'money' },\r\n  },\r\n  {\r\n    key: 'proposed',\r\n    name: 'Propuesto',\r\n    types: { type: 'money' },\r\n  },\r\n  {\r\n    key: 'multichanel',\r\n    name: 'Multicanalidad',\r\n    types: {\r\n      type: 'toggle',\r\n      settings: {\r\n        label: 'Si',\r\n      },\r\n    },\r\n  },\r\n  {\r\n    key: 'operation',\r\n    name: 'Operación',\r\n    types: { type: 'text' },\r\n  },\r\n  {\r\n    key: 'status',\r\n    name: 'Estado',\r\n    types: { type: 'text' },\r\n  },\r\n  {\r\n    key: 'documentation',\r\n    name: 'Documentación',\r\n    types: {\r\n      type: 'button',\r\n      settings: {\r\n        icon: 'insert_drive_file',\r\n        callback: new Subject(),\r\n      },\r\n    },\r\n  },\r\n]"
            },
            {
                "name": "datasourcesAccordion",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/componentes/data-table/data-table.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    origin: 'Cuenta corriente ES64.98.76.0987.12.1234567890',\r\n    destiny: 'Challenge Cyclical Equity L.',\r\n    available: 50000000,\r\n    proposed: 50000000,\r\n    operation: 'Realizar traspaso/Transferencia Acción directa del cliente',\r\n    status: 'Pendiente de iniciarse',\r\n  },\r\n  {\r\n    origin: 'Cuenta corriente ES64.98.76.0987.12.1234567890',\r\n    destiny: 'Challenge Cyclical Equity L.',\r\n    available: 50000000,\r\n    proposed: 50000000,\r\n    operation: 'Realizar traspaso/Transferencia Acción directa del cliente',\r\n    status: 'Pendiente de iniciarse',\r\n  },\r\n]"
            },
            {
                "name": "datatableActionsMock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/app/src/lib/shared/model/data-table/actions.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ActionsMenuInterface[]",
                "defaultValue": "[\r\n  {\r\n    id: OPTION_EDIT,\r\n    name: 'Editar',\r\n    icon: 'edit',\r\n  },\r\n  {\r\n    id: OPTION_CONSULT,\r\n    name: 'Consultar',\r\n    icon: 'search',\r\n    disabled: true,\r\n  },\r\n  {\r\n    id: OPTION_COPY,\r\n    name: 'Copiar',\r\n    icon: 'content_copy',\r\n  },\r\n  {\r\n    id: OPTION_CANCEL,\r\n    name: 'Anular',\r\n    icon: 'delete',\r\n  },\r\n  {\r\n    id: OPTION_PDF_PROPOSAL,\r\n    name: 'PDF Propuesta',\r\n    icon: 'insert_drive_file',\r\n    disabled: true,\r\n  },\r\n  {\r\n    id: OPTION_PDF_RECORDS,\r\n    name: 'PDF Fichas',\r\n    icon: 'insert_drive_file',\r\n    disabled: true,\r\n  },\r\n]"
            },
            {
                "name": "datatableMock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/app/src/lib/shared/model/data-table/datatable.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "DataTableInterface[]",
                "defaultValue": "[\r\n  {\r\n    id: 285195,\r\n    description: 'Retribución',\r\n    type: 'Inversión MY WORLD',\r\n    amount: 43567.34,\r\n    date: new Date(),\r\n    status: 1,\r\n  },\r\n  {\r\n    id: 285196,\r\n    description: 'Retribución',\r\n    type: 'Inversión MY WORLD',\r\n    amount: 42567,\r\n    date: new Date(),\r\n    status: 2,\r\n  },\r\n  {\r\n    id: 285197,\r\n    description: 'Retribución',\r\n    type: 'Inversión MY WORLD',\r\n    amount: 33667.6,\r\n    date: new Date(),\r\n    status: 1,\r\n  },\r\n  {\r\n    id: 285198,\r\n    description: 'Retribución',\r\n    type: 'Inversión MY WORLD',\r\n    amount: 56633.89,\r\n    date: new Date(),\r\n    status: 2,\r\n  },\r\n]"
            },
            {
                "name": "OPTION_CANCEL",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/app/src/lib/shared/model/data-table/actions.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "4"
            },
            {
                "name": "OPTION_CONSULT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/app/src/lib/shared/model/data-table/actions.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "2"
            },
            {
                "name": "OPTION_COPY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/app/src/lib/shared/model/data-table/actions.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "3"
            },
            {
                "name": "OPTION_EDIT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/app/src/lib/shared/model/data-table/actions.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "1"
            },
            {
                "name": "OPTION_PDF_PROPOSAL",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/app/src/lib/shared/model/data-table/actions.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "5"
            },
            {
                "name": "OPTION_PDF_RECORDS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/app/src/lib/shared/model/data-table/actions.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "6"
            },
            {
                "name": "proposalMock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/app/src/lib/pages/page-proposal/mock/proposal.mock.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "DataTableInterface[]",
                "defaultValue": "[\r\n  {\r\n    id: 285195,\r\n    description: 'Retribución',\r\n    type: 'Inversión MY WORLD',\r\n    amount: 43567.34,\r\n    date: new Date(),\r\n    status: 1,\r\n  },\r\n  {\r\n    id: 285196,\r\n    description: 'Retribución',\r\n    type: 'Inversión MY WORLD',\r\n    amount: 42567,\r\n    date: new Date(),\r\n    status: 2,\r\n  },\r\n  {\r\n    id: 285197,\r\n    description: 'Retribución',\r\n    type: 'Inversión MY WORLD',\r\n    amount: 33667.6,\r\n    date: new Date(),\r\n    status: 1,\r\n  },\r\n  {\r\n    id: 285198,\r\n    description: 'Retribución',\r\n    type: 'Inversión MY WORLD',\r\n    amount: 56633.89,\r\n    date: new Date(),\r\n    status: 2,\r\n  },\r\n]"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/app/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "testObserver",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/componentes/button/button.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new Subject<boolean>()"
            },
            {
                "name": "testObserver",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/componentes/chart-circle/chart-circle.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new Subject<boolean>()"
            },
            {
                "name": "testObserver",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/componentes/check-box/checkbox.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new Subject<boolean>()"
            },
            {
                "name": "testObserver",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/componentes/new-proposal/new-proposal.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new Subject<boolean>()"
            },
            {
                "name": "testObserver",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/componentes/sub-header/sub-header.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new Subject<boolean>()"
            },
            {
                "name": "testObserverBig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/componentes/button-big/button-big.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new Subject<any>()"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "ChartOptions",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "projects/app/src/lib/components/chart-bar/chart-bar.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Types",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"text\" | \"money\" | \"date\" | \"select\" | \"toggle\" | string",
                "file": "projects/app/src/lib/shared/interfaces/data-columns.interface.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 185
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/app/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/app/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/app/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "stories/componentes/data-table/data-table.ts": [
                {
                    "name": "datacolumnsAccordion",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/componentes/data-table/data-table.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    key: 'origin',\r\n    name: 'Origen',\r\n    types: { type: 'text' },\r\n  },\r\n  {\r\n    key: 'destiny',\r\n    name: 'Destino',\r\n    types: { type: 'text' },\r\n  },\r\n  {\r\n    key: 'available',\r\n    name: 'Disponible',\r\n    types: { type: 'money' },\r\n  },\r\n  {\r\n    key: 'proposed',\r\n    name: 'Propuesto',\r\n    types: { type: 'money' },\r\n  },\r\n  {\r\n    key: 'multichanel',\r\n    name: 'Multicanalidad',\r\n    types: {\r\n      type: 'toggle',\r\n      settings: {\r\n        label: 'Si',\r\n      },\r\n    },\r\n  },\r\n  {\r\n    key: 'operation',\r\n    name: 'Operación',\r\n    types: { type: 'text' },\r\n  },\r\n  {\r\n    key: 'status',\r\n    name: 'Estado',\r\n    types: { type: 'text' },\r\n  },\r\n  {\r\n    key: 'documentation',\r\n    name: 'Documentación',\r\n    types: {\r\n      type: 'button',\r\n      settings: {\r\n        icon: 'insert_drive_file',\r\n        callback: new Subject(),\r\n      },\r\n    },\r\n  },\r\n]"
                },
                {
                    "name": "datasourcesAccordion",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/componentes/data-table/data-table.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    origin: 'Cuenta corriente ES64.98.76.0987.12.1234567890',\r\n    destiny: 'Challenge Cyclical Equity L.',\r\n    available: 50000000,\r\n    proposed: 50000000,\r\n    operation: 'Realizar traspaso/Transferencia Acción directa del cliente',\r\n    status: 'Pendiente de iniciarse',\r\n  },\r\n  {\r\n    origin: 'Cuenta corriente ES64.98.76.0987.12.1234567890',\r\n    destiny: 'Challenge Cyclical Equity L.',\r\n    available: 50000000,\r\n    proposed: 50000000,\r\n    operation: 'Realizar traspaso/Transferencia Acción directa del cliente',\r\n    status: 'Pendiente de iniciarse',\r\n  },\r\n]"
                }
            ],
            "projects/app/src/lib/shared/model/data-table/actions.model.ts": [
                {
                    "name": "datatableActionsMock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/app/src/lib/shared/model/data-table/actions.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActionsMenuInterface[]",
                    "defaultValue": "[\r\n  {\r\n    id: OPTION_EDIT,\r\n    name: 'Editar',\r\n    icon: 'edit',\r\n  },\r\n  {\r\n    id: OPTION_CONSULT,\r\n    name: 'Consultar',\r\n    icon: 'search',\r\n    disabled: true,\r\n  },\r\n  {\r\n    id: OPTION_COPY,\r\n    name: 'Copiar',\r\n    icon: 'content_copy',\r\n  },\r\n  {\r\n    id: OPTION_CANCEL,\r\n    name: 'Anular',\r\n    icon: 'delete',\r\n  },\r\n  {\r\n    id: OPTION_PDF_PROPOSAL,\r\n    name: 'PDF Propuesta',\r\n    icon: 'insert_drive_file',\r\n    disabled: true,\r\n  },\r\n  {\r\n    id: OPTION_PDF_RECORDS,\r\n    name: 'PDF Fichas',\r\n    icon: 'insert_drive_file',\r\n    disabled: true,\r\n  },\r\n]"
                },
                {
                    "name": "OPTION_CANCEL",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/app/src/lib/shared/model/data-table/actions.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "4"
                },
                {
                    "name": "OPTION_CONSULT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/app/src/lib/shared/model/data-table/actions.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "2"
                },
                {
                    "name": "OPTION_COPY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/app/src/lib/shared/model/data-table/actions.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "3"
                },
                {
                    "name": "OPTION_EDIT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/app/src/lib/shared/model/data-table/actions.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "1"
                },
                {
                    "name": "OPTION_PDF_PROPOSAL",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/app/src/lib/shared/model/data-table/actions.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "5"
                },
                {
                    "name": "OPTION_PDF_RECORDS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/app/src/lib/shared/model/data-table/actions.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "6"
                }
            ],
            "projects/app/src/lib/shared/model/data-table/datatable.model.ts": [
                {
                    "name": "datatableMock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/app/src/lib/shared/model/data-table/datatable.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableInterface[]",
                    "defaultValue": "[\r\n  {\r\n    id: 285195,\r\n    description: 'Retribución',\r\n    type: 'Inversión MY WORLD',\r\n    amount: 43567.34,\r\n    date: new Date(),\r\n    status: 1,\r\n  },\r\n  {\r\n    id: 285196,\r\n    description: 'Retribución',\r\n    type: 'Inversión MY WORLD',\r\n    amount: 42567,\r\n    date: new Date(),\r\n    status: 2,\r\n  },\r\n  {\r\n    id: 285197,\r\n    description: 'Retribución',\r\n    type: 'Inversión MY WORLD',\r\n    amount: 33667.6,\r\n    date: new Date(),\r\n    status: 1,\r\n  },\r\n  {\r\n    id: 285198,\r\n    description: 'Retribución',\r\n    type: 'Inversión MY WORLD',\r\n    amount: 56633.89,\r\n    date: new Date(),\r\n    status: 2,\r\n  },\r\n]"
                }
            ],
            "projects/app/src/lib/pages/page-proposal/mock/proposal.mock.ts": [
                {
                    "name": "proposalMock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/app/src/lib/pages/page-proposal/mock/proposal.mock.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableInterface[]",
                    "defaultValue": "[\r\n  {\r\n    id: 285195,\r\n    description: 'Retribución',\r\n    type: 'Inversión MY WORLD',\r\n    amount: 43567.34,\r\n    date: new Date(),\r\n    status: 1,\r\n  },\r\n  {\r\n    id: 285196,\r\n    description: 'Retribución',\r\n    type: 'Inversión MY WORLD',\r\n    amount: 42567,\r\n    date: new Date(),\r\n    status: 2,\r\n  },\r\n  {\r\n    id: 285197,\r\n    description: 'Retribución',\r\n    type: 'Inversión MY WORLD',\r\n    amount: 33667.6,\r\n    date: new Date(),\r\n    status: 1,\r\n  },\r\n  {\r\n    id: 285198,\r\n    description: 'Retribución',\r\n    type: 'Inversión MY WORLD',\r\n    amount: 56633.89,\r\n    date: new Date(),\r\n    status: 2,\r\n  },\r\n]"
                }
            ],
            "stories/componentes/button/button.ts": [
                {
                    "name": "testObserver",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/componentes/button/button.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new Subject<boolean>()"
                }
            ],
            "stories/componentes/chart-circle/chart-circle.ts": [
                {
                    "name": "testObserver",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/componentes/chart-circle/chart-circle.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new Subject<boolean>()"
                }
            ],
            "stories/componentes/check-box/checkbox.ts": [
                {
                    "name": "testObserver",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/componentes/check-box/checkbox.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new Subject<boolean>()"
                }
            ],
            "stories/componentes/new-proposal/new-proposal.ts": [
                {
                    "name": "testObserver",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/componentes/new-proposal/new-proposal.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new Subject<boolean>()"
                }
            ],
            "stories/componentes/sub-header/sub-header.ts": [
                {
                    "name": "testObserver",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/componentes/sub-header/sub-header.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new Subject<boolean>()"
                }
            ],
            "stories/componentes/button-big/button-big.ts": [
                {
                    "name": "testObserverBig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/componentes/button-big/button-big.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new Subject<any>()"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/app/src/lib/components/chart-bar/chart-bar.component.ts": [
                {
                    "name": "ChartOptions",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "projects/app/src/lib/components/chart-bar/chart-bar.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "projects/app/src/lib/shared/interfaces/data-columns.interface.ts": [
                {
                    "name": "Types",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"text\" | \"money\" | \"date\" | \"select\" | \"toggle\" | string",
                    "file": "projects/app/src/lib/shared/interfaces/data-columns.interface.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 185
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/app/src/lib/components/accordion/accordion-panel/accordion-panel.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AccordionPanelComponent",
                "coveragePercent": 11,
                "coverageCount": "2/17",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/components/accordion/accordion-storybook/accordion-storybook.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AccordionStorybookComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/components/accordion/accordion.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AccordionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/components/alert/alert.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AlertComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/components/box-items/box-items.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BoxItemsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/components/button-big/button-big.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonBigComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/components/button-double/button-double.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonDoubleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/components/chart-bar/chart-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChartBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/components/chart-circle/chart-circle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChartCircleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/components/check-box/check-box.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckBoxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/components/check-box/check-box.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ChkAction",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/components/check-box/check-box.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Settings",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/components/customer-info/customer-info.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomerInfoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/components/datatable/datatable.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DatatableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/components/datatable/datatable.module.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CustomPaginator",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/components/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/components/new-proposal/step/step.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StepComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/components/new-proposal/stepper.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StepperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/components/new-proposal/storybook/new-proposal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NewProposalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/components/profile-table/profile-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProfileTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/components/profile-table/storybook/storybook.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StorybookComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/components/progress-bar/progress-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProgressBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/components/proposal-message/proposal-message.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProposalMessageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/components/radio-button-list/radio-button-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioButtonListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/components/search-input/search-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/components/select/select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/components/slider-toggle/slider-toggle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SliderToggleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/components/sub-header/sub-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SubHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/pages/analytics/analytics.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AnalyticsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/pages/analytics/interfaces/analytics.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AnalyticsInterface",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/pages/analytics/models/analytics.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AnalyticsModel",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/pages/heritage/heritage.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeritageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/pages/heritage/model/heritage.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "HeritageModel",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/pages/page-home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/pages/page-patrimony/patrimony.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PatrimonyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/pages/page-proposal/mock/proposal.mock.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "proposalMock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/pages/page-proposal/page-proposal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageProposalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/shared/interfaces/box.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SettingBoxInterface",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/shared/interfaces/button.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ButtonInterface",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/shared/interfaces/data-columns.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DataColumns",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/shared/interfaces/data-table/actions.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ActionsMenuInterface",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/shared/interfaces/data-table/datatable.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DataTableInterface",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/shared/interfaces/menuitems.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MenuItems",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/shared/interfaces/progress.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProgressInfoInterface",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/shared/interfaces/progress.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SettingProgressInterface",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/shared/interfaces/select/select.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SettingsInterface",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/shared/interfaces/toggle.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ToggleSettingsInterface",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/shared/interfaces/user.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UserInterface",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/shared/model/data-table/actions.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "datatableActionsMock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/shared/model/data-table/actions.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OPTION_CANCEL",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/shared/model/data-table/actions.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OPTION_CONSULT",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/shared/model/data-table/actions.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OPTION_COPY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/shared/model/data-table/actions.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OPTION_EDIT",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/shared/model/data-table/actions.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OPTION_PDF_PROPOSAL",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/shared/model/data-table/actions.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OPTION_PDF_RECORDS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/shared/model/data-table/datatable.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "datatableMock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/lib/shared/utils/constants.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CONSTANTS",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/app/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/componentes/button-big/button-big.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "testObserverBig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/componentes/button/button.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "testObserver",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/componentes/chart-circle/chart-circle.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "testObserver",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/componentes/check-box/checkbox.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "testObserver",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/componentes/data-table/data-table.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "datacolumnsAccordion",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/componentes/data-table/data-table.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "datasourcesAccordion",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/componentes/new-proposal/new-proposal.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "testObserver",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/componentes/sub-header/sub-header.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "testObserver",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}